{
	"info": {
		"_postman_id": "cd004874-8790-4154-97bc-cdd8143fd983",
		"name": "Velt REST API v2",
		"description": "# üöÄ Velt REST API v2\n\nThis collection contains all Velt REST API v2 endpoints for managing organizations, documents, folders, users, comments, notifications, and more.\n\n## üîê Authentication\n\nAll requests require two headers:\n- `x-velt-api-key`: Your API key from the Velt Console\n- `x-velt-auth-token`: Your Auth Token\n\n## üìù Getting Started\n\n1. **Set up variables**: Click on the collection and go to the Variables tab\n   - Set `api_key` to your Velt API key\n   - Set `auth_token` to your Velt Auth Token\n   - Base URL is already set to `https://api.velt.dev`\n\n2. **Choose an endpoint**: Navigate through the folders to find the endpoint you need\n\n3. **Update request body**: Replace placeholder values (like `yourOrganizationId`) with your actual data\n\n4. **Send request**: Click Send to execute the request\n\n## üìö Documentation\n\nFull documentation: https://docs.velt.dev/api-reference/rest-apis/v2\n\n## üîó Base URL\n\n`https://api.velt.dev/v2`\n\n## ‚ö†Ô∏è Important Notes\n\n- Most endpoints use POST method\n- All request/response bodies are in JSON format\n- Responses include either a `result` object (success) or `error` object (failure)\n- Some endpoints require advanced queries to be enabled in the Velt Console",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49055206",
		"_collection_link": "https://yoen-d6f55d82-1633581.postman.co/workspace/2cc57d80-0264-4b64-8eb6-430f5b586fbb/collection/49055206-cd004874-8790-4154-97bc-cdd8143fd983?action=share&source=collection_link&creator=49055206"
	},
	"item": [
		{
			"name": "Organizations",
			"description": "Organizations are the top-level containers in Velt. All documents, folders, and users belong to an organization.\n\n**Available Operations:**\n- Add: Create new organizations\n- Get: Retrieve organization details\n- Update: Modify organization metadata\n- Delete: Remove organizations\n- Update Disabled State: Enable/disable organizations",
			"item": [
				{
					"name": "Add Organizations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"data\": {\n      \"organizations\": [\n        {\n          \"organizationId\": \"yourOrganizationId\",\n          \"organizationName\": \"Your Organization Name\"\n        }\n      ]\n    }\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"add"
							]
						},
						"description": "Use this API to add new organizations and its metadata.\n\n**Key Points:**\n- Organizations serve as the top-level container for all your documents and users\n- If an organization already exists, this will update its metadata\n- Organization ID must be unique within your workspace\n\n**Response:**\nReturns a success status with the organization ID upon successful creation.\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/organizations/add-organizations"
					},
					"response": []
				},
				{
					"name": "Get Organizations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationIds\": [\n      \"yourOrganizationId\"\n    ],\n    \"pageSize\": 1000,\n    \"pageToken\": \"pageToken\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"get"
							]
						},
						"description": "Use this API to retrieve specific organizations by organization IDs.\n\n**Key Points:**\n- Retrieve up to 30 organization IDs at a time\n- Supports pagination with pageToken\n- If no organizationIds provided, returns all organizations\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Update Organizations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizations\": [\n      {\n        \"organizationId\": \"yourOrganizationId\",\n        \"organizationName\": \"Your Updated Organization Name\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"update"
							]
						},
						"description": "Use this API to update existing organization(s) metadata.\n\n**Key Points:**\n- Update organization name and other metadata fields\n- Organization must already exist\n- Can update multiple organizations in a single request\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/organizations/update-organizations"
					},
					"response": []
				},
				{
					"name": "Delete Organizations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationIds\": [\n      \"yourOrganizationId1\",\n      \"yourOrganizationId2\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"delete"
							]
						},
						"description": "Use this API to delete specific organization(s) data by their IDs.\n\n**Warning:**\nThis will permanently delete all data associated with the organization including documents, folders, and user access.\n\n**Key Points:**\n- Can delete multiple organizations in one request\n- Returns individual status for each organization\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/organizations/delete-organizations"
					},
					"response": []
				},
				{
					"name": "Update Disabled State for Organizations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationIds\": [\"yourOrganizationId1\",\"yourOrganizationId2\"],\n    \"disabled\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/access/disablestate/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"access",
								"disablestate",
								"update"
							]
						},
						"description": "Use this API to enable or disable organizations without deleting them.\n\n**Key Points:**\n- Disabled organizations prevent all user access while preserving data\n- Set `disabled` to `true` to disable, `false` to enable\n- Useful for temporary suspension of organizations\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/organizations/update-organization-disable-state"
					},
					"response": []
				}
			]
		},
		{
			"name": "Folders",
			"description": "Folders help organize documents within an organization. You can create nested folder structures and manage access control at the folder level.\n\n**Available Operations:**\n- Add: Create new folders\n- Get: Retrieve folder details\n- Update: Modify folder metadata\n- Delete: Remove folders\n- Update Access: Control folder access permissions",
			"item": [
				{
					"name": "Add Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"folders\": [\n      {\n        \"folderId\": \"yourFolderId\", \n        \"folderName\": \"yourFolderName\",\n        \"parentFolderId\": \"yourParentFolderId\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/folders/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"folders",
								"add"
							]
						},
						"description": "Use this API to create a new folder in an organization.\n\n**Key Points:**\n- Folders help organize documents within an organization\n- Can create nested folders using parentFolderId\n- If organization doesn't exist, set createOrganization flag\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Get Folders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"folderId\": \"yourFolderId\",\n    \"maxDepth\": 3\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/folders/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"folders",
								"get"
							]
						},
						"description": "Use this API to retrieve the given folder's metadata and its subfolders. You can retrieve nested subfolders at any depth level using the `maxDepth` parameter. The response includes an `ancestors` array showing the parent hierarchy and an `inheritAccessFromParent` field indicating whether access is inherited.\n\n**Optional Parameters:**\n- `folderId`: Folder ID to retrieve a specific folder and its subfolders. If not provided, all folders in the organization will be retrieved.\n- `maxDepth`: Maximum depth level for retrieving nested subfolders. If not provided, only immediate subfolders are retrieved.\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Update Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"folders\": [\n        {\n          \"folderId\": \"yourFolderId\", \n          \"folderName\": \"yourFolderName\",\n          \"parentFolderId\": \"yourParentFolderId\"\n        }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/folders/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"folders",
								"update"
							]
						},
						"description": "Use this API to:\n1. Update metadata of a folder within an organization.\n2. Move a folder and its contents to a different parent folder.\n\n**Key Points:**\n- When moving a folder to a different parent by updating the `parentFolderId`, the API automatically updates the folder's `ancestors` array and `accessType`, and propagates these changes to all subfolders within the moved folder.\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Delete Folder",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"folderId\": \"yourFolderId\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/folders/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"folders",
								"delete"
							]
						},
						"description": "Delete a folder and all its contents (documents and subfolders).\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Update Access for Folders",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"folderIds\": [\"yourFolderId1\", \"yourFolderId2\"],\n    \"accessType\": \"organizationPrivate\",\n    \"inheritFromParent\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/folders/access/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"folders",
								"access",
								"update"
							]
						},
						"description": "Use this API to update the access type for a single or multiple folders at once.\n\n**Key Points:**\n- Access types: `organizationPrivate`, `restricted`, `public`\n- Use `inheritFromParent` to configure the folder to inherit access permissions from its parent folder\n- You can update the default access type for all folders in the Velt Console\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/folders/update-folder-access"
					},
					"response": []
				}
			]
		},
		{
			"name": "Documents",
			"description": "Documents represent individual pages or files in your application where collaboration features are enabled.\n\n**Available Operations:**\n- Add: Create new documents\n- Get: Retrieve document details\n- Update: Modify document metadata\n- Delete: Remove documents\n- Move: Move documents between folders\n- Update Access: Control document access\n- Update Disabled State: Enable/disable documents",
			"item": [
				{
					"name": "Add Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"createOrganization\": true,\n    \"documents\": [\n      {\n        \"documentId\": \"yourDocumentId\",\n        \"documentName\": \"Your Document Name\"\n      }\n    ],\n    \"folderId\": \"yourFolderId\",\n    \"createFolder\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"add"
							]
						},
						"description": "Use this API to add documents with metadata to an organization.\n\n**Optional Parameters:**\n- `createOrganization`: If set to true, a new organization will be created (if it doesn't exist) before the document(s) are created\n- `folderId`: Folder ID to add the documents to\n- `createFolder`: If set to true and `folderId` is provided but doesn't exist, a new folder will be created before the document(s) are created\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/documents/add-documents"
					},
					"response": []
				},
				{
					"name": "Get Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId1\", \"yourDocumentId2\"],\n    \"folderId\": \"yourFolderId\",\n    \"pageSize\": 20,\n    \"pageToken\": \"8740648311207869\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"get"
							]
						},
						"description": "Use this API to retrieve specific documents or all documents from an organization.\n\n**Filtering Options:**\n- `documentIds`: Array of Document IDs (Limit: Only 30 IDs can be passed at a time)\n- `folderId`: Folder ID to filter documents by the given folder ID\n- Supports pagination with `pageSize` and `pageToken`\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Update Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documents\": [\n      {\n        \"documentId\": \"yourDocumentId\",\n        \"documentName\": \"Your Document Name\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"update"
							]
						},
						"description": "Use this API to update metadata of documents within an organization.\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/documents/update-documents"
					},
					"response": []
				},
				{
					"name": "Delete Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId1\", \"yourDocumentId2\"]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"delete"
							]
						},
						"description": "Use this API to delete specific documents from an organization.\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/documents/delete-documents"
					},
					"response": []
				},
				{
					"name": "Move Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId1\", \"yourDocumentId2\"],\n    \"folderId\": \"targetFolderId\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/move",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"move"
							]
						},
						"description": "Use this API to move documents to a different folder within an organization.\n\n**Key Points:**\n- Can move up to 30 documents at a time\n- Documents are moved to the specified folder ID\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/documents/move-documents"
					},
					"response": []
				},
				{
					"name": "Update Access for Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId1, yourDocumentId2\"],\n    \"accessType\": \"organizationPrivate\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/access/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"access",
								"update"
							]
						},
						"description": "Use this API to update the access type for a single or multiple documents at once.\n\n**Key Points:**\n- Access types: `organizationPrivate`, `restricted`, `public`\n- You can update the default access type for all documents in the Velt Console\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/documents/update-document-access"
					},
					"response": []
				},
				{
					"name": "Update Disabled State for Documents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId\"],\n    \"disabled\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/documents/access/disablestate/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"documents",
								"access",
								"disablestate",
								"update"
							]
						},
						"description": "Use this API to enable or disable both read and write access for all users.\n\n**Use Case:**\n- When a customer's trial or subscription has ended and you want to disable their access to the Velt data, you could use this to disable access to specific documents.\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/documents/update-document-disable-state"
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"description": "Manage users and their access to organizations, folders, and documents. Users can be assigned different access roles (viewer or editor).\n\n**Available Operations:**\n- Add: Add users to organization/folder/document\n- Get: Retrieve user information\n- Update: Modify user details and access roles\n- Delete: Remove users\n\n**Access Roles:**\n- viewer: Read-only access\n- editor: Read and write access",
			"item": [
				{
					"name": "Add Users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"createOrganization\": true,\n    \"documentId\": \"yourDocumentId\",\n    \"createDocument\": true,\n    \"folderId\": \"yourFolderId\",\n    \"createFolder\": true,\n    \"users\": [\n      {\n        \"userId\": \"yourUserId1\",\n        \"name\": \"User Name\",\n        \"email\": \"user@email.com\",\n        \"accessRole\": \"editor\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"add"
							]
						},
						"description": "Use this API to add Users to:\n1. **Organization:** This will provide them access to all the documents in the organization unless the document has `restricted` access type. It will also show users in the contact list of the organization.\n2. **Folder:** This will provide them access to all the documents in the folder. If you pass the `folderId`, then the users will be added to the folder and not the organization.\n3. **Document:** This will provide them access to the specified document. It will also show users in the contact list of the document. If you pass the `documentId`, then the users will be added to the document and not the organization or folder.\n\n**Key Points:**\n- Set `accessRole` to `viewer` (read-only) or `editor` (read/write) to define user's capabilities\n- If organization does not exist, it will be created\n- User's `initial` will be automatically created from the name field if not provided\n\n**Optional Parameters:**\n- `createOrganization`: If set to true, a new organization will be created (if it doesn't exist) before users are added\n- `createDocument`: If set to true and `documentId` is provided but doesn't exist, a new document will be created before users are added\n- `folderId`: Folder ID to add users to a specific folder. Either provide `documentId` or `folderId`\n- `createFolder`: If set to true and `folderId` is provided but doesn't exist, a new folder will be created before users are added\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/users/add-users"
					},
					"response": []
				},
				{
					"name": "Get Users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"get"
							]
						},
						"description": "Use this API to retrieve users based on various filters such as organization ID, document ID, organization user group IDs or user IDs. You can use these filters in various combinations to get the desired users.\n\n**Filtering Options:**\n- `documentId`: Document ID\n- `folderId`: Folder ID (Either provide `documentId` or `folderId`)\n- `userIds`: Array of User IDs (Limit: Only 30 items at a time)\n- `organizationUserGroupIds`: Array of Organization User Group IDs (Only 30 items at a time)\n- `allDocuments`: If true, all document users within the organization will be retrieved\n- `groupByDocumentId`: If true, the response will be grouped by document ID\n- Supports pagination with `pageSize` and `pageToken`\n\n**Requirements:**\n-"
					},
					"response": []
				},
				{
					"name": "Update Users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"users\": [\n      {\n        \"userId\": \"yourUserId1\",\n        \"name\": \"User Name\",\n        \"email\": \"user@email.com\",\n        \"accessRole\": \"editor\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"update"
							]
						},
						"description": "Use this API to update user metadata based on various filters such as organization ID, document ID, folder ID and user IDs. You can use these filters in various combinations to get the desired results. The user metadata such as name, email etc can be updated.\n\n**Key Points:**\n- Set `accessRole` to `viewer` (read-only) or `editor` (read/write) to define user's capabilities\n- Can update users at organization, document, or folder level\n- Either provide `documentId` or `folderId`\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/users/update-users"
					},
					"response": []
				},
				{
					"name": "Delete Users",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"userIds\": [\n      \"yourUserId1\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"delete"
							]
						},
						"description": "Use this API to remove Users from:\n1. **Organization:** This will remove their access from all the documents and data in the organization. It will also remove these users from the contact list of the organization.\n2. **Document:** This will remove their access from the specified document. It will also remove these users from the contact list of the document. If you pass the `documentId`, then the users will be removed from the document.\n3. **Folder:** This will remove their access from the specified folder. Either provide `documentId` or `folderId`.\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/users/delete-users"
					},
					"response": []
				}
			]
		},
		{
			"name": "User Groups",
			"description": "User Groups allow you to organize users into teams and manage permissions collectively.\n\n**Available Operations:**\n- Add User Groups: Create new groups\n- Add Users to Groups: Add users to existing groups\n- Delete Users from Groups: Remove users from groups",
			"item": [
				{
					"name": "Add User Groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"organizationUserGroups\": [\n      {\n        \"groupId\": \"engineering\",\n        \"groupName\": \"Engineering\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/usergroups/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"usergroups",
								"add"
							]
						},
						"description": "Use this API to add organization user groups to a specific organization.\n\n**Optional Parameters:**\n- `createOrganization`: If set to true, a new organization will be created (if it doesn't exist) before the group(s) are created\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/user-groups/add-groups"
					},
					"response": []
				},
				{
					"name": "Add Users to Groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"organizationUserGroupId\": \"yourGroupId\",\n    \"userIds\": [\"yourUserId1\"]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/usergroups/users/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"usergroups",
								"users",
								"add"
							]
						},
						"description": "Use this API to add users to a specific organization user group.\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/user-groups/add-users-to-group"
					},
					"response": []
				},
				{
					"name": "Delete Users from Groups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\"data\":{\"organizationId\":\"yourOrganizationId\",\"organizationUserGroupId\":\"yourGroupId\",\"userIds\":[\"yourUserId1\"]}}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/organizations/usergroups/users/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"organizations",
								"usergroups",
								"users",
								"delete"
							]
						},
						"description": "Use this API to delete users from a specific organization user group.\n\n**Optional Parameters:**\n- `deleteAll`: If true, all users in the group will be deleted\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/user-groups/delete-users-from-group"
					},
					"response": []
				}
			]
		},
		{
			"name": "Comments Feature",
			"description": "Manage comments and comment annotations in your application. Comments can be attached to elements, text, or pages.\n\n**Two Types:**\n- Comment Annotations: The container that holds comments and metadata (location, status, priority, etc.)\n- Comments: Individual messages within a comment annotation (thread)",
			"item": [
				{
					"name": "Comment Annotations",
					"description": "Comment Annotations are containers for comment threads. They include location data, status, priority, and other metadata.\n\n**Available Operations:**\n- Add: Create new comment annotations\n- Get: Retrieve comment annotations\n- Update: Modify annotation metadata (status, priority, assignee)\n- Delete: Remove comment annotations\n- Get Count: Get comment counts by status",
					"item": [
						{
							"name": "Add Comment Annotations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"commentAnnotations\": [\n      {\n        \"annotationId\": \"customAnnotationId\",\n        \"location\": {\n          \"id\": \"yourLocationId\",\n          \"locationName\": \"yourLocationName\"\n        },\n        \"targetElement\": {\n          \"elementId\": \"yourElementId\",\n          \"targetText\": \"Your Target Text\",\n          \"occurrence\": 1,\n          \"selectAllContent\": false\n        },\n        \"commentData\": [\n          {\n            \"commentId\": 12345,\n            \"commentText\": \"Sample Comment with {{userId}} tagged\",\n            \"commentHtml\": \"<div>Sample Comment</div>\",\n            \"context\": {\n              \"customKey\": \"customValue\"\n            },\n            \"isCommentResolverUsed\": false,\n            \"isCommentTextAvailable\": true,\n            \"triggerNotification\": false,\n            \"from\": {\n              \"userId\": \"yourUserId\",\n              \"name\": \"yourUserName\",\n              \"email\": \"yourUserEmail\"\n            },\n            \"createdAt\": 1640995200000,\n            \"lastUpdated\": 1640995200000,\n            \"taggedUserContacts\": [\n              {\n                \"userId\": \"taggedUserId\",\n                \"contact\": {\n                  \"userId\": \"taggedUserId\",\n                  \"name\": \"Tagged User Name\",\n                  \"email\": \"tagged@example.com\"\n                }\n              }\n            ]\n          }\n        ]\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/add",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"add"
									]
								},
								"description": "Use this API to add comment annotations to a document within an organization.\n- You can add comments on an element, text or page.\n- You can provide HTML or text content.\n- Additional filters can be applied using location IDs.\n\n**Optional Parameters for commentAnnotations:**\n- `annotationId`: Custom Annotation ID. If not provided, Velt will generate a unique ID\n\n**Optional Parameters for commentData:**\n- `commentId`: Custom Comment ID. If not provided, Velt will generate a unique ID\n- `context`: Custom key/value metadata object for storing additional information\n- `isCommentResolverUsed`: Use for self-hosting comments data\n- `isCommentTextAvailable`: Use for self-hosting comments data\n- `triggerNotification`: When enabled, triggers in-app notifications, email notifications, and webhooks (default: false)\n- `createdAt`: Created At timestamp (in milliseconds since epoch)\n- `lastUpdated`: Last Updated timestamp (in milliseconds since epoch)\n- `taggedUserContacts`: Array of tagged user contacts for replacing {{userId}} in commentText\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comment-annotations/add-comment-annotations"
							},
							"response": []
						},
						{
							"name": "Get Comment Annotations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"documentIds\": [\"yourDocumentId1\", \"yourDocumentId2\"],\n    \"groupByDocumentId\": true,\n    \"folderId\": \"yourFolderId\",\n    \"locationIds\": [\"locationx\"],\n    \"annotationIds\": [\"annotationId1\"],\n    \"userIds\": [\"yourUserId\"],\n    \"statusIds\": [\"OPEN\", \"IN_PROGRESS\"],\n    \"updatedAfter\": 1640995200000,\n    \"updatedBefore\": 1740995200000,\n    \"createdAfter\": 1640995200000,\n    \"createdBefore\": 1740995200000,\n    \"pageSize\": 10,\n    \"pageToken\": \"1720441573192\"\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/get",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"get"
									]
								},
								"description": "Use this API to retrieve comment annotations from a document within an organization. Additional filters can be applied using location IDs, annotation IDs, or user IDs.\n\n**Filtering Options:**\n- `documentId`: Single document ID\n- `documentIds`: Array of Document IDs (Limit: Only 30 IDs at a time)\n- `groupByDocumentId`: Data will be grouped by document ID\n- `folderId`: Folder ID to filter annotations by the folder\n- `locationIds`: Array of Location IDs (Limit: Only 30 IDs at a time)\n- `annotationIds`: Array of Annotation IDs (Limit: Only 30 IDs at a time)\n- `userIds`: Array of User IDs (Limit: Only 30 IDs at a time)\n- `statusIds`: Status IDs of the annotations to filter on\n- `updatedAfter`/`updatedBefore`: Filter by lastUpdated timestamp (milliseconds)\n- `createdAfter`/`createdBefore`: Filter by createdAt timestamp (milliseconds)\n- Supports pagination with `pageSize` and `pageToken`\n\n**Requirements:**\n-"
							},
							"response": []
						},
						{
							"name": "Update Comment Annotations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"updatedData\": {\n      \"status\": {\n        \"type\": \"ongoing\"\n      }\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/update",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"update"
									]
								},
								"description": "Use this API to update comment annotations in a document within an organization. Additional filters can be applied using location IDs, annotation IDs, or user IDs.\n\n**Key Points:**\n- Can update annotation metadata such as status, location, targetElement, priority, assignee, and more\n- Supports filtering by locationIds, annotationIds, and userIds\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comment-annotations/update-comment-annotations"
							},
							"response": []
						},
						{
							"name": "Delete Comment Annotations",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"locationIds\": [\"locationx\"],\n    \"annotationIds\": [\"yourAnnotationId1\", \"yourAnnotationId2\"],\n    \"userIds\": [\"yourUserId\"]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/delete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"delete"
									]
								},
								"description": "Use this API to delete comment annotations from a document within an organization. Additional filters can be applied using location IDs, annotation IDs, or user IDs.\n\n**Filtering Options:**\n- `locationIds`: Array of Location IDs\n- `annotationIds`: Array of Annotation IDs\n- `userIds`: Array of User IDs\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comment-annotations/delete-comment-annotations"
							},
							"response": []
						},
						{
							"name": "Get Comment Annotations Count",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"ORG_ID\",\n    \"documentIds\": [\"DOC_1\", \"DOC_2\"],\n    \"userId\": \"1.1\",\n    \"statusIds\": [\"OPEN\", \"IN_PROGRESS\"]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/count/get",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"count",
										"get"
									]
								},
								"description": "Use this API to retrieve the count of comment annotations for specified documents, including both total and unread counts.\n\n**Key Points:**\n- Limit: Only 30 document IDs can be passed at a time\n- Can filter by status IDs\n- Returns total and unread counts per document\n\n**Requirements:**\n-"
							},
							"response": []
						}
					]
				},
				{
					"name": "Comments",
					"description": "Individual comments within a comment annotation. Each comment represents a message in the thread.\n\n**Available Operations:**\n- Add: Add new comments to an annotation\n- Get: Retrieve comments from an annotation\n- Update: Edit comment content\n- Delete: Remove comments",
					"item": [
						{
							"name": "Add Comments",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"string (required)\",\n    \"createOrganization\": {\n      \"organizationName\": \"string (optional)\",\n      \"organizationType\": \"string (optional)\"\n    },\n    \"documentId\": \"string (required)\",\n    \"createDocument\": {\n      \"documentName\": \"string (optional)\",\n      \"documentType\": \"string (optional)\"\n    },\n    \"annotationId\": \"string (required)\",\n    \"commentData\": [\n      {\n        \"commentText\": \"string (required)\",\n        \"commentHtml\": \"string (optional)\",\n        \"from\": {\n          \"userId\": \"string (required)\",\n          \"userName\": \"string (optional)\",\n          \"userEmail\": \"string (optional)\"\n        },\n        \"metadata\": {\n          \"key\": \"value (optional)\"\n        }\n      }\n    ]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/comments/add",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"comments",
										"add"
									]
								},
								"description": "Use this API to add new comments to an existing comment annotation.\n\n**Key Points:**\n- Add one or multiple comments to an annotation thread\n- Supports both text and HTML content\n- Can include user mentions, metadata, and trigger notifications\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comments/add-comments"
							},
							"response": []
						},
						{
							"name": "Get Comments",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"string (required)\",\n    \"documentId\": \"string (required)\",\n    \"annotationId\": \"string (required)\",\n    \"userIds\": [\"string (optional)\", \"string (optional)\"],\n    \"commentIds\": [12345, 67890]\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/comments/get",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"comments",
										"get"
									]
								},
								"description": "Use this API to retrieve comments from a specific comment annotation.\n\n**Filtering Options:**\n- `userIds`: Array of User IDs (optional)\n- `commentIds`: Array of Comment IDs (optional)\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comments/get-comments"
							},
							"response": []
						},
						{
							"name": "Update Comments",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"annotationId\": \"yourAnnotationId\",\n    \"commentIds\": [153783, 607395],\n    \"updatedData\": {\n      \"commentText\": \"Sample Updated Comment\",\n      \"commentHtml\": \"<div>Hello Updated</div>\"\n    }\n  }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/comments/update",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"comments",
										"update"
									]
								},
								"description": "Use this API to update specific comments within a comment annotation.\n\n**Key Points:**\n- Can update commentText, commentHtml, and other comment properties\n- Specify which comments to update using commentIds array\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comments/update-comments"
							},
							"response": []
						},
						{
							"name": "Delete Comments",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-velt-api-key",
										"value": "{{api_key}}"
									},
									{
										"key": "x-velt-auth-token",
										"value": "{{auth_token}}"
									},
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"data\": {\"organizationId\": \"yourOrganizationId\",\"documentId\": \"yourDocumentId\",\"annotationId\": \"yourAnnotationId\",\"commentIds\": [153783, 607395]}}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v2/commentannotations/comments/delete",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v2",
										"commentannotations",
										"comments",
										"delete"
									]
								},
								"description": "Use this API to delete specific comments from a comment annotation.\n\n**Key Points:**\n- Specify which comments to delete using commentIds array\n- Comments are permanently removed from the annotation thread\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/comments-feature/comments/delete-comments"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Notifications",
			"description": "Manage notifications sent to users through various channels (inbox, email, Slack).\n\n**Available Operations:**\n- Add: Send custom notifications\n- Get: Retrieve notifications\n- Update: Modify notification content\n- Delete: Remove notifications\n- Set Config: Configure notification channels\n- Get Config: Retrieve notification settings",
			"item": [
				{
					"name": "Add Notifications",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"actionUser\": {\n      \"userId\": \"yourUserId\",\n      \"name\": \"User Name\",\n      \"email\": \"user@example.com\"\n    },\n    \"verifyUserPermissions\": false,\n    \"notificationId\": \"custom_notification_id\",\n    \"displayHeadlineMessageTemplate\": \"This is main template, you can pass variables using curly brackets like this: {actionUser}, {recipientUser}, {yourCustomVariableWithStringValue}\",\n    \"displayHeadlineMessageTemplateData\": {\n      \"actionUser\": {\n        \"userId\": \"yourUserId\",\n        \"name\": \"User Name\",\n        \"email\": \"user@example.com\"\n      },\n      \"recipientUser\": {\n        \"userId\": \"recipientUserId\",\n        \"name\": \"Recipient Name\",\n        \"email\": \"recipient@example.com\"\n      },\n      \"yourCustomField\": \"Variable will be replaced with this text\"\n    },\n    \"displayBodyMessage\": \"This is body message (Secondary message)\",\n    \"notifyUsers\": [\n      {\n        \"email\": \"test@example.com\",\n        \"userId\": \"testingUserId\"\n      },\n      {\n        \"userId\": \"yourUserId\",\n        \"name\": \"User Name\",\n        \"email\": \"user@example.com\"\n      }\n    ],\n    \"notifyAll\": true,\n    \"notificationSourceData\": {\n      \"customKey\": \"customValue\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/notifications/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"notifications",
								"add"
							]
						},
						"description": "Use this API to add notifications.\n\n**Key Points:**\n- Send custom notifications to users via inbox, email, and other channels\n- Support for template variables in headline messages\n- Can notify specific users or all users in organization\n\n**Optional Parameters:**\n- `verifyUserPermissions`: When enabled, notifications are only created for users who have access to the specified document (default: false)\n- `notificationId`: Custom notification ID to prevent duplicate notifications. Only special characters `_`, `-` are allowed\n- `notifyAll`: If set to true, notification will be sent to all users in the organization (default: true)\n- `notificationSourceData`: Any custom object to be stored with the notification. When the user clicks on the notification, this data will be sent in the callback\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/notifications/add-notifications"
					},
					"response": []
				},
				{
					"name": "Get Notifications",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"pageSize\": 20,\n    \"pageToken\": \"8740648311207869\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/notifications/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"notifications",
								"get"
							]
						},
						"description": "Use this API to retrieve notifications for a specific document within an organization.\n\n**Key Points:**\n- Supports pagination with `pageSize` and `pageToken`\n- Returns all notifications for the specified document\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/notifications/get-notifications-v2"
					},
					"response": []
				},
				{
					"name": "Update Notifications",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentId\": \"yourDocumentId\",\n    \"locationId\": \"yourLocationId\",\n    \"userId\": \"yourUserId\",\n    \"notifications\": [\n      {\n        \"id\": \"yourNotificationId\",\n        \"displayBodyMessage\": \"This is body message (Secondary message)\"\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/notifications/update",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"notifications",
								"update"
							]
						},
						"description": "Use this API to update existing notifications.\n\n**Key Points:**\n- Can update notification content and metadata\n- Specify which notifications to update using the notifications array with IDs\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/notifications/update-notifications"
					},
					"response": []
				},
				{
					"name": "Delete Notifications",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n   \"data\": {\n       \"organizationId\": \"yourOrganizationId\",\n       \"documentId\": \"yourDocumentId\",\n       \"userId\": \"yourUserId\",\n       \"notifications\": [\n           {\n               \"id\": \"yourNotificationId\",\n               \"displayBodyMessage\": \"This is body message (Secondary message)\",\n           }\n       ]\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/notifications/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"notifications",
								"delete"
							]
						},
						"description": "Use this API to delete specific notifications.\n\n**Key Points:**\n- Permanently remove notifications from the system\n- Specify which notifications to delete using notification IDs\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/notifications/delete-notifications"
					},
					"response": []
				},
				{
					"name": "Set Config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId\"],\n    \"userIds\": [\"yourUserId\"],\n    \"config\": {\n      \"inbox\": \"ALL\",\n      \"email\": \"ALL\",\n      \"slack\": \"MENTIONS_ONLY\"\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/notifications/config/set",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"notifications",
								"config",
								"set"
							]
						},
						"description": "Use this API to configure notification channels for specific users and documents.\n\n**Key Points:**\n- Set notification preferences for inbox, email, and Slack channels\n- Options: `ALL`, `MENTIONS_ONLY`, or `NONE`\n- Can configure per user and per document\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/notifications/set-config"
					},
					"response": []
				},
				{
					"name": "Get Config",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId\"],\n    \"userId\": \"yourUserId\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/notifications/config/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"notifications",
								"config",
								"get"
							]
						},
						"description": "Use this API to retrieve notification configuration settings for specific users and documents.\n\n**Key Points:**\n- Get current notification preferences for a user\n- Returns settings for inbox, email, and other notification channels\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/notifications/get-config"
					},
					"response": []
				}
			]
		},
		{
			"name": "GDPR",
			"description": "GDPR compliance endpoints for managing user data according to privacy regulations.\n\n**Available Operations:**\n- Get All User Data: Export all data for a specific user\n- Delete All User Data: Permanently remove user data\n- Get Delete Status: Check status of deletion jobs",
			"item": [
				{
					"name": "Get All User Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"userId\": \"yourUserId\",\n    \"pageToken\": \"yourPageToken\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/data/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"data",
								"get"
							]
						},
						"description": "Use this API to export all data for a specific user (GDPR compliance).\n\n**Key Points:**\n- Returns all user data including comments, annotations, and other collaboration data\n- Supports pagination with `pageToken`\n- Used for GDPR data portability requests\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/gdpr/get-all-user-data-gdpr"
					},
					"response": []
				},
				{
					"name": "Delete All User Data",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"userIds\": [\n      \"yourUserId1\",\n      \"yourUserId2\"\n    ],\n    \"organizationIds\": [\n      \"yourOrganizationId1\",\n      \"yourOrganizationId2\"\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/data/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"data",
								"delete"
							]
						},
						"description": "Use this API to permanently delete all user data (GDPR compliance).\n\n**Warning:**\nThis will permanently delete all data associated with the specified users including comments, annotations, and other collaboration data.\n\n**Key Points:**\n- Can delete data for multiple users across multiple organizations\n- Returns a jobId to track deletion status\n- Used for GDPR right to erasure requests\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/gdpr/delete-all-user-data-gdpr"
					},
					"response": []
				},
				{
					"name": "Get Delete All User Data Status",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"jobId\": \"yourJobId\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/users/data/delete/status",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"users",
								"data",
								"delete",
								"status"
							]
						},
						"description": "Use this API to check the status of user data deletion jobs.\n\n**Key Points:**\n- Track the progress of deletion operations\n- Returns status: pending, in-progress, completed, or failed\n- Use the jobId returned from the delete all user data API\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/gdpr/get-delete-user-data-status-gdpr"
					},
					"response": []
				}
			]
		},
		{
			"name": "Access Control",
			"description": "Manage authentication tokens and user permissions for accessing Velt features.\n\n**Available Operations:**\n- Generate Token: Create JWT tokens for user authentication\n- Add Permissions: Grant resource access to users\n- Get Permissions: Retrieve user permissions\n- Remove Permissions: Revoke user access\n\n**Access Roles:**\n- viewer: Read-only access\n- editor: Read and write access",
			"item": [
				{
					"name": "Generate Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"userId\": \"user123\",\n  \"userProperties\": {\n    \"isAdmin\": false,\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\"\n  },\n  \"permissions\": {\n    \"resources\": [\n      {\n        \"type\": \"organization\",\n        \"id\": \"org_123\",\n        \"accessRole\": \"viewer\"\n      },\n      {\n        \"type\": \"document\",\n        \"id\": \"doc_456\",\n        \"organizationId\": \"org_123\",\n        \"accessRole\": \"editor\",\n        \"expiresAt\": 1640995200\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/generate_token",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"generate_token"
							]
						},
						"description": "Use this API to generate authentication JWT token for users to access Velt features. The token contains user information and permissions for specific resources like organizations, folders and documents.\n\n**Key Points:**\n- JWT token expires in 48 hours\n- Set `accessRole` to `viewer` (read-only) or `editor` (read/write) for each resource\n- Can specify permissions for different resource types (organization, folder, document)\n- Optional `expiresAt` field for time-limited permissions\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/auth/generate-token"
					},
					"response": []
				},
				{
					"name": "Generate Signature",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"permissions\": [\n      {\n        \"userId\": \"user123\",\n        \"resourceId\": \"document456\",\n        \"type\": \"document\",\n        \"hasAccess\": true,\n        \"accessRole\": \"viewer\",\n        \"expiresAt\": 1759745729823\n      },\n      {\n        \"userId\": \"user123\",\n        \"resourceId\": \"org789\",\n        \"type\": \"organization\",\n        \"hasAccess\": true\n      }\n    ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/generate_signature",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"generate_signature"
							]
						},
						"description": "Use this API to generate a secure signature for Permission Provider responses. The signature validates the integrity of permission decisions returned from your authorization service.\n\n**Security Critical:**\nThis endpoint must be called from your backend server, never from client-side code. The signature ensures that permission responses haven't been tampered with.\n\n**Use Case:**\nThis API is used in conjunction with the Permission Provider configuration mode. When your `onResourceAccessRequired` function is called, use this endpoint to generate a secure signature for your permission response.\n\n**Key Points:**\n- Each permission object must include userId, resourceId, type, and hasAccess\n- For document resources, can specify `accessRole`: `viewer` or `editor`\n- Optional `expiresAt` timestamp (in milliseconds) for time-limited permissions\n- Resource types: `document`, `folder`, or `organization`\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/auth/generate-signature"
					},
					"response": []
				},
				{
					"name": "Add Permissions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"user\": {\n      \"userId\": \"some-user-id\"\n    },\n    \"permissions\": {\n      \"resources\": [\n        {\n          \"type\": \"organization\",\n          \"id\": \"YOUR_ORGANIZATION_ID\",\n          \"accessRole\": \"editor\"\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/permissions/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"permissions",
								"add"
							]
						},
						"description": "Use this API to add permissions to a user for various resources like organizations, folders, documents, etc.\n\n**Key Points:**\n- Set `accessRole` to `viewer` (read-only) or `editor` (read/write) for each resource\n- Can add permissions for multiple resources in a single API call\n- Optional `expiresAt` field for time-limited permissions\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/auth/add-permissions"
					},
					"response": []
				},
				{
					"name": "Get Permissions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"yourOrganizationId\",\n    \"documentIds\": [\"yourDocumentId\"],\n    \"userIds\": [\"yourUserId\"]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/permissions/get",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"permissions",
								"get"
							]
						},
						"description": "Use this API to retrieve permissions for specific users within an organization.\n\n**Key Points:**\n- Get permissions for specific documents or folders\n- Filter by user IDs\n- Returns access roles and resource permissions\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/auth/get-permissions"
					},
					"response": []
				},
				{
					"name": "Remove Permissions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"userId\": \"USER_ID\",\n    \"permissions\": {\n      \"resources\": [\n        {\n          \"type\": \"organization\",\n          \"id\": \"ORGANIZATION_ID\"\n        },\n        {\n          \"type\": \"document\",\n          \"id\": \"DOCUMENT_ID\",\n          \"organizationId\": \"ORGANIZATION_ID\"\n        }\n      ]\n    }\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/auth/permissions/remove",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"auth",
								"permissions",
								"remove"
							]
						},
						"description": "Use this API to remove permissions from a user for specific resources.\n\n**Key Points:**\n- Revoke user access to organizations, folders, or documents\n- Can remove multiple resource permissions in a single API call\n- User will lose access to the specified resources\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/auth/remove-permissions"
					},
					"response": []
				}
			]
		},
		{
			"name": "Live State",
			"description": "Broadcast real-time state changes and events to all connected users in a document.\n\n**Use Cases:**\n- Sync application state across users\n- Broadcast custom events\n- Share real-time data updates\n\n**Available Operations:**\n- Broadcast Event: Send real-time events to all users in a document",
			"item": [
				{
					"name": "Broadcast Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n    \"organizationId\": \"YOUR_ORGANIZATION_ID\",\n    \"documentId\": \"YOUR_DOCUMENT_ID\",\n    \"liveStateDataId\": \"sample_live_state_data_id\",\n    \"data\": {\n      \"status\": \"active\",\n      \"message\": \"Hello World\",\n      \"customField\": \"custom value\"\n    },\n    \"merge\": true\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/livestate/broadcast",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"livestate",
								"broadcast"
							]
						},
						"description": "Use this API to broadcast live state events to any document. Use it with the Live State feature.\n\n**Key Points:**\n- Broadcast real-time state changes and events to all connected users\n- Can be any valid serializable JSON object\n- `merge`: If true, merges the new data with existing data instead of replacing it (default: false)\n\n**Use Cases:**\n- Sync application state across users\n- Broadcast custom events\n- Share real-time data updates\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/livestate/broadcast-event"
					},
					"response": []
				}
			]
		},
		{
			"name": "Workspace",
			"description": "Manage workspace-level settings including domain whitelisting for security.\n\n**Available Operations:**\n- Add Domains: Whitelist domains for your workspace\n- Delete Domains: Remove domains from whitelist\n\n**Domain Whitelisting:**\nControl which domains can access your Velt workspace. Supports wildcard patterns (e.g., `https://*.example.com`)",
			"item": [
				{
					"name": "Add Domains",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n     \"domains\" : [\n        \"https://www.google.com\",\n        \"https://*.firebase.com\"\n     ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/workspace/domains/add",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"workspace",
								"domains",
								"add"
							]
						},
						"description": "Use this API to whitelist domains for your workspace.\n\n**Key Points:**\n- Control which domains can access your Velt workspace\n- Supports wildcard patterns (e.g., `https://*.example.com`)\n- Improves security by restricting access to approved domains\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/workspace/add-domain"
					},
					"response": []
				},
				{
					"name": "Delete Domains",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-velt-api-key",
								"value": "{{api_key}}"
							},
							{
								"key": "x-velt-auth-token",
								"value": "{{auth_token}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"data\": {\n     \"domains\" : [\n        \"https://www.google.com\",\n        \"https://*.firebase.com\"\n     ]\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v2/workspace/domains/delete",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v2",
								"workspace",
								"domains",
								"delete"
							]
						},
						"description": "Use this API to remove domains from your workspace whitelist.\n\n**Key Points:**\n- Remove previously whitelisted domains\n- Access from removed domains will be blocked\n- Can remove multiple domains in a single request\n\nüìö Full Documentation: https://docs.velt.dev/api-reference/rest-apis/v2/workspace/delete-domain"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Collection-level test script",
					"pm.test(\"Status code is 200\", function () {",
					"    pm.response.to.have.status(200);",
					"});",
					"",
					"pm.test(\"Response has result or error object\", function () {",
					"    var jsonData = pm.response.json();",
					"    pm.expect(jsonData).to.have.any.keys('result', 'error');",
					"});",
					"",
					"pm.test(\"Response time is less than 5000ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(5000);",
					"});"
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://api.velt.dev",
			"type": "string"
		},
		{
			"key": "api_key",
			"value": "",
			"type": "string"
		},
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		}
	]
}