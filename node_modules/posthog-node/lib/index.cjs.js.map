{"version":3,"file":"index.cjs.js","sources":["../../posthog-core/src/types.ts","../../posthog-core/src/utils.ts","../../posthog-core/src/lz-string.ts","../../posthog-core/src/eventemitter.ts","../../posthog-core/src/vendor/uuidv7.ts","../../posthog-core/src/index.ts","../../posthog-core/src/storage-memory.ts","../src/fetch.ts","../src/feature-flags.ts","../src/extensions/error-tracking/autocapture.ts","../src/extensions/error-tracking/type-checking.ts","../src/extensions/error-tracking/reduceable-cache.ts","../src/extensions/error-tracking/context-lines.ts","../src/extensions/error-tracking/error-conversion.ts","../src/extensions/error-tracking/stack-trace.ts","../src/error-tracking.ts","../src/posthog-node.ts","../src/extensions/sentry-integration.ts","../src/extensions/express.ts"],"sourcesContent":["export type PostHogCoreOptions = {\n  /** PostHog API host, usually 'https://us.i.posthog.com' or 'https://eu.i.posthog.com' */\n  host?: string\n  /** The number of events to queue before sending to PostHog (flushing) */\n  flushAt?: number\n  /** The interval in milliseconds between periodic flushes */\n  flushInterval?: number\n  /** The maximum number of queued messages to be flushed as part of a single batch (must be higher than `flushAt`) */\n  maxBatchSize?: number\n  /** The maximum number of cached messages either in memory or on the local storage.\n   * Defaults to 1000, (must be higher than `flushAt`)\n   */\n  maxQueueSize?: number\n  /** If set to true the SDK is essentially disabled (useful for local environments where you don't want to track anything) */\n  disabled?: boolean\n  /** If set to false the SDK will not track until the `optIn` function is called. */\n  defaultOptIn?: boolean\n  /** Whether to track that `getFeatureFlag` was called (used by Experiments) */\n  sendFeatureFlagEvent?: boolean\n  /** Whether to load feature flags when initialized or not */\n  preloadFeatureFlags?: boolean\n  /** Option to bootstrap the library with given distinctId and feature flags */\n  bootstrap?: {\n    distinctId?: string\n    isIdentifiedId?: boolean\n    featureFlags?: Record<string, boolean | string>\n    featureFlagPayloads?: Record<string, JsonType>\n  }\n  /** How many times we will retry HTTP requests. Defaults to 3. */\n  fetchRetryCount?: number\n  /** The delay between HTTP request retries, Defaults to 3 seconds. */\n  fetchRetryDelay?: number\n  /** Timeout in milliseconds for any calls. Defaults to 10 seconds. */\n  requestTimeout?: number\n  /** Timeout in milliseconds for feature flag calls. Defaults to 10 seconds for stateful clients, and 3 seconds for stateless. */\n  featureFlagsRequestTimeoutMs?: number\n  /** For Session Analysis how long before we expire a session (defaults to 30 mins) */\n  sessionExpirationTimeSeconds?: number\n  /** Whether to post events to PostHog in JSON or compressed format. Defaults to 'json' */\n  captureMode?: 'json' | 'form'\n  disableGeoip?: boolean\n  /** Special flag to indicate ingested data is for a historical migration. */\n  historicalMigration?: boolean\n}\n\nexport enum PostHogPersistedProperty {\n  AnonymousId = 'anonymous_id',\n  DistinctId = 'distinct_id',\n  Props = 'props',\n  FeatureFlags = 'feature_flags',\n  FeatureFlagPayloads = 'feature_flag_payloads',\n  BootstrapFeatureFlags = 'bootstrap_feature_flags',\n  BootstrapFeatureFlagPayloads = 'bootstrap_feature_flag_payloads',\n  OverrideFeatureFlags = 'override_feature_flags',\n  Queue = 'queue',\n  OptedOut = 'opted_out',\n  SessionId = 'session_id',\n  SessionLastTimestamp = 'session_timestamp',\n  PersonProperties = 'person_properties',\n  GroupProperties = 'group_properties',\n  InstalledAppBuild = 'installed_app_build', // only used by posthog-react-native\n  InstalledAppVersion = 'installed_app_version', // only used by posthog-react-native\n  SessionReplay = 'session_replay', // only used by posthog-react-native\n  DecideEndpointWasHit = 'decide_endpoint_was_hit', // only used by posthog-react-native\n}\n\nexport type PostHogFetchOptions = {\n  method: 'GET' | 'POST' | 'PUT' | 'PATCH'\n  mode?: 'no-cors'\n  credentials?: 'omit'\n  headers: { [key: string]: string }\n  body?: string\n  signal?: AbortSignal\n}\n\n// Check out posthog-js for these additional options and try to keep them in sync\nexport type PostHogCaptureOptions = {\n  /** If provided overrides the auto-generated event ID */\n  uuid?: string\n  /** If provided overrides the auto-generated timestamp */\n  timestamp?: Date\n  disableGeoip?: boolean\n}\n\nexport type PostHogFetchResponse = {\n  status: number\n  text: () => Promise<string>\n  json: () => Promise<any>\n}\n\nexport type PostHogQueueItem = {\n  message: any\n  callback?: (err: any) => void\n}\n\nexport type PostHogEventProperties = {\n  [key: string]: any\n}\n\nexport type PostHogAutocaptureElement = {\n  $el_text?: string\n  tag_name: string\n  href?: string\n  nth_child?: number\n  nth_of_type?: number\n  order?: number\n} & {\n  [key: string]: any\n} // Any key prefixed with `attr__` can be added\n\nexport type PostHogDecideResponse = {\n  config: { enable_collect_everything: boolean }\n  editorParams: { toolbarVersion: string; jsURL: string }\n  isAuthenticated: true\n  supportedCompression: string[]\n  featureFlags: {\n    [key: string]: string | boolean\n  }\n  featureFlagPayloads: {\n    [key: string]: JsonType\n  }\n  errorsWhileComputingFlags: boolean\n  quotaLimited?: string[]\n  sessionRecording?:\n    | boolean\n    | {\n        [key: string]: JsonType\n      }\n  requestId?: string\n}\n\nexport type PostHogFlagsAndPayloadsResponse = {\n  featureFlags: PostHogDecideResponse['featureFlags']\n  featureFlagPayloads: PostHogDecideResponse['featureFlagPayloads']\n}\n\nexport type JsonType = string | number | boolean | null | { [key: string]: JsonType } | Array<JsonType>\n\nexport type FetchLike = (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n","import { FetchLike } from './types'\n\nexport function assert(truthyValue: any, message: string): void {\n  if (!truthyValue) {\n    throw new Error(message)\n  }\n}\n\nexport function removeTrailingSlash(url: string): string {\n  return url?.replace(/\\/+$/, '')\n}\n\nexport interface RetriableOptions {\n  retryCount: number\n  retryDelay: number\n  retryCheck: (err: any) => boolean\n}\n\nexport async function retriable<T>(fn: () => Promise<T>, props: RetriableOptions): Promise<T> {\n  let lastError = null\n\n  for (let i = 0; i < props.retryCount + 1; i++) {\n    if (i > 0) {\n      // don't wait when it's the last try\n      await new Promise((r) => setTimeout(r, props.retryDelay))\n    }\n\n    try {\n      const res = await fn()\n      return res\n    } catch (e) {\n      lastError = e\n      if (!props.retryCheck(e)) {\n        throw e\n      }\n    }\n  }\n\n  throw lastError\n}\n\nexport function currentTimestamp(): number {\n  return new Date().getTime()\n}\n\nexport function currentISOTime(): string {\n  return new Date().toISOString()\n}\n\nexport function safeSetTimeout(fn: () => void, timeout: number): any {\n  // NOTE: we use this so rarely that it is totally fine to do `safeSetTimeout(fn, 0)``\n  // rather than setImmediate.\n  const t = setTimeout(fn, timeout) as any\n  // We unref if available to prevent Node.js hanging on exit\n  t?.unref && t?.unref()\n  return t\n}\n\n// NOTE: We opt for this slightly imperfect check as the global \"Promise\" object can get mutated in certain environments\nexport const isPromise = (obj: any): obj is Promise<any> => {\n  return obj && typeof obj.then === 'function'\n}\n\nexport const isError = (x: unknown): x is Error => {\n  return x instanceof Error\n}\n\nexport function getFetch(): FetchLike | undefined {\n  return typeof fetch !== 'undefined' ? fetch : typeof global.fetch !== 'undefined' ? global.fetch : undefined\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\n\n// private property\nconst f = String.fromCharCode\nconst keyStrBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nconst baseReverseDic: any = {}\n\nfunction getBaseValue(alphabet: any, character: any): any {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {}\n    for (let i = 0; i < alphabet.length; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i\n    }\n  }\n  return baseReverseDic[alphabet][character]\n}\n\nexport const LZString = {\n  compressToBase64: function (input: any): string {\n    if (input == null) {\n      return ''\n    }\n    const res = LZString._compress(input, 6, function (a: any) {\n      return keyStrBase64.charAt(a)\n    })\n    switch (\n      res.length % 4 // To produce valid Base64\n    ) {\n      default: // When could this happen ?\n      case 0:\n        return res\n      case 1:\n        return res + '==='\n      case 2:\n        return res + '=='\n      case 3:\n        return res + '='\n    }\n  },\n\n  decompressFromBase64: function (input: any): any {\n    if (input == null) {\n      return ''\n    }\n    if (input == '') {\n      return null\n    }\n    return LZString._decompress(input.length, 32, function (index: any) {\n      return getBaseValue(keyStrBase64, input.charAt(index))\n    })\n  },\n\n  compress: function (uncompressed: any): any {\n    return LZString._compress(uncompressed, 16, function (a: any) {\n      return f(a)\n    })\n  },\n  _compress: function (uncompressed: any, bitsPerChar: any, getCharFromInt: any): any {\n    if (uncompressed == null) {\n      return ''\n    }\n    const context_dictionary: any = {},\n      context_dictionaryToCreate: any = {},\n      context_data = []\n\n    let i,\n      value,\n      context_c = '',\n      context_wc = '',\n      context_w = '',\n      context_enlargeIn = 2, // Compensate for the first entry which should not count\n      context_dictSize = 3,\n      context_numBits = 2,\n      context_data_val = 0,\n      context_data_position = 0,\n      ii\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii)\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {\n        context_dictionary[context_c] = context_dictSize++\n        context_dictionaryToCreate[context_c] = true\n      }\n\n      context_wc = context_w + context_c\n      if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {\n        context_w = context_wc\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n          if (context_w.charCodeAt(0) < 256) {\n            for (i = 0; i < context_numBits; i++) {\n              context_data_val = context_data_val << 1\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n            }\n            value = context_w.charCodeAt(0)\n            for (i = 0; i < 8; i++) {\n              context_data_val = (context_data_val << 1) | (value & 1)\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = value >> 1\n            }\n          } else {\n            value = 1\n            for (i = 0; i < context_numBits; i++) {\n              context_data_val = (context_data_val << 1) | value\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = 0\n            }\n            value = context_w.charCodeAt(0)\n            for (i = 0; i < 16; i++) {\n              context_data_val = (context_data_val << 1) | (value & 1)\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = value >> 1\n            }\n          }\n          context_enlargeIn--\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits)\n            context_numBits++\n          }\n          delete context_dictionaryToCreate[context_w]\n        } else {\n          value = context_dictionary[context_w]\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        }\n        context_enlargeIn--\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits)\n          context_numBits++\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++\n        context_w = String(context_c)\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== '') {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n        if (context_w.charCodeAt(0) < 256) {\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = context_data_val << 1\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n          }\n          value = context_w.charCodeAt(0)\n          for (i = 0; i < 8; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        } else {\n          value = 1\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = (context_data_val << 1) | value\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = 0\n          }\n          value = context_w.charCodeAt(0)\n          for (i = 0; i < 16; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        }\n        context_enlargeIn--\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits)\n          context_numBits++\n        }\n        delete context_dictionaryToCreate[context_w]\n      } else {\n        value = context_dictionary[context_w]\n        for (i = 0; i < context_numBits; i++) {\n          context_data_val = (context_data_val << 1) | (value & 1)\n          if (context_data_position == bitsPerChar - 1) {\n            context_data_position = 0\n            context_data.push(getCharFromInt(context_data_val))\n            context_data_val = 0\n          } else {\n            context_data_position++\n          }\n          value = value >> 1\n        }\n      }\n      context_enlargeIn--\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits)\n        context_numBits++\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2\n    for (i = 0; i < context_numBits; i++) {\n      context_data_val = (context_data_val << 1) | (value & 1)\n      if (context_data_position == bitsPerChar - 1) {\n        context_data_position = 0\n        context_data.push(getCharFromInt(context_data_val))\n        context_data_val = 0\n      } else {\n        context_data_position++\n      }\n      value = value >> 1\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = context_data_val << 1\n      if (context_data_position == bitsPerChar - 1) {\n        context_data.push(getCharFromInt(context_data_val))\n        break\n      } else {\n        context_data_position++\n      }\n    }\n    return context_data.join('')\n  },\n\n  decompress: function (compressed: any): any {\n    if (compressed == null) {\n      return ''\n    }\n    if (compressed == '') {\n      return null\n    }\n    return LZString._decompress(compressed.length, 32768, function (index: any) {\n      return compressed.charCodeAt(index)\n    })\n  },\n\n  _decompress: function (length: any, resetValue: any, getNextValue: any): any {\n    const dictionary = [],\n      result = [],\n      data = { val: getNextValue(0), position: resetValue, index: 1 }\n\n    let next,\n      enlargeIn = 4,\n      dictSize = 4,\n      numBits = 3,\n      entry: any = '',\n      i,\n      w,\n      bits,\n      resb,\n      maxpower,\n      power,\n      c\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i\n    }\n\n    bits = 0\n    maxpower = Math.pow(2, 2)\n    power = 1\n    while (power != maxpower) {\n      resb = data.val & data.position\n      data.position >>= 1\n      if (data.position == 0) {\n        data.position = resetValue\n        data.val = getNextValue(data.index++)\n      }\n      bits |= (resb > 0 ? 1 : 0) * power\n      power <<= 1\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    switch ((next = bits)) {\n      case 0:\n        bits = 0\n        maxpower = Math.pow(2, 8)\n        power = 1\n        while (power != maxpower) {\n          resb = data.val & data.position\n          data.position >>= 1\n          if (data.position == 0) {\n            data.position = resetValue\n            data.val = getNextValue(data.index++)\n          }\n          bits |= (resb > 0 ? 1 : 0) * power\n          power <<= 1\n        }\n        c = f(bits)\n        break\n      case 1:\n        bits = 0\n        maxpower = Math.pow(2, 16)\n        power = 1\n        while (power != maxpower) {\n          resb = data.val & data.position\n          data.position >>= 1\n          if (data.position == 0) {\n            data.position = resetValue\n            data.val = getNextValue(data.index++)\n          }\n          bits |= (resb > 0 ? 1 : 0) * power\n          power <<= 1\n        }\n        c = f(bits)\n        break\n      case 2:\n        return ''\n    }\n    dictionary[3] = c\n    w = c\n    result.push(c)\n    while (true) {\n      if (data.index > length) {\n        return ''\n      }\n\n      bits = 0\n      maxpower = Math.pow(2, numBits)\n      power = 1\n      while (power != maxpower) {\n        resb = data.val & data.position\n        data.position >>= 1\n        if (data.position == 0) {\n          data.position = resetValue\n          data.val = getNextValue(data.index++)\n        }\n        bits |= (resb > 0 ? 1 : 0) * power\n        power <<= 1\n      }\n\n      switch ((c = bits)) {\n        case 0:\n          bits = 0\n          maxpower = Math.pow(2, 8)\n          power = 1\n          while (power != maxpower) {\n            resb = data.val & data.position\n            data.position >>= 1\n            if (data.position == 0) {\n              data.position = resetValue\n              data.val = getNextValue(data.index++)\n            }\n            bits |= (resb > 0 ? 1 : 0) * power\n            power <<= 1\n          }\n\n          dictionary[dictSize++] = f(bits)\n          c = dictSize - 1\n          enlargeIn--\n          break\n        case 1:\n          bits = 0\n          maxpower = Math.pow(2, 16)\n          power = 1\n          while (power != maxpower) {\n            resb = data.val & data.position\n            data.position >>= 1\n            if (data.position == 0) {\n              data.position = resetValue\n              data.val = getNextValue(data.index++)\n            }\n            bits |= (resb > 0 ? 1 : 0) * power\n            power <<= 1\n          }\n          dictionary[dictSize++] = f(bits)\n          c = dictSize - 1\n          enlargeIn--\n          break\n        case 2:\n          return result.join('')\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits)\n        numBits++\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c]\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0)\n        } else {\n          return null\n        }\n      }\n      result.push(entry)\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0)\n      enlargeIn--\n\n      w = entry\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits)\n        numBits++\n      }\n    }\n  },\n}\n","export class SimpleEventEmitter {\n  events: { [key: string]: ((...args: any[]) => void)[] } = {}\n\n  constructor() {\n    this.events = {}\n  }\n\n  on(event: string, listener: (...args: any[]) => void): () => void {\n    if (!this.events[event]) {\n      this.events[event] = []\n    }\n    this.events[event].push(listener)\n\n    return () => {\n      this.events[event] = this.events[event].filter((x) => x !== listener)\n    }\n  }\n\n  emit(event: string, payload: any): void {\n    for (const listener of this.events[event] || []) {\n      listener(payload)\n    }\n    for (const listener of this.events['*'] || []) {\n      listener(event, payload)\n    }\n  }\n}\n","// vendor from: https://github.com/LiosK/uuidv7/blob/f30b7a7faff73afbce0b27a46c638310f96912ba/src/index.ts\n// https://github.com/LiosK/uuidv7#license\n\n/**\n * uuidv7: An experimental implementation of the proposed UUID Version 7\n *\n * @license Apache-2.0\n * @copyright 2021-2023 LiosK\n * @packageDocumentation\n */\n\nconst DIGITS = \"0123456789abcdef\";\n\n/** Represents a UUID as a 16-byte byte array. */\nexport class UUID {\n  /** @param bytes - The 16-byte byte array representation. */\n  private constructor(readonly bytes: Readonly<Uint8Array>) {}\n\n  /**\n   * Creates an object from the internal representation, a 16-byte byte array\n   * containing the binary UUID representation in the big-endian byte order.\n   *\n   * This method does NOT shallow-copy the argument, and thus the created object\n   * holds the reference to the underlying buffer.\n   *\n   * @throws TypeError if the length of the argument is not 16.\n   */\n  static ofInner(bytes: Readonly<Uint8Array>): UUID {\n    if (bytes.length !== 16) {\n      throw new TypeError(\"not 128-bit length\");\n    } else {\n      return new UUID(bytes);\n    }\n  }\n\n  /**\n   * Builds a byte array from UUIDv7 field values.\n   *\n   * @param unixTsMs - A 48-bit `unix_ts_ms` field value.\n   * @param randA - A 12-bit `rand_a` field value.\n   * @param randBHi - The higher 30 bits of 62-bit `rand_b` field value.\n   * @param randBLo - The lower 32 bits of 62-bit `rand_b` field value.\n   * @throws RangeError if any field value is out of the specified range.\n   */\n  static fromFieldsV7(\n    unixTsMs: number,\n    randA: number,\n    randBHi: number,\n    randBLo: number,\n  ): UUID {\n    if (\n      !Number.isInteger(unixTsMs) ||\n      !Number.isInteger(randA) ||\n      !Number.isInteger(randBHi) ||\n      !Number.isInteger(randBLo) ||\n      unixTsMs < 0 ||\n      randA < 0 ||\n      randBHi < 0 ||\n      randBLo < 0 ||\n      unixTsMs > 0xffff_ffff_ffff ||\n      randA > 0xfff ||\n      randBHi > 0x3fff_ffff ||\n      randBLo > 0xffff_ffff\n    ) {\n      throw new RangeError(\"invalid field value\");\n    }\n\n    const bytes = new Uint8Array(16);\n    bytes[0] = unixTsMs / 2 ** 40;\n    bytes[1] = unixTsMs / 2 ** 32;\n    bytes[2] = unixTsMs / 2 ** 24;\n    bytes[3] = unixTsMs / 2 ** 16;\n    bytes[4] = unixTsMs / 2 ** 8;\n    bytes[5] = unixTsMs;\n    bytes[6] = 0x70 | (randA >>> 8);\n    bytes[7] = randA;\n    bytes[8] = 0x80 | (randBHi >>> 24);\n    bytes[9] = randBHi >>> 16;\n    bytes[10] = randBHi >>> 8;\n    bytes[11] = randBHi;\n    bytes[12] = randBLo >>> 24;\n    bytes[13] = randBLo >>> 16;\n    bytes[14] = randBLo >>> 8;\n    bytes[15] = randBLo;\n    return new UUID(bytes);\n  }\n\n  /**\n   * Builds a byte array from a string representation.\n   *\n   * This method accepts the following formats:\n   *\n   * - 32-digit hexadecimal format without hyphens: `0189dcd553117d408db09496a2eef37b`\n   * - 8-4-4-4-12 hyphenated format: `0189dcd5-5311-7d40-8db0-9496a2eef37b`\n   * - Hyphenated format with surrounding braces: `{0189dcd5-5311-7d40-8db0-9496a2eef37b}`\n   * - RFC 4122 URN format: `urn:uuid:0189dcd5-5311-7d40-8db0-9496a2eef37b`\n   *\n   * Leading and trailing whitespaces represents an error.\n   *\n   * @throws SyntaxError if the argument could not parse as a valid UUID string.\n   */\n  static parse(uuid: string): UUID {\n    let hex: string | undefined = undefined;\n    switch (uuid.length) {\n      case 32:\n        hex = /^[0-9a-f]{32}$/i.exec(uuid)?.[0];\n        break;\n      case 36:\n        hex =\n          /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      case 38:\n        hex =\n          /^\\{([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})\\}$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      case 45:\n        hex =\n          /^urn:uuid:([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      default:\n        break;\n    }\n\n    if (hex) {\n      const inner = new Uint8Array(16);\n      for (let i = 0; i < 16; i += 4) {\n        const n = parseInt(hex.substring(2 * i, 2 * i + 8), 16);\n        inner[i + 0] = n >>> 24;\n        inner[i + 1] = n >>> 16;\n        inner[i + 2] = n >>> 8;\n        inner[i + 3] = n;\n      }\n      return new UUID(inner);\n    } else {\n      throw new SyntaxError(\"could not parse UUID string\");\n    }\n  }\n\n  /**\n   * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n   * (`0189dcd5-5311-7d40-8db0-9496a2eef37b`).\n   */\n  toString(): string {\n    let text = \"\";\n    for (let i = 0; i < this.bytes.length; i++) {\n      text += DIGITS.charAt(this.bytes[i] >>> 4);\n      text += DIGITS.charAt(this.bytes[i] & 0xf);\n      if (i === 3 || i === 5 || i === 7 || i === 9) {\n        text += \"-\";\n      }\n    }\n    return text;\n  }\n\n  /**\n   * @returns The 32-digit hexadecimal representation without hyphens\n   * (`0189dcd553117d408db09496a2eef37b`).\n   */\n  toHex(): string {\n    let text = \"\";\n    for (let i = 0; i < this.bytes.length; i++) {\n      text += DIGITS.charAt(this.bytes[i] >>> 4);\n      text += DIGITS.charAt(this.bytes[i] & 0xf);\n    }\n    return text;\n  }\n\n  /** @returns The 8-4-4-4-12 canonical hexadecimal string representation. */\n  toJSON(): string {\n    return this.toString();\n  }\n\n  /**\n   * Reports the variant field value of the UUID or, if appropriate, \"NIL\" or\n   * \"MAX\".\n   *\n   * For convenience, this method reports \"NIL\" or \"MAX\" if `this` represents\n   * the Nil or Max UUID, although the Nil and Max UUIDs are technically\n   * subsumed under the variants `0b0` and `0b111`, respectively.\n   */\n  getVariant():\n    | \"VAR_0\"\n    | \"VAR_10\"\n    | \"VAR_110\"\n    | \"VAR_RESERVED\"\n    | \"NIL\"\n    | \"MAX\" {\n    const n = this.bytes[8] >>> 4;\n    if (n < 0) {\n      throw new Error(\"unreachable\");\n    } else if (n <= 0b0111) {\n      return this.bytes.every((e) => e === 0) ? \"NIL\" : \"VAR_0\";\n    } else if (n <= 0b1011) {\n      return \"VAR_10\";\n    } else if (n <= 0b1101) {\n      return \"VAR_110\";\n    } else if (n <= 0b1111) {\n      return this.bytes.every((e) => e === 0xff) ? \"MAX\" : \"VAR_RESERVED\";\n    } else {\n      throw new Error(\"unreachable\");\n    }\n  }\n\n  /**\n   * Returns the version field value of the UUID or `undefined` if the UUID does\n   * not have the variant field value of `0b10`.\n   */\n  getVersion(): number | undefined {\n    return this.getVariant() === \"VAR_10\" ? this.bytes[6] >>> 4 : undefined;\n  }\n\n  /** Creates an object from `this`. */\n  clone(): UUID {\n    return new UUID(this.bytes.slice(0));\n  }\n\n  /** Returns true if `this` is equivalent to `other`. */\n  equals(other: UUID): boolean {\n    return this.compareTo(other) === 0;\n  }\n\n  /**\n   * Returns a negative integer, zero, or positive integer if `this` is less\n   * than, equal to, or greater than `other`, respectively.\n   */\n  compareTo(other: UUID): number {\n    for (let i = 0; i < 16; i++) {\n      const diff = this.bytes[i] - other.bytes[i];\n      if (diff !== 0) {\n        return Math.sign(diff);\n      }\n    }\n    return 0;\n  }\n}\n\n/**\n * Encapsulates the monotonic counter state.\n *\n * This class provides APIs to utilize a separate counter state from that of the\n * global generator used by {@link uuidv7} and {@link uuidv7obj}. In addition to\n * the default {@link generate} method, this class has {@link generateOrAbort}\n * that is useful to absolutely guarantee the monotonically increasing order of\n * generated UUIDs. See their respective documentation for details.\n */\nexport class V7Generator {\n  private timestamp = 0;\n  private counter = 0;\n\n  /** The random number generator used by the generator. */\n  private readonly random: { nextUint32(): number };\n\n  /**\n   * Creates a generator object with the default random number generator, or\n   * with the specified one if passed as an argument. The specified random\n   * number generator should be cryptographically strong and securely seeded.\n   */\n  constructor(randomNumberGenerator?: {\n    /** Returns a 32-bit random unsigned integer. */\n    nextUint32(): number;\n  }) {\n    this.random = randomNumberGenerator ?? getDefaultRandom();\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the current timestamp, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method returns a monotonically increasing UUID by reusing the previous\n   * timestamp even if the up-to-date timestamp is smaller than the immediately\n   * preceding UUID's. However, when such a clock rollback is considered\n   * significant (i.e., by more than ten seconds), this method resets the\n   * generator and returns a new UUID based on the given timestamp, breaking the\n   * increasing order of UUIDs.\n   *\n   * See {@link generateOrAbort} for the other mode of generation and\n   * {@link generateOrResetCore} for the low-level primitive.\n   */\n  generate(): UUID {\n    return this.generateOrResetCore(Date.now(), 10_000);\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the current timestamp, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method returns a monotonically increasing UUID by reusing the previous\n   * timestamp even if the up-to-date timestamp is smaller than the immediately\n   * preceding UUID's. However, when such a clock rollback is considered\n   * significant (i.e., by more than ten seconds), this method aborts and\n   * returns `undefined` immediately.\n   *\n   * See {@link generate} for the other mode of generation and\n   * {@link generateOrAbortCore} for the low-level primitive.\n   */\n  generateOrAbort(): UUID | undefined {\n    return this.generateOrAbortCore(Date.now(), 10_000);\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the `unixTsMs` passed, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method is equivalent to {@link generate} except that it takes a custom\n   * timestamp and clock rollback allowance.\n   *\n   * @param rollbackAllowance - The amount of `unixTsMs` rollback that is\n   * considered significant. A suggested value is `10_000` (milliseconds).\n   * @throws RangeError if `unixTsMs` is not a 48-bit positive integer.\n   */\n  generateOrResetCore(unixTsMs: number, rollbackAllowance: number): UUID {\n    let value = this.generateOrAbortCore(unixTsMs, rollbackAllowance);\n    if (value === undefined) {\n      // reset state and resume\n      this.timestamp = 0;\n      value = this.generateOrAbortCore(unixTsMs, rollbackAllowance)!;\n    }\n    return value;\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the `unixTsMs` passed, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method is equivalent to {@link generateOrAbort} except that it takes a\n   * custom timestamp and clock rollback allowance.\n   *\n   * @param rollbackAllowance - The amount of `unixTsMs` rollback that is\n   * considered significant. A suggested value is `10_000` (milliseconds).\n   * @throws RangeError if `unixTsMs` is not a 48-bit positive integer.\n   */\n  generateOrAbortCore(\n    unixTsMs: number,\n    rollbackAllowance: number,\n  ): UUID | undefined {\n    const MAX_COUNTER = 0x3ff_ffff_ffff;\n\n    if (\n      !Number.isInteger(unixTsMs) ||\n      unixTsMs < 1 ||\n      unixTsMs > 0xffff_ffff_ffff\n    ) {\n      throw new RangeError(\"`unixTsMs` must be a 48-bit positive integer\");\n    } else if (rollbackAllowance < 0 || rollbackAllowance > 0xffff_ffff_ffff) {\n      throw new RangeError(\"`rollbackAllowance` out of reasonable range\");\n    }\n\n    if (unixTsMs > this.timestamp) {\n      this.timestamp = unixTsMs;\n      this.resetCounter();\n    } else if (unixTsMs + rollbackAllowance >= this.timestamp) {\n      // go on with previous timestamp if new one is not much smaller\n      this.counter++;\n      if (this.counter > MAX_COUNTER) {\n        // increment timestamp at counter overflow\n        this.timestamp++;\n        this.resetCounter();\n      }\n    } else {\n      // abort if clock went backwards to unbearable extent\n      return undefined;\n    }\n\n    return UUID.fromFieldsV7(\n      this.timestamp,\n      Math.trunc(this.counter / 2 ** 30),\n      this.counter & (2 ** 30 - 1),\n      this.random.nextUint32(),\n    );\n  }\n\n  /** Initializes the counter at a 42-bit random integer. */\n  private resetCounter(): void {\n    this.counter =\n      this.random.nextUint32() * 0x400 + (this.random.nextUint32() & 0x3ff);\n  }\n\n  /**\n   * Generates a new UUIDv4 object utilizing the random number generator inside.\n   *\n   * @internal\n   */\n  generateV4(): UUID {\n    const bytes = new Uint8Array(\n      Uint32Array.of(\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n      ).buffer,\n    );\n    bytes[6] = 0x40 | (bytes[6] >>> 4);\n    bytes[8] = 0x80 | (bytes[8] >>> 2);\n    return UUID.ofInner(bytes);\n  }\n}\n\n/** A global flag to force use of cryptographically strong RNG. */\n// declare const UUIDV7_DENY_WEAK_RNG: boolean;\n\n/** Returns the default random number generator available in the environment. */\nconst getDefaultRandom = (): { nextUint32(): number } => {\n// fix: crypto isn't available in react-native, always use Math.random\n\n//   // detect Web Crypto API\n//   if (\n//     typeof crypto !== \"undefined\" &&\n//     typeof crypto.getRandomValues !== \"undefined\"\n//   ) {\n//     return new BufferedCryptoRandom();\n//   } else {\n//     // fall back on Math.random() unless the flag is set to true\n//     if (typeof UUIDV7_DENY_WEAK_RNG !== \"undefined\" && UUIDV7_DENY_WEAK_RNG) {\n//       throw new Error(\"no cryptographically strong RNG available\");\n//     }\n//     return {\n//       nextUint32: (): number =>\n//         Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 +\n//         Math.trunc(Math.random() * 0x1_0000),\n//     };\n//   }\n  return {\n    nextUint32: (): number =>\n      Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 +\n      Math.trunc(Math.random() * 0x1_0000),\n  };\n};\n\n// /**\n//  * Wraps `crypto.getRandomValues()` to enable buffering; this uses a small\n//  * buffer by default to avoid both unbearable throughput decline in some\n//  * environments and the waste of time and space for unused values.\n//  */\n// class BufferedCryptoRandom {\n//   private readonly buffer = new Uint32Array(8);\n//   private cursor = 0xffff;\n//   nextUint32(): number {\n//     if (this.cursor >= this.buffer.length) {\n//       crypto.getRandomValues(this.buffer);\n//       this.cursor = 0;\n//     }\n//     return this.buffer[this.cursor++];\n//   }\n// }\n\nlet defaultGenerator: V7Generator | undefined;\n\n/**\n * Generates a UUIDv7 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv7 = (): string => uuidv7obj().toString();\n\n/** Generates a UUIDv7 object. */\nexport const uuidv7obj = (): UUID =>\n  (defaultGenerator || (defaultGenerator = new V7Generator())).generate();\n\n/**\n * Generates a UUIDv4 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv4 = (): string => uuidv4obj().toString();\n\n/** Generates a UUIDv4 object. */\nexport const uuidv4obj = (): UUID =>\n  (defaultGenerator || (defaultGenerator = new V7Generator())).generateV4();\n","import {\n  PostHogFetchOptions,\n  PostHogFetchResponse,\n  PostHogQueueItem,\n  PostHogAutocaptureElement,\n  PostHogDecideResponse,\n  PostHogCoreOptions,\n  PostHogEventProperties,\n  PostHogPersistedProperty,\n  PostHogCaptureOptions,\n  JsonType,\n} from './types'\nimport {\n  assert,\n  currentISOTime,\n  currentTimestamp,\n  isError,\n  removeTrailingSlash,\n  retriable,\n  RetriableOptions,\n  safeSetTimeout,\n} from './utils'\nimport { LZString } from './lz-string'\nimport { SimpleEventEmitter } from './eventemitter'\nimport { uuidv7 } from './vendor/uuidv7'\nexport * as utils from './utils'\n\nclass PostHogFetchHttpError extends Error {\n  name = 'PostHogFetchHttpError'\n\n  constructor(public response: PostHogFetchResponse) {\n    super('HTTP error while fetching PostHog: ' + response.status)\n  }\n}\n\nclass PostHogFetchNetworkError extends Error {\n  name = 'PostHogFetchNetworkError'\n\n  constructor(public error: unknown) {\n    // TRICKY: \"cause\" is a newer property but is just ignored otherwise. Cast to any to ignore the type issue.\n    // eslint-disable-next-line @typescript-eslint/prefer-ts-expect-error\n    // @ts-ignore\n    super('Network error while fetching PostHog', error instanceof Error ? { cause: error } : {})\n  }\n}\n\nfunction isPostHogFetchError(err: any): boolean {\n  return typeof err === 'object' && (err instanceof PostHogFetchHttpError || err instanceof PostHogFetchNetworkError)\n}\n\nenum QuotaLimitedFeature {\n  FeatureFlags = 'feature_flags',\n  Recordings = 'recordings',\n}\n\nexport abstract class PostHogCoreStateless {\n  // options\n  readonly apiKey: string\n  readonly host: string\n  readonly flushAt: number\n  private maxBatchSize: number\n  private maxQueueSize: number\n  private flushInterval: number\n  private flushPromise: Promise<any> | null = null\n  private requestTimeout: number\n  private featureFlagsRequestTimeoutMs: number\n  private captureMode: 'form' | 'json'\n  private removeDebugCallback?: () => void\n  private disableGeoip: boolean = true\n  private historicalMigration: boolean = false\n  protected disabled = false\n\n  private defaultOptIn: boolean = true\n  private pendingPromises: Record<string, Promise<any>> = {}\n\n  // internal\n  protected _events = new SimpleEventEmitter()\n  protected _flushTimer?: any\n  protected _retryOptions: RetriableOptions\n  protected _initPromise: Promise<void>\n  protected _isInitialized: boolean = false\n\n  // Abstract methods to be overridden by implementations\n  abstract fetch(url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse>\n  abstract getLibraryId(): string\n  abstract getLibraryVersion(): string\n  abstract getCustomUserAgent(): string | void\n\n  // This is our abstracted storage. Each implementation should handle its own\n  abstract getPersistedProperty<T>(key: PostHogPersistedProperty): T | undefined\n  abstract setPersistedProperty<T>(key: PostHogPersistedProperty, value: T | null): void\n\n  constructor(apiKey: string, options?: PostHogCoreOptions) {\n    assert(apiKey, \"You must pass your PostHog project's api key.\")\n\n    this.apiKey = apiKey\n    this.host = removeTrailingSlash(options?.host || 'https://us.i.posthog.com')\n    this.flushAt = options?.flushAt ? Math.max(options?.flushAt, 1) : 20\n    this.maxBatchSize = Math.max(this.flushAt, options?.maxBatchSize ?? 100)\n    this.maxQueueSize = Math.max(this.flushAt, options?.maxQueueSize ?? 1000)\n    this.flushInterval = options?.flushInterval ?? 10000\n    this.captureMode = options?.captureMode || 'json'\n\n    // If enable is explicitly set to false we override the optout\n    this.defaultOptIn = options?.defaultOptIn ?? true\n\n    this._retryOptions = {\n      retryCount: options?.fetchRetryCount ?? 3,\n      retryDelay: options?.fetchRetryDelay ?? 3000, // 3 seconds\n      retryCheck: isPostHogFetchError,\n    }\n    this.requestTimeout = options?.requestTimeout ?? 10000 // 10 seconds\n    this.featureFlagsRequestTimeoutMs = options?.featureFlagsRequestTimeoutMs ?? 3000 // 3 seconds\n    this.disableGeoip = options?.disableGeoip ?? true\n    this.disabled = options?.disabled ?? false\n    this.historicalMigration = options?.historicalMigration ?? false\n    // Init promise allows the derived class to block calls until it is ready\n    this._initPromise = Promise.resolve()\n    this._isInitialized = true\n  }\n\n  protected logMsgIfDebug(fn: () => void): void {\n    if (this.isDebug) {\n      fn()\n    }\n  }\n\n  protected wrap(fn: () => void): void {\n    if (this.disabled) {\n      this.logMsgIfDebug(() => console.warn('[PostHog] The client is disabled'))\n      return\n    }\n\n    if (this._isInitialized) {\n      // NOTE: We could also check for the \"opt in\" status here...\n      return fn()\n    }\n\n    this._initPromise.then(() => fn())\n  }\n\n  protected getCommonEventProperties(): any {\n    return {\n      $lib: this.getLibraryId(),\n      $lib_version: this.getLibraryVersion(),\n    }\n  }\n\n  public get optedOut(): boolean {\n    return this.getPersistedProperty(PostHogPersistedProperty.OptedOut) ?? !this.defaultOptIn\n  }\n\n  async optIn(): Promise<void> {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.OptedOut, false)\n    })\n  }\n\n  async optOut(): Promise<void> {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.OptedOut, true)\n    })\n  }\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb)\n  }\n\n  debug(enabled: boolean = true): void {\n    this.removeDebugCallback?.()\n\n    if (enabled) {\n      const removeDebugCallback = this.on('*', (event, payload) => console.log('PostHog Debug', event, payload))\n      this.removeDebugCallback = () => {\n        removeDebugCallback()\n        this.removeDebugCallback = undefined\n      }\n    }\n  }\n\n  get isDebug(): boolean {\n    return !!this.removeDebugCallback\n  }\n\n  get isDisabled(): boolean {\n    return this.disabled\n  }\n\n  private buildPayload(payload: { distinct_id: string; event: string; properties?: PostHogEventProperties }): any {\n    return {\n      distinct_id: payload.distinct_id,\n      event: payload.event,\n      properties: {\n        ...(payload.properties || {}),\n        ...this.getCommonEventProperties(), // Common PH props\n      },\n    }\n  }\n\n  protected addPendingPromise<T>(promise: Promise<T>): Promise<T> {\n    const promiseUUID = uuidv7()\n    this.pendingPromises[promiseUUID] = promise\n    promise\n      .catch(() => {})\n      .finally(() => {\n        delete this.pendingPromises[promiseUUID]\n      })\n\n    return promise\n  }\n\n  /***\n   *** TRACKING\n   ***/\n  protected identifyStateless(\n    distinctId: string,\n    properties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      // The properties passed to identifyStateless are event properties.\n      // To add person properties, pass in all person properties to the `$set` and `$set_once` keys.\n\n      const payload = {\n        ...this.buildPayload({\n          distinct_id: distinctId,\n          event: '$identify',\n          properties,\n        }),\n      }\n\n      this.enqueue('identify', payload, options)\n    })\n  }\n\n  protected captureStateless(\n    distinctId: string,\n    event: string,\n    properties?: { [key: string]: any },\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({ distinct_id: distinctId, event, properties })\n      this.enqueue('capture', payload, options)\n    })\n  }\n\n  protected aliasStateless(\n    alias: string,\n    distinctId: string,\n    properties?: { [key: string]: any },\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({\n        event: '$create_alias',\n        distinct_id: distinctId,\n        properties: {\n          ...(properties || {}),\n          distinct_id: distinctId,\n          alias,\n        },\n      })\n\n      this.enqueue('alias', payload, options)\n    })\n  }\n\n  /***\n   *** GROUPS\n   ***/\n  protected groupIdentifyStateless(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions,\n    distinctId?: string,\n    eventProperties?: PostHogEventProperties\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({\n        distinct_id: distinctId || `$${groupType}_${groupKey}`,\n        event: '$groupidentify',\n        properties: {\n          $group_type: groupType,\n          $group_key: groupKey,\n          $group_set: groupProperties || {},\n          ...(eventProperties || {}),\n        },\n      })\n\n      this.enqueue('capture', payload, options)\n    })\n  }\n\n  /***\n   *** FEATURE FLAGS\n   ***/\n\n  protected async getDecide(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    extraPayload: Record<string, any> = {}\n  ): Promise<PostHogDecideResponse | undefined> {\n    await this._initPromise\n\n    const url = `${this.host}/decide/?v=3`\n    const fetchOptions: PostHogFetchOptions = {\n      method: 'POST',\n      headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        token: this.apiKey,\n        distinct_id: distinctId,\n        groups,\n        person_properties: personProperties,\n        group_properties: groupProperties,\n        ...extraPayload,\n      }),\n    }\n    // Don't retry /decide API calls\n    return this.fetchWithRetry(url, fetchOptions, { retryCount: 0 }, this.featureFlagsRequestTimeoutMs)\n      .then((response) => response.json() as Promise<PostHogDecideResponse>)\n      .catch((error) => {\n        this._events.emit('error', error)\n        return undefined\n      })\n  }\n\n  protected async getFeatureFlagStateless(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<{\n    response: boolean | string | undefined\n    requestId: string | undefined\n  }> {\n    await this._initPromise\n\n    const decideResponse = await this.getFeatureFlagsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip,\n      [key]\n    )\n    const featureFlags = decideResponse.flags\n\n    if (!featureFlags) {\n      // If we haven't loaded flags yet, or errored out, we respond with undefined\n      return {\n        response: undefined,\n        requestId: undefined,\n      }\n    }\n\n    let response = featureFlags[key]\n    // `/decide` v3 returns all flags\n\n    if (response === undefined) {\n      // For cases where the flag is unknown, return false\n      response = false\n    }\n\n    // If we have flags we either return the value (true or string) or false\n    return {\n      response,\n      requestId: decideResponse.requestId,\n    }\n  }\n\n  protected async getFeatureFlagPayloadStateless(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<JsonType | undefined> {\n    await this._initPromise\n\n    const payloads = await this.getFeatureFlagPayloadsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip,\n      [key]\n    )\n\n    if (!payloads) {\n      return undefined\n    }\n\n    const response = payloads[key]\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined) {\n      return null\n    }\n\n    return response\n  }\n\n  protected async getFeatureFlagPayloadsStateless(\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean,\n    flagKeysToEvaluate?: string[]\n  ): Promise<PostHogDecideResponse['featureFlagPayloads'] | undefined> {\n    await this._initPromise\n\n    const payloads = (\n      await this.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip,\n        flagKeysToEvaluate\n      )\n    ).payloads\n\n    return payloads\n  }\n\n  protected _parsePayload(response: any): any {\n    try {\n      return JSON.parse(response)\n    } catch {\n      return response\n    }\n  }\n\n  protected async getFeatureFlagsStateless(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean,\n    flagKeysToEvaluate?: string[]\n  ): Promise<{\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n    requestId: PostHogDecideResponse['requestId'] | undefined\n  }> {\n    await this._initPromise\n\n    return await this.getFeatureFlagsAndPayloadsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip,\n      flagKeysToEvaluate\n    )\n  }\n\n  protected async getFeatureFlagsAndPayloadsStateless(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean,\n    flagKeysToEvaluate?: string[]\n  ): Promise<{\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n    requestId: PostHogDecideResponse['requestId'] | undefined\n  }> {\n    await this._initPromise\n\n    const extraPayload: Record<string, any> = {}\n    if (disableGeoip ?? this.disableGeoip) {\n      extraPayload['geoip_disable'] = true\n    }\n    if (flagKeysToEvaluate) {\n      extraPayload['flag_keys_to_evaluate'] = flagKeysToEvaluate\n    }\n    const decideResponse = await this.getDecide(distinctId, groups, personProperties, groupProperties, extraPayload)\n\n    // Add check for quota limitation on feature flags\n    if (decideResponse?.quotaLimited?.includes(QuotaLimitedFeature.FeatureFlags)) {\n      console.warn(\n        '[FEATURE FLAGS] Feature flags quota limit exceeded - feature flags unavailable. Learn more about billing limits at https://posthog.com/docs/billing/limits-alerts'\n      )\n      return {\n        flags: undefined,\n        payloads: undefined,\n        requestId: decideResponse?.requestId,\n      }\n    }\n\n    const flags = decideResponse?.featureFlags\n    const payloads = decideResponse?.featureFlagPayloads\n\n    let parsedPayloads = payloads\n\n    if (payloads) {\n      parsedPayloads = Object.fromEntries(Object.entries(payloads).map(([k, v]) => [k, this._parsePayload(v)]))\n    }\n\n    return {\n      flags,\n      payloads: parsedPayloads,\n      requestId: decideResponse?.requestId,\n    }\n  }\n\n  /***\n   *** QUEUEING AND FLUSHING\n   ***/\n  protected enqueue(type: string, _message: any, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      if (this.optedOut) {\n        this._events.emit(type, `Library is disabled. Not sending event. To re-enable, call posthog.optIn()`)\n        return\n      }\n\n      const message = {\n        ..._message,\n        type: type,\n        library: this.getLibraryId(),\n        library_version: this.getLibraryVersion(),\n        timestamp: options?.timestamp ? options?.timestamp : currentISOTime(),\n        uuid: options?.uuid ? options.uuid : uuidv7(),\n      }\n\n      const addGeoipDisableProperty = options?.disableGeoip ?? this.disableGeoip\n      if (addGeoipDisableProperty) {\n        if (!message.properties) {\n          message.properties = {}\n        }\n        message['properties']['$geoip_disable'] = true\n      }\n\n      if (message.distinctId) {\n        message.distinct_id = message.distinctId\n        delete message.distinctId\n      }\n\n      const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n      if (queue.length >= this.maxQueueSize) {\n        queue.shift()\n        this.logMsgIfDebug(() => console.info('Queue is full, the oldest event is dropped.'))\n      }\n\n      queue.push({ message })\n      this.setPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue, queue)\n\n      this._events.emit(type, message)\n\n      // Flush queued events if we meet the flushAt length\n      if (queue.length >= this.flushAt) {\n        this.flushBackground()\n      }\n\n      if (this.flushInterval && !this._flushTimer) {\n        this._flushTimer = safeSetTimeout(() => this.flushBackground(), this.flushInterval)\n      }\n    })\n  }\n\n  private clearFlushTimer(): void {\n    if (this._flushTimer) {\n      clearTimeout(this._flushTimer)\n      this._flushTimer = undefined\n    }\n  }\n\n  /**\n   * Helper for flushing the queue in the background\n   * Avoids unnecessary promise errors\n   */\n  private flushBackground(): void {\n    void this.flush().catch(() => {})\n  }\n\n  async flush(): Promise<any[]> {\n    if (!this.flushPromise) {\n      this.flushPromise = this._flush().finally(() => {\n        this.flushPromise = null\n      })\n      this.addPendingPromise(this.flushPromise)\n    }\n    return this.flushPromise\n  }\n\n  protected getCustomHeaders(): { [key: string]: string } {\n    // Don't set the user agent if we're not on a browser. The latest spec allows\n    // the User-Agent header (see https://fetch.spec.whatwg.org/#terminology-headers\n    // and https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader),\n    // but browsers such as Chrome and Safari have not caught up.\n    const customUserAgent = this.getCustomUserAgent()\n    const headers: { [key: string]: string } = {}\n    if (customUserAgent && customUserAgent !== '') {\n      headers['User-Agent'] = customUserAgent\n    }\n    return headers\n  }\n\n  private async _flush(): Promise<any[]> {\n    this.clearFlushTimer()\n    await this._initPromise\n\n    const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n    if (!queue.length) {\n      return []\n    }\n\n    const items = queue.slice(0, this.maxBatchSize)\n    const messages = items.map((item) => item.message)\n\n    const persistQueueChange = (): void => {\n      const refreshedQueue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n      this.setPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue, refreshedQueue.slice(items.length))\n    }\n\n    const data: Record<string, any> = {\n      api_key: this.apiKey,\n      batch: messages,\n      sent_at: currentISOTime(),\n    }\n\n    if (this.historicalMigration) {\n      data.historical_migration = true\n    }\n\n    const payload = JSON.stringify(data)\n\n    const url =\n      this.captureMode === 'form'\n        ? `${this.host}/e/?ip=1&_=${currentTimestamp()}&v=${this.getLibraryVersion()}`\n        : `${this.host}/batch/`\n\n    const fetchOptions: PostHogFetchOptions =\n      this.captureMode === 'form'\n        ? {\n            method: 'POST',\n            mode: 'no-cors',\n            credentials: 'omit',\n            headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `data=${encodeURIComponent(LZString.compressToBase64(payload))}&compression=lz64`,\n          }\n        : {\n            method: 'POST',\n            headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/json' },\n            body: payload,\n          }\n\n    try {\n      await this.fetchWithRetry(url, fetchOptions)\n    } catch (err) {\n      // depending on the error type, eg a malformed JSON or broken queue, it'll always return an error\n      // and this will be an endless loop, in this case, if the error isn't a network issue, we always remove the items from the queue\n      if (!(err instanceof PostHogFetchNetworkError)) {\n        persistQueueChange()\n      }\n      this._events.emit('error', err)\n\n      throw err\n    }\n\n    persistQueueChange()\n    this._events.emit('flush', messages)\n\n    return messages\n  }\n\n  private async fetchWithRetry(\n    url: string,\n    options: PostHogFetchOptions,\n    retryOptions?: Partial<RetriableOptions>,\n    requestTimeout?: number\n  ): Promise<PostHogFetchResponse> {\n    ;(AbortSignal as any).timeout ??= function timeout(ms: number) {\n      const ctrl = new AbortController()\n      setTimeout(() => ctrl.abort(), ms)\n      return ctrl.signal\n    }\n\n    return await retriable(\n      async () => {\n        let res: PostHogFetchResponse | null = null\n        try {\n          res = await this.fetch(url, {\n            signal: (AbortSignal as any).timeout(requestTimeout ?? this.requestTimeout),\n            ...options,\n          })\n        } catch (e) {\n          // fetch will only throw on network errors or on timeouts\n          throw new PostHogFetchNetworkError(e)\n        }\n        // If we're in no-cors mode, we can't access the response status\n        // We only throw on HTTP errors if we're not in no-cors mode\n        // https://developer.mozilla.org/en-US/docs/Web/API/Request/mode#no-cors\n        const isNoCors = options.mode === 'no-cors'\n        if (!isNoCors && (res.status < 200 || res.status >= 400)) {\n          throw new PostHogFetchHttpError(res)\n        }\n        return res\n      },\n      { ...this._retryOptions, ...retryOptions }\n    )\n  }\n\n  async shutdown(shutdownTimeoutMs: number = 30000): Promise<void> {\n    // A little tricky - we want to have a max shutdown time and enforce it, even if that means we have some\n    // dangling promises. We'll keep track of the timeout and resolve/reject based on that.\n\n    await this._initPromise\n    let hasTimedOut = false\n    this.clearFlushTimer()\n\n    const doShutdown = async (): Promise<void> => {\n      try {\n        await Promise.all(Object.values(this.pendingPromises))\n\n        while (true) {\n          const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n          if (queue.length === 0) {\n            break\n          }\n\n          // flush again to make sure we send all events, some of which might've been added\n          // while we were waiting for the pending promises to resolve\n          // For example, see sendFeatureFlags in posthog-node/src/posthog-node.ts::capture\n          await this.flush()\n\n          if (hasTimedOut) {\n            break\n          }\n        }\n      } catch (e) {\n        if (!isPostHogFetchError(e)) {\n          throw e\n        }\n        this.logMsgIfDebug(() => console.error('Error while shutting down PostHog', e))\n      }\n    }\n\n    return Promise.race([\n      new Promise<void>((_, reject) => {\n        safeSetTimeout(() => {\n          this.logMsgIfDebug(() => console.error('Timed out while shutting down PostHog'))\n          hasTimedOut = true\n          reject('Timeout while shutting down PostHog. Some events may not have been sent.')\n        }, shutdownTimeoutMs)\n      }),\n      doShutdown(),\n    ])\n  }\n}\n\nexport abstract class PostHogCore extends PostHogCoreStateless {\n  // options\n  private sendFeatureFlagEvent: boolean\n  private flagCallReported: { [key: string]: boolean } = {}\n\n  // internal\n  protected _decideResponsePromise?: Promise<PostHogDecideResponse | undefined> // TODO: come back to this, fix typing\n  protected _sessionExpirationTimeSeconds: number\n  protected sessionProps: PostHogEventProperties = {}\n\n  constructor(apiKey: string, options?: PostHogCoreOptions) {\n    // Default for stateful mode is to not disable geoip. Only override if explicitly set\n    const disableGeoipOption = options?.disableGeoip ?? false\n\n    // Default for stateful mode is to timeout at 10s. Only override if explicitly set\n    const featureFlagsRequestTimeoutMs = options?.featureFlagsRequestTimeoutMs ?? 10000 // 10 seconds\n\n    super(apiKey, { ...options, disableGeoip: disableGeoipOption, featureFlagsRequestTimeoutMs })\n\n    this.sendFeatureFlagEvent = options?.sendFeatureFlagEvent ?? true\n    this._sessionExpirationTimeSeconds = options?.sessionExpirationTimeSeconds ?? 1800 // 30 minutes\n  }\n\n  protected setupBootstrap(options?: Partial<PostHogCoreOptions>): void {\n    const bootstrap = options?.bootstrap\n    if (!bootstrap) {\n      return\n    }\n\n    // bootstrap options are only set if no persisted values are found\n    // this is to prevent overwriting existing values\n    if (bootstrap.distinctId) {\n      if (bootstrap.isIdentifiedId) {\n        const distinctId = this.getPersistedProperty(PostHogPersistedProperty.DistinctId)\n\n        if (!distinctId) {\n          this.setPersistedProperty(PostHogPersistedProperty.DistinctId, bootstrap.distinctId)\n        }\n      } else {\n        const anonymousId = this.getPersistedProperty(PostHogPersistedProperty.AnonymousId)\n\n        if (!anonymousId) {\n          this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, bootstrap.distinctId)\n        }\n      }\n    }\n\n    const bootstrapfeatureFlags = bootstrap.featureFlags\n    if (bootstrapfeatureFlags && Object.keys(bootstrapfeatureFlags).length) {\n      const bootstrapFlags = Object.keys(bootstrapfeatureFlags)\n        .filter((flag) => !!bootstrapfeatureFlags[flag])\n        .reduce(\n          (res: Record<string, string | boolean>, key) => ((res[key] = bootstrapfeatureFlags[key] || false), res),\n          {}\n        )\n\n      if (Object.keys(bootstrapFlags).length) {\n        this.setPersistedProperty(PostHogPersistedProperty.BootstrapFeatureFlags, bootstrapFlags)\n\n        const currentFlags =\n          this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(PostHogPersistedProperty.FeatureFlags) || {}\n        const newFeatureFlags = { ...bootstrapFlags, ...currentFlags }\n        this.setKnownFeatureFlags(newFeatureFlags)\n      }\n\n      const bootstrapFlagPayloads = bootstrap.featureFlagPayloads\n      if (bootstrapFlagPayloads && Object.keys(bootstrapFlagPayloads).length) {\n        this.setPersistedProperty(PostHogPersistedProperty.BootstrapFeatureFlagPayloads, bootstrapFlagPayloads)\n\n        const currentFlagPayloads =\n          this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n            PostHogPersistedProperty.FeatureFlagPayloads\n          ) || {}\n        const newFeatureFlagPayloads = { ...bootstrapFlagPayloads, ...currentFlagPayloads }\n        this.setKnownFeatureFlagPayloads(newFeatureFlagPayloads)\n      }\n    }\n  }\n\n  // NOTE: Props are lazy loaded from localstorage hence the complex getter setter logic\n  private get props(): PostHogEventProperties {\n    if (!this._props) {\n      this._props = this.getPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props)\n    }\n    return this._props || {}\n  }\n\n  private set props(val: PostHogEventProperties | undefined) {\n    this._props = val\n  }\n\n  private clearProps(): void {\n    this.props = undefined\n    this.sessionProps = {}\n    this.flagCallReported = {}\n  }\n\n  private _props: PostHogEventProperties | undefined\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb)\n  }\n\n  reset(propertiesToKeep?: PostHogPersistedProperty[]): void {\n    this.wrap(() => {\n      const allPropertiesToKeep = [PostHogPersistedProperty.Queue, ...(propertiesToKeep || [])]\n\n      // clean up props\n      this.clearProps()\n\n      for (const key of <(keyof typeof PostHogPersistedProperty)[]>Object.keys(PostHogPersistedProperty)) {\n        if (!allPropertiesToKeep.includes(PostHogPersistedProperty[key])) {\n          this.setPersistedProperty((PostHogPersistedProperty as any)[key], null)\n        }\n      }\n\n      this.reloadFeatureFlags()\n    })\n  }\n\n  protected getCommonEventProperties(): any {\n    const featureFlags = this.getFeatureFlags()\n\n    const featureVariantProperties: Record<string, string | boolean> = {}\n    if (featureFlags) {\n      for (const [feature, variant] of Object.entries(featureFlags)) {\n        featureVariantProperties[`$feature/${feature}`] = variant\n      }\n    }\n    return {\n      $active_feature_flags: featureFlags ? Object.keys(featureFlags) : undefined,\n      ...featureVariantProperties,\n      ...super.getCommonEventProperties(),\n    }\n  }\n\n  private enrichProperties(properties?: PostHogEventProperties): any {\n    return {\n      ...this.props, // Persisted properties first\n      ...this.sessionProps, // Followed by session properties\n      ...(properties || {}), // Followed by user specified properties\n      ...this.getCommonEventProperties(), // Followed by FF props\n      $session_id: this.getSessionId(),\n    }\n  }\n\n  /**\n   * * @returns {string} The stored session ID for the current session. This may be an empty string if the client is not yet fully initialized.\n   */\n  getSessionId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    let sessionId = this.getPersistedProperty<string>(PostHogPersistedProperty.SessionId)\n    const sessionTimestamp = this.getPersistedProperty<number>(PostHogPersistedProperty.SessionLastTimestamp) || 0\n    if (!sessionId || Date.now() - sessionTimestamp > this._sessionExpirationTimeSeconds * 1000) {\n      sessionId = uuidv7()\n      this.setPersistedProperty(PostHogPersistedProperty.SessionId, sessionId)\n    }\n    this.setPersistedProperty(PostHogPersistedProperty.SessionLastTimestamp, Date.now())\n\n    return sessionId\n  }\n\n  resetSessionId(): void {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.SessionId, null)\n      this.setPersistedProperty(PostHogPersistedProperty.SessionLastTimestamp, null)\n    })\n  }\n\n  /**\n   * * @returns {string} The stored anonymous ID. This may be an empty string if the client is not yet fully initialized.\n   */\n  getAnonymousId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    let anonId = this.getPersistedProperty<string>(PostHogPersistedProperty.AnonymousId)\n    if (!anonId) {\n      anonId = uuidv7()\n      this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, anonId)\n    }\n    return anonId\n  }\n\n  /**\n   * * @returns {string} The stored distinct ID. This may be an empty string if the client is not yet fully initialized.\n   */\n  getDistinctId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    return this.getPersistedProperty<string>(PostHogPersistedProperty.DistinctId) || this.getAnonymousId()\n  }\n\n  async unregister(property: string): Promise<void> {\n    this.wrap(() => {\n      delete this.props[property]\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props, this.props)\n    })\n  }\n\n  async register(properties: { [key: string]: any }): Promise<void> {\n    this.wrap(() => {\n      this.props = {\n        ...this.props,\n        ...properties,\n      }\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props, this.props)\n    })\n  }\n\n  registerForSession(properties: { [key: string]: any }): void {\n    this.sessionProps = {\n      ...this.sessionProps,\n      ...properties,\n    }\n  }\n\n  unregisterForSession(property: string): void {\n    delete this.sessionProps[property]\n  }\n\n  /***\n   *** TRACKING\n   ***/\n  identify(distinctId?: string, properties?: PostHogEventProperties, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      const previousDistinctId = this.getDistinctId()\n      distinctId = distinctId || previousDistinctId\n\n      if (properties?.$groups) {\n        this.groups(properties.$groups)\n      }\n\n      // promote $set and $set_once to top level\n      const userPropsOnce = properties?.$set_once\n      delete properties?.$set_once\n\n      // if no $set is provided we assume all properties are $set\n      const userProps = properties?.$set || properties\n\n      const allProperties = this.enrichProperties({\n        $anon_distinct_id: this.getAnonymousId(),\n        $set: userProps,\n        $set_once: userPropsOnce,\n      })\n\n      if (distinctId !== previousDistinctId) {\n        // We keep the AnonymousId to be used by decide calls and identify to link the previousId\n        this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, previousDistinctId)\n        this.setPersistedProperty(PostHogPersistedProperty.DistinctId, distinctId)\n        this.reloadFeatureFlags()\n      }\n\n      super.identifyStateless(distinctId, allProperties, options)\n    })\n  }\n\n  capture(event: string, properties?: { [key: string]: any }, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n\n      if (properties?.$groups) {\n        this.groups(properties.$groups)\n      }\n\n      const allProperties = this.enrichProperties(properties)\n\n      super.captureStateless(distinctId, event, allProperties, options)\n    })\n  }\n\n  alias(alias: string): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const allProperties = this.enrichProperties({})\n\n      super.aliasStateless(alias, distinctId, allProperties)\n    })\n  }\n\n  autocapture(\n    eventType: string,\n    elements: PostHogAutocaptureElement[],\n    properties: PostHogEventProperties = {},\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const payload = {\n        distinct_id: distinctId,\n        event: '$autocapture',\n        properties: {\n          ...this.enrichProperties(properties),\n          $event_type: eventType,\n          $elements: elements,\n        },\n      }\n\n      this.enqueue('autocapture', payload, options)\n    })\n  }\n\n  /***\n   *** GROUPS\n   ***/\n\n  groups(groups: { [type: string]: string | number }): void {\n    this.wrap(() => {\n      // Get persisted groups\n      const existingGroups = this.props.$groups || {}\n\n      this.register({\n        $groups: {\n          ...existingGroups,\n          ...groups,\n        },\n      })\n\n      if (Object.keys(groups).find((type) => existingGroups[type] !== groups[type])) {\n        this.reloadFeatureFlags()\n      }\n    })\n  }\n\n  group(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      this.groups({\n        [groupType]: groupKey,\n      })\n\n      if (groupProperties) {\n        this.groupIdentify(groupType, groupKey, groupProperties, options)\n      }\n    })\n  }\n\n  groupIdentify(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const eventProperties = this.enrichProperties({})\n      super.groupIdentifyStateless(groupType, groupKey, groupProperties, options, distinctId, eventProperties)\n    })\n  }\n\n  /***\n   * PROPERTIES\n   ***/\n  setPersonPropertiesForFlags(properties: { [type: string]: string }): void {\n    this.wrap(() => {\n      // Get persisted person properties\n      const existingProperties =\n        this.getPersistedProperty<Record<string, string>>(PostHogPersistedProperty.PersonProperties) || {}\n\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.PersonProperties, {\n        ...existingProperties,\n        ...properties,\n      })\n    })\n  }\n\n  resetPersonPropertiesForFlags(): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.PersonProperties, {})\n    })\n  }\n\n  /** @deprecated - Renamed to setPersonPropertiesForFlags */\n  personProperties(properties: { [type: string]: string }): void {\n    return this.setPersonPropertiesForFlags(properties)\n  }\n\n  setGroupPropertiesForFlags(properties: { [type: string]: Record<string, string> }): void {\n    this.wrap(() => {\n      // Get persisted group properties\n      const existingProperties =\n        this.getPersistedProperty<Record<string, Record<string, string>>>(PostHogPersistedProperty.GroupProperties) ||\n        {}\n\n      if (Object.keys(existingProperties).length !== 0) {\n        Object.keys(existingProperties).forEach((groupType) => {\n          existingProperties[groupType] = {\n            ...existingProperties[groupType],\n            ...properties[groupType],\n          }\n          delete properties[groupType]\n        })\n      }\n\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.GroupProperties, {\n        ...existingProperties,\n        ...properties,\n      })\n    })\n  }\n\n  resetGroupPropertiesForFlags(): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.GroupProperties, {})\n    })\n  }\n\n  /** @deprecated - Renamed to setGroupPropertiesForFlags */\n  groupProperties(properties: { [type: string]: Record<string, string> }): void {\n    this.wrap(() => {\n      this.setGroupPropertiesForFlags(properties)\n    })\n  }\n\n  /***\n   *** FEATURE FLAGS\n   ***/\n  private async decideAsync(sendAnonDistinctId: boolean = true): Promise<PostHogDecideResponse | undefined> {\n    await this._initPromise\n    if (this._decideResponsePromise) {\n      return this._decideResponsePromise\n    }\n    return this._decideAsync(sendAnonDistinctId)\n  }\n\n  private async _decideAsync(sendAnonDistinctId: boolean = true): Promise<PostHogDecideResponse | undefined> {\n    this._decideResponsePromise = this._initPromise\n      .then(async () => {\n        const distinctId = this.getDistinctId()\n        const groups = this.props.$groups || {}\n        const personProperties =\n          this.getPersistedProperty<Record<string, string>>(PostHogPersistedProperty.PersonProperties) || {}\n        const groupProperties =\n          this.getPersistedProperty<Record<string, Record<string, string>>>(PostHogPersistedProperty.GroupProperties) ||\n          {}\n\n        const extraProperties = {\n          $anon_distinct_id: sendAnonDistinctId ? this.getAnonymousId() : undefined,\n        }\n\n        const res = await super.getDecide(distinctId, groups, personProperties, groupProperties, extraProperties)\n        // Add check for quota limitation on feature flags\n        if (res?.quotaLimited?.includes(QuotaLimitedFeature.FeatureFlags)) {\n          // Unset all feature flags by setting to null\n          this.setKnownFeatureFlags(null)\n          this.setKnownFeatureFlagPayloads(null)\n          console.warn(\n            '[FEATURE FLAGS] Feature flags quota limit exceeded - unsetting all flags. Learn more about billing limits at https://posthog.com/docs/billing/limits-alerts'\n          )\n          return res\n        }\n        if (res?.featureFlags) {\n          // clear flag call reported if we have new flags since they might have changed\n          if (this.sendFeatureFlagEvent) {\n            this.flagCallReported = {}\n          }\n\n          let newFeatureFlags = res.featureFlags\n          let newFeatureFlagPayloads = res.featureFlagPayloads\n          if (res.errorsWhileComputingFlags) {\n            // if not all flags were computed, we upsert flags instead of replacing them\n            const currentFlags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n              PostHogPersistedProperty.FeatureFlags\n            )\n\n            this.logMsgIfDebug(() =>\n              console.log('PostHog Debug', 'Cached feature flags: ', JSON.stringify(currentFlags))\n            )\n\n            const currentFlagPayloads = this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n              PostHogPersistedProperty.FeatureFlagPayloads\n            )\n            newFeatureFlags = { ...currentFlags, ...res.featureFlags }\n            newFeatureFlagPayloads = { ...currentFlagPayloads, ...res.featureFlagPayloads }\n          }\n          this.setKnownFeatureFlags(newFeatureFlags)\n          this.setKnownFeatureFlagPayloads(\n            Object.fromEntries(Object.entries(newFeatureFlagPayloads || {}).map(([k, v]) => [k, this._parsePayload(v)]))\n          )\n          // Mark that we hit the /decide endpoint so we can capture this in the $feature_flag_called event\n          this.setPersistedProperty(PostHogPersistedProperty.DecideEndpointWasHit, true)\n\n          const sessionReplay = res?.sessionRecording\n          if (sessionReplay) {\n            this.setPersistedProperty(PostHogPersistedProperty.SessionReplay, sessionReplay)\n            this.logMsgIfDebug(() =>\n              console.log('PostHog Debug', 'Session replay config: ', JSON.stringify(sessionReplay))\n            )\n          } else {\n            this.logMsgIfDebug(() => console.info('PostHog Debug', 'Session replay config disabled.'))\n            this.setPersistedProperty(PostHogPersistedProperty.SessionReplay, null)\n          }\n        }\n        return res\n      })\n      .finally(() => {\n        this._decideResponsePromise = undefined\n      })\n    return this._decideResponsePromise\n  }\n\n  private setKnownFeatureFlags(featureFlags: PostHogDecideResponse['featureFlags'] | null): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogDecideResponse['featureFlags']>(\n        PostHogPersistedProperty.FeatureFlags,\n        featureFlags\n      )\n      this._events.emit('featureflags', featureFlags)\n    })\n  }\n\n  private setKnownFeatureFlagPayloads(featureFlagPayloads: PostHogDecideResponse['featureFlagPayloads'] | null): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n        PostHogPersistedProperty.FeatureFlagPayloads,\n        featureFlagPayloads\n      )\n    })\n  }\n\n  getFeatureFlag(key: string): boolean | string | undefined {\n    const featureFlags = this.getFeatureFlags()\n\n    if (!featureFlags) {\n      // If we haven't loaded flags yet, or errored out, we respond with undefined\n      return undefined\n    }\n\n    let response = featureFlags[key]\n    // `/decide` v3 returns all flags\n\n    if (response === undefined) {\n      // For cases where the flag is unknown, return false\n      response = false\n    }\n\n    if (this.sendFeatureFlagEvent && !this.flagCallReported[key]) {\n      this.flagCallReported[key] = true\n      this.capture('$feature_flag_called', {\n        $feature_flag: key,\n        $feature_flag_response: response,\n        $feature_flag_bootstrapped_response: this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n          PostHogPersistedProperty.BootstrapFeatureFlags\n        )?.[key],\n        $feature_flag_bootstrapped_payload: this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n          PostHogPersistedProperty.BootstrapFeatureFlagPayloads\n        )?.[key],\n        // If we haven't yet received a response from the /decide endpoint, we must have used the bootstrapped value\n        $used_bootstrap_value: !this.getPersistedProperty(PostHogPersistedProperty.DecideEndpointWasHit),\n      })\n    }\n\n    // If we have flags we either return the value (true or string) or false\n    return response\n  }\n\n  getFeatureFlagPayload(key: string): JsonType | undefined {\n    const payloads = this.getFeatureFlagPayloads()\n\n    if (!payloads) {\n      return undefined\n    }\n\n    const response = payloads[key]\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined) {\n      return null\n    }\n\n    return response\n  }\n\n  getFeatureFlagPayloads(): PostHogDecideResponse['featureFlagPayloads'] | undefined {\n    const payloads = this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n      PostHogPersistedProperty.FeatureFlagPayloads\n    )\n\n    return payloads\n  }\n\n  getFeatureFlags(): PostHogDecideResponse['featureFlags'] | undefined {\n    // NOTE: We don't check for _initPromise here as the function is designed to be\n    // callable before the state being loaded anyways\n    let flags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(PostHogPersistedProperty.FeatureFlags)\n    const overriddenFlags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n      PostHogPersistedProperty.OverrideFeatureFlags\n    )\n\n    if (!overriddenFlags) {\n      return flags\n    }\n\n    flags = flags || {}\n\n    for (const key in overriddenFlags) {\n      if (!overriddenFlags[key]) {\n        delete flags[key]\n      } else {\n        flags[key] = overriddenFlags[key]\n      }\n    }\n\n    return flags\n  }\n\n  getFeatureFlagsAndPayloads(): {\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n  } {\n    const flags = this.getFeatureFlags()\n    const payloads = this.getFeatureFlagPayloads()\n\n    return {\n      flags,\n      payloads,\n    }\n  }\n\n  isFeatureEnabled(key: string): boolean | undefined {\n    const response = this.getFeatureFlag(key)\n    if (response === undefined) {\n      return undefined\n    }\n    return !!response\n  }\n\n  // Used when we want to trigger the reload but we don't care about the result\n  reloadFeatureFlags(cb?: (err?: Error, flags?: PostHogDecideResponse['featureFlags']) => void): void {\n    this.decideAsync()\n      .then((res) => {\n        cb?.(undefined, res?.featureFlags)\n      })\n      .catch((e) => {\n        cb?.(e, undefined)\n        if (!cb) {\n          this.logMsgIfDebug(() => console.log('[PostHog] Error reloading feature flags', e))\n        }\n      })\n  }\n\n  async reloadFeatureFlagsAsync(\n    sendAnonDistinctId: boolean = true\n  ): Promise<PostHogDecideResponse['featureFlags'] | undefined> {\n    return (await this.decideAsync(sendAnonDistinctId))?.featureFlags\n  }\n\n  onFeatureFlags(cb: (flags: PostHogDecideResponse['featureFlags']) => void): () => void {\n    return this.on('featureflags', async () => {\n      const flags = this.getFeatureFlags()\n      if (flags) {\n        cb(flags)\n      }\n    })\n  }\n\n  onFeatureFlag(key: string, cb: (value: string | boolean) => void): () => void {\n    return this.on('featureflags', async () => {\n      const flagResponse = this.getFeatureFlag(key)\n      if (flagResponse !== undefined) {\n        cb(flagResponse)\n      }\n    })\n  }\n\n  async overrideFeatureFlag(flags: PostHogDecideResponse['featureFlags'] | null): Promise<void> {\n    this.wrap(() => {\n      if (flags === null) {\n        return this.setPersistedProperty(PostHogPersistedProperty.OverrideFeatureFlags, null)\n      }\n      return this.setPersistedProperty(PostHogPersistedProperty.OverrideFeatureFlags, flags)\n    })\n  }\n\n  /***\n   *** ERROR TRACKING\n   ***/\n  captureException(error: unknown, additionalProperties?: { [key: string]: any }): void {\n    const properties: { [key: string]: any } = {\n      $exception_level: 'error',\n      $exception_list: [\n        {\n          type: isError(error) ? error.name : 'Error',\n          value: isError(error) ? error.message : error,\n          mechanism: {\n            handled: true,\n            synthetic: false,\n          },\n        },\n      ],\n      ...additionalProperties,\n    }\n\n    properties.$exception_personURL = new URL(\n      `/project/${this.apiKey}/person/${this.getDistinctId()}`,\n      this.host\n    ).toString()\n\n    this.capture('$exception', properties)\n  }\n\n  /**\n   * Capture written user feedback for a LLM trace. Numeric values are converted to strings.\n   * @param traceId The trace ID to capture feedback for.\n   * @param userFeedback The feedback to capture.\n   */\n  captureTraceFeedback(traceId: string | number, userFeedback: string): void {\n    this.capture('$ai_feedback', {\n      $ai_feedback_text: userFeedback,\n      $ai_trace_id: String(traceId),\n    })\n  }\n\n  /**\n   * Capture a metric for a LLM trace. Numeric values are converted to strings.\n   * @param traceId The trace ID to capture the metric for.\n   * @param metricName The name of the metric to capture.\n   * @param metricValue The value of the metric to capture.\n   */\n  captureTraceMetric(traceId: string | number, metricName: string, metricValue: string | number | boolean): void {\n    this.capture('$ai_metric', {\n      $ai_metric_name: metricName,\n      $ai_metric_value: String(metricValue),\n      $ai_trace_id: String(traceId),\n    })\n  }\n}\n\nexport * from './types'\nexport { LZString }\n","import { PostHogPersistedProperty } from './types'\n\nexport class PostHogMemoryStorage {\n  private _memoryStorage: { [key: string]: any | undefined } = {}\n\n  getProperty(key: PostHogPersistedProperty): any | undefined {\n    return this._memoryStorage[key]\n  }\n\n  setProperty(key: PostHogPersistedProperty, value: any | null): void {\n    this._memoryStorage[key] = value !== null ? value : undefined\n  }\n}\n","/**\n * Fetch wrapper\n *\n * We want to polyfill fetch when not available with axios but use it when it is.\n * NOTE: The current version of Axios has an issue when in non-node environments like Clouflare Workers.\n * This is currently solved by using the global fetch if available instead.\n * See https://github.com/PostHog/posthog-js-lite/issues/127 for more info\n */\n\nimport { FetchLike, PostHogFetchOptions, PostHogFetchResponse } from 'posthog-core/src'\nimport { getFetch } from 'posthog-core/src/utils'\n\nlet _fetch: FetchLike | undefined = getFetch()\n\nif (!_fetch) {\n  // eslint-disable-next-line @typescript-eslint/no-var-requires\n  const axios = require('axios')\n\n  _fetch = async (url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse> => {\n    const res = await axios.request({\n      url,\n      headers: options.headers,\n      method: options.method.toLowerCase(),\n      data: options.body,\n      signal: options.signal,\n      // fetch only throws on network errors, not on HTTP errors\n      validateStatus: () => true,\n    })\n\n    return {\n      status: res.status,\n      text: async () => res.data,\n      json: async () => res.data,\n    }\n  }\n}\n\n// NOTE: We have to export this as default, even though we prefer named exports as we are relying on detecting \"fetch\" in the global scope\nexport default _fetch as FetchLike\n","import { createHash } from 'node:crypto'\nimport { FeatureFlagCondition, FlagProperty, PostHogFeatureFlag, PropertyGroup } from './types'\nimport { JsonType, PostHogFetchOptions, PostHogFetchResponse } from 'posthog-core/src'\nimport { safeSetTimeout } from 'posthog-core/src/utils'\nimport fetch from './fetch'\nimport { SIXTY_SECONDS } from './posthog-node'\n\n// eslint-disable-next-line\nconst LONG_SCALE = 0xfffffffffffffff\n\nconst NULL_VALUES_ALLOWED_OPERATORS = ['is_not']\nclass ClientError extends Error {\n  constructor(message: string) {\n    super()\n    Error.captureStackTrace(this, this.constructor)\n    this.name = 'ClientError'\n    this.message = message\n    Object.setPrototypeOf(this, ClientError.prototype)\n  }\n}\n\nclass InconclusiveMatchError extends Error {\n  constructor(message: string) {\n    super(message)\n    this.name = this.constructor.name\n    Error.captureStackTrace(this, this.constructor)\n    // instanceof doesn't work in ES3 or ES5\n    // https://www.dannyguo.com/blog/how-to-fix-instanceof-not-working-for-custom-errors-in-typescript/\n    // this is the workaround\n    Object.setPrototypeOf(this, InconclusiveMatchError.prototype)\n  }\n}\n\ntype FeatureFlagsPollerOptions = {\n  personalApiKey: string\n  projectApiKey: string\n  host: string\n  pollingInterval: number\n  timeout?: number\n  fetch?: (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n  onError?: (error: Error) => void\n  customHeaders?: { [key: string]: string }\n}\n\nclass FeatureFlagsPoller {\n  pollingInterval: number\n  personalApiKey: string\n  projectApiKey: string\n  featureFlags: Array<PostHogFeatureFlag>\n  featureFlagsByKey: Record<string, PostHogFeatureFlag>\n  groupTypeMapping: Record<string, string>\n  cohorts: Record<string, PropertyGroup>\n  loadedSuccessfullyOnce: boolean\n  timeout?: number\n  host: FeatureFlagsPollerOptions['host']\n  poller?: NodeJS.Timeout\n  fetch: (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n  debugMode: boolean = false\n  onError?: (error: Error) => void\n  customHeaders?: { [key: string]: string }\n  lastRequestWasAuthenticationError: boolean = false\n  authenticationErrorCount: number = 0\n\n  constructor({\n    pollingInterval,\n    personalApiKey,\n    projectApiKey,\n    timeout,\n    host,\n    customHeaders,\n    ...options\n  }: FeatureFlagsPollerOptions) {\n    this.pollingInterval = pollingInterval\n    this.personalApiKey = personalApiKey\n    this.featureFlags = []\n    this.featureFlagsByKey = {}\n    this.groupTypeMapping = {}\n    this.cohorts = {}\n    this.loadedSuccessfullyOnce = false\n    this.timeout = timeout\n    this.projectApiKey = projectApiKey\n    this.host = host\n    this.poller = undefined\n    this.fetch = options.fetch || fetch\n    this.onError = options.onError\n    this.customHeaders = customHeaders\n\n    void this.loadFeatureFlags()\n  }\n\n  debug(enabled: boolean = true): void {\n    this.debugMode = enabled\n  }\n\n  private logMsgIfDebug(fn: () => void): void {\n    if (this.debugMode) {\n      fn()\n    }\n  }\n\n  async getFeatureFlag(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {}\n  ): Promise<string | boolean | undefined> {\n    await this.loadFeatureFlags()\n\n    let response: string | boolean | undefined = undefined\n    let featureFlag = undefined\n\n    if (!this.loadedSuccessfullyOnce) {\n      return response\n    }\n\n    for (const flag of this.featureFlags) {\n      if (key === flag.key) {\n        featureFlag = flag\n        break\n      }\n    }\n\n    if (featureFlag !== undefined) {\n      try {\n        response = this.computeFlagLocally(featureFlag, distinctId, groups, personProperties, groupProperties)\n        this.logMsgIfDebug(() => console.debug(`Successfully computed flag locally: ${key} -> ${response}`))\n      } catch (e) {\n        if (e instanceof InconclusiveMatchError) {\n          this.logMsgIfDebug(() => console.debug(`InconclusiveMatchError when computing flag locally: ${key}: ${e}`))\n        } else if (e instanceof Error) {\n          this.onError?.(new Error(`Error computing flag locally: ${key}: ${e}`))\n        }\n      }\n    }\n\n    return response\n  }\n\n  async computeFeatureFlagPayloadLocally(key: string, matchValue: string | boolean): Promise<JsonType | undefined> {\n    await this.loadFeatureFlags()\n\n    let response = undefined\n\n    if (!this.loadedSuccessfullyOnce) {\n      return undefined\n    }\n\n    if (typeof matchValue == 'boolean') {\n      response = this.featureFlagsByKey?.[key]?.filters?.payloads?.[matchValue.toString()]\n    } else if (typeof matchValue == 'string') {\n      response = this.featureFlagsByKey?.[key]?.filters?.payloads?.[matchValue]\n    }\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined || response === null) {\n      return null\n    }\n\n    try {\n      return JSON.parse(response)\n    } catch {\n      return response\n    }\n  }\n\n  async getAllFlagsAndPayloads(\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {}\n  ): Promise<{\n    response: Record<string, string | boolean>\n    payloads: Record<string, JsonType>\n    fallbackToDecide: boolean\n  }> {\n    await this.loadFeatureFlags()\n\n    const response: Record<string, string | boolean> = {}\n    const payloads: Record<string, JsonType> = {}\n    let fallbackToDecide = this.featureFlags.length == 0\n\n    this.featureFlags.map(async (flag) => {\n      try {\n        const matchValue = this.computeFlagLocally(flag, distinctId, groups, personProperties, groupProperties)\n        response[flag.key] = matchValue\n        const matchPayload = await this.computeFeatureFlagPayloadLocally(flag.key, matchValue)\n        if (matchPayload) {\n          payloads[flag.key] = matchPayload\n        }\n      } catch (e) {\n        if (e instanceof InconclusiveMatchError) {\n          // do nothing\n        } else if (e instanceof Error) {\n          this.onError?.(new Error(`Error computing flag locally: ${flag.key}: ${e}`))\n        }\n        fallbackToDecide = true\n      }\n    })\n\n    return { response, payloads, fallbackToDecide }\n  }\n\n  computeFlagLocally(\n    flag: PostHogFeatureFlag,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {}\n  ): string | boolean {\n    if (flag.ensure_experience_continuity) {\n      throw new InconclusiveMatchError('Flag has experience continuity enabled')\n    }\n\n    if (!flag.active) {\n      return false\n    }\n\n    const flagFilters = flag.filters || {}\n    const aggregation_group_type_index = flagFilters.aggregation_group_type_index\n\n    if (aggregation_group_type_index != undefined) {\n      const groupName = this.groupTypeMapping[String(aggregation_group_type_index)]\n\n      if (!groupName) {\n        this.logMsgIfDebug(() =>\n          console.warn(\n            `[FEATURE FLAGS] Unknown group type index ${aggregation_group_type_index} for feature flag ${flag.key}`\n          )\n        )\n        throw new InconclusiveMatchError('Flag has unknown group type index')\n      }\n\n      if (!(groupName in groups)) {\n        this.logMsgIfDebug(() =>\n          console.warn(`[FEATURE FLAGS] Can't compute group feature flag: ${flag.key} without group names passed in`)\n        )\n        return false\n      }\n\n      const focusedGroupProperties = groupProperties[groupName]\n      return this.matchFeatureFlagProperties(flag, groups[groupName], focusedGroupProperties)\n    } else {\n      return this.matchFeatureFlagProperties(flag, distinctId, personProperties)\n    }\n  }\n\n  matchFeatureFlagProperties(\n    flag: PostHogFeatureFlag,\n    distinctId: string,\n    properties: Record<string, string>\n  ): string | boolean {\n    const flagFilters = flag.filters || {}\n    const flagConditions = flagFilters.groups || []\n    let isInconclusive = false\n    let result = undefined\n\n    // # Stable sort conditions with variant overrides to the top. This ensures that if overrides are present, they are\n    // # evaluated first, and the variant override is applied to the first matching condition.\n    const sortedFlagConditions = [...flagConditions].sort((conditionA, conditionB) => {\n      const AHasVariantOverride = !!conditionA.variant\n      const BHasVariantOverride = !!conditionB.variant\n\n      if (AHasVariantOverride && BHasVariantOverride) {\n        return 0\n      } else if (AHasVariantOverride) {\n        return -1\n      } else if (BHasVariantOverride) {\n        return 1\n      } else {\n        return 0\n      }\n    })\n\n    for (const condition of sortedFlagConditions) {\n      try {\n        if (this.isConditionMatch(flag, distinctId, condition, properties)) {\n          const variantOverride = condition.variant\n          const flagVariants = flagFilters.multivariate?.variants || []\n          if (variantOverride && flagVariants.some((variant) => variant.key === variantOverride)) {\n            result = variantOverride\n          } else {\n            result = this.getMatchingVariant(flag, distinctId) || true\n          }\n          break\n        }\n      } catch (e) {\n        if (e instanceof InconclusiveMatchError) {\n          isInconclusive = true\n        } else {\n          throw e\n        }\n      }\n    }\n\n    if (result !== undefined) {\n      return result\n    } else if (isInconclusive) {\n      throw new InconclusiveMatchError(\"Can't determine if feature flag is enabled or not with given properties\")\n    }\n\n    // We can only return False when all conditions are False\n    return false\n  }\n\n  isConditionMatch(\n    flag: PostHogFeatureFlag,\n    distinctId: string,\n    condition: FeatureFlagCondition,\n    properties: Record<string, string>\n  ): boolean {\n    const rolloutPercentage = condition.rollout_percentage\n    const warnFunction = (msg: string): void => {\n      this.logMsgIfDebug(() => console.warn(msg))\n    }\n    if ((condition.properties || []).length > 0) {\n      for (const prop of condition.properties) {\n        const propertyType = prop.type\n        let matches = false\n\n        if (propertyType === 'cohort') {\n          matches = matchCohort(prop, properties, this.cohorts, this.debugMode)\n        } else {\n          matches = matchProperty(prop, properties, warnFunction)\n        }\n\n        if (!matches) {\n          return false\n        }\n      }\n\n      if (rolloutPercentage == undefined) {\n        return true\n      }\n    }\n\n    if (rolloutPercentage != undefined && _hash(flag.key, distinctId) > rolloutPercentage / 100.0) {\n      return false\n    }\n\n    return true\n  }\n\n  getMatchingVariant(flag: PostHogFeatureFlag, distinctId: string): string | boolean | undefined {\n    const hashValue = _hash(flag.key, distinctId, 'variant')\n    const matchingVariant = this.variantLookupTable(flag).find((variant) => {\n      return hashValue >= variant.valueMin && hashValue < variant.valueMax\n    })\n\n    if (matchingVariant) {\n      return matchingVariant.key\n    }\n    return undefined\n  }\n\n  variantLookupTable(flag: PostHogFeatureFlag): { valueMin: number; valueMax: number; key: string }[] {\n    const lookupTable: { valueMin: number; valueMax: number; key: string }[] = []\n    let valueMin = 0\n    let valueMax = 0\n    const flagFilters = flag.filters || {}\n    const multivariates: {\n      key: string\n      rollout_percentage: number\n    }[] = flagFilters.multivariate?.variants || []\n\n    multivariates.forEach((variant) => {\n      valueMax = valueMin + variant.rollout_percentage / 100.0\n      lookupTable.push({ valueMin, valueMax, key: variant.key })\n      valueMin = valueMax\n    })\n    return lookupTable\n  }\n\n  async loadFeatureFlags(forceReload = false): Promise<void> {\n    if (!this.loadedSuccessfullyOnce || forceReload) {\n      await this._loadFeatureFlags()\n    }\n  }\n\n  /**\n   * If a client is misconfigured with an invalid or improper API key, the polling interval is doubled each time\n   * until a successful request is made, up to a maximum of 60 seconds.\n   *\n   * @returns The polling interval to use for the next request.\n   */\n  private getPollingInterval(): number {\n    if (!this.lastRequestWasAuthenticationError) {\n      return this.pollingInterval\n    }\n\n    return Math.min(SIXTY_SECONDS, this.pollingInterval * 2 ** this.authenticationErrorCount)\n  }\n\n  async _loadFeatureFlags(): Promise<void> {\n    if (this.poller) {\n      clearTimeout(this.poller)\n      this.poller = undefined\n    }\n\n    this.poller = setTimeout(() => this._loadFeatureFlags(), this.getPollingInterval())\n\n    try {\n      const res = await this._requestFeatureFlagDefinitions()\n\n      if (res && res.status === 401) {\n        this.lastRequestWasAuthenticationError = true\n        this.authenticationErrorCount += 1\n        throw new ClientError(\n          `Your project key or personal API key is invalid. Setting next polling interval to ${this.getPollingInterval()}ms. More information: https://posthog.com/docs/api#rate-limiting`\n        )\n      }\n\n      if (res && res.status === 403) {\n        this.lastRequestWasAuthenticationError = true\n        this.authenticationErrorCount += 1\n        throw new ClientError(\n          `Your personal API key does not have permission to fetch feature flag definitions for local evaluation. Setting next polling interval to ${this.getPollingInterval()}ms. Are you sure you're using the correct personal and Project API key pair? More information: https://posthog.com/docs/api/overview`\n        )\n      }\n\n      if (res && res.status === 402) {\n        // Quota limited - clear all flags\n        console.warn(\n          '[FEATURE FLAGS] Feature flags quota limit exceeded - unsetting all local flags. Learn more about billing limits at https://posthog.com/docs/billing/limits-alerts'\n        )\n        this.featureFlags = []\n        this.featureFlagsByKey = {}\n        this.groupTypeMapping = {}\n        this.cohorts = {}\n        this.loadedSuccessfullyOnce = false\n        return\n      }\n\n      if (res && res.status !== 200) {\n        // something else went wrong, or the server is down.\n        // In this case, don't override existing flags\n        return\n      }\n\n      const responseJson = await res.json()\n      if (!('flags' in responseJson)) {\n        this.onError?.(new Error(`Invalid response when getting feature flags: ${JSON.stringify(responseJson)}`))\n      }\n\n      this.featureFlags = responseJson.flags || []\n      this.featureFlagsByKey = this.featureFlags.reduce(\n        (acc, curr) => ((acc[curr.key] = curr), acc),\n        <Record<string, PostHogFeatureFlag>>{}\n      )\n      this.groupTypeMapping = responseJson.group_type_mapping || {}\n      this.cohorts = responseJson.cohorts || []\n      this.loadedSuccessfullyOnce = true\n      this.lastRequestWasAuthenticationError = false\n      this.authenticationErrorCount = 0\n    } catch (err) {\n      // if an error that is not an instance of ClientError is thrown\n      // we silently ignore the error when reloading feature flags\n      if (err instanceof ClientError) {\n        this.onError?.(err)\n      }\n    }\n  }\n\n  private getPersonalApiKeyRequestOptions(method: 'GET' | 'POST' | 'PUT' | 'PATCH' = 'GET'): PostHogFetchOptions {\n    return {\n      method,\n      headers: {\n        ...this.customHeaders,\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${this.personalApiKey}`,\n      },\n    }\n  }\n\n  async _requestFeatureFlagDefinitions(): Promise<PostHogFetchResponse> {\n    const url = `${this.host}/api/feature_flag/local_evaluation?token=${this.projectApiKey}&send_cohorts`\n\n    const options = this.getPersonalApiKeyRequestOptions()\n\n    let abortTimeout = null\n\n    if (this.timeout && typeof this.timeout === 'number') {\n      const controller = new AbortController()\n      abortTimeout = safeSetTimeout(() => {\n        controller.abort()\n      }, this.timeout)\n      options.signal = controller.signal\n    }\n\n    try {\n      return await this.fetch(url, options)\n    } finally {\n      clearTimeout(abortTimeout)\n    }\n  }\n\n  stopPoller(): void {\n    clearTimeout(this.poller)\n  }\n\n  _requestRemoteConfigPayload(flagKey: string): Promise<PostHogFetchResponse> {\n    const url = `${this.host}/api/projects/@current/feature_flags/${flagKey}/remote_config/`\n\n    const options = this.getPersonalApiKeyRequestOptions()\n\n    let abortTimeout = null\n    if (this.timeout && typeof this.timeout === 'number') {\n      const controller = new AbortController()\n      abortTimeout = safeSetTimeout(() => {\n        controller.abort()\n      }, this.timeout)\n      options.signal = controller.signal\n    }\n    try {\n      return this.fetch(url, options)\n    } finally {\n      clearTimeout(abortTimeout)\n    }\n  }\n}\n\n// # This function takes a distinct_id and a feature flag key and returns a float between 0 and 1.\n// # Given the same distinct_id and key, it'll always return the same float. These floats are\n// # uniformly distributed between 0 and 1, so if we want to show this feature to 20% of traffic\n// # we can do _hash(key, distinct_id) < 0.2\nfunction _hash(key: string, distinctId: string, salt: string = ''): number {\n  const sha1Hash = createHash('sha1')\n  sha1Hash.update(`${key}.${distinctId}${salt}`)\n  return parseInt(sha1Hash.digest('hex').slice(0, 15), 16) / LONG_SCALE\n}\n\nfunction matchProperty(\n  property: FeatureFlagCondition['properties'][number],\n  propertyValues: Record<string, any>,\n  warnFunction?: (msg: string) => void\n): boolean {\n  const key = property.key\n  const value = property.value\n  const operator = property.operator || 'exact'\n\n  if (!(key in propertyValues)) {\n    throw new InconclusiveMatchError(`Property ${key} not found in propertyValues`)\n  } else if (operator === 'is_not_set') {\n    throw new InconclusiveMatchError(`Operator is_not_set is not supported`)\n  }\n\n  const overrideValue = propertyValues[key]\n  if (overrideValue == null && !NULL_VALUES_ALLOWED_OPERATORS.includes(operator)) {\n    // if the value is null, just fail the feature flag comparison\n    // this isn't an InconclusiveMatchError because the property value was provided.\n    if (warnFunction) {\n      warnFunction(`Property ${key} cannot have a value of null/undefined with the ${operator} operator`)\n    }\n\n    return false\n  }\n\n  function computeExactMatch(value: any, overrideValue: any): boolean {\n    if (Array.isArray(value)) {\n      return value.map((val) => String(val).toLowerCase()).includes(String(overrideValue).toLowerCase())\n    }\n    return String(value).toLowerCase() === String(overrideValue).toLowerCase()\n  }\n\n  function compare(lhs: any, rhs: any, operator: string): boolean {\n    if (operator === 'gt') {\n      return lhs > rhs\n    } else if (operator === 'gte') {\n      return lhs >= rhs\n    } else if (operator === 'lt') {\n      return lhs < rhs\n    } else if (operator === 'lte') {\n      return lhs <= rhs\n    } else {\n      throw new Error(`Invalid operator: ${operator}`)\n    }\n  }\n\n  switch (operator) {\n    case 'exact':\n      return computeExactMatch(value, overrideValue)\n    case 'is_not':\n      return !computeExactMatch(value, overrideValue)\n    case 'is_set':\n      return key in propertyValues\n    case 'icontains':\n      return String(overrideValue).toLowerCase().includes(String(value).toLowerCase())\n    case 'not_icontains':\n      return !String(overrideValue).toLowerCase().includes(String(value).toLowerCase())\n    case 'regex':\n      return isValidRegex(String(value)) && String(overrideValue).match(String(value)) !== null\n    case 'not_regex':\n      return isValidRegex(String(value)) && String(overrideValue).match(String(value)) === null\n    case 'gt':\n    case 'gte':\n    case 'lt':\n    case 'lte': {\n      // :TRICKY: We adjust comparison based on the override value passed in,\n      // to make sure we handle both numeric and string comparisons appropriately.\n      let parsedValue = typeof value === 'number' ? value : null\n\n      if (typeof value === 'string') {\n        try {\n          parsedValue = parseFloat(value)\n        } catch (err) {\n          // pass\n        }\n      }\n\n      if (parsedValue != null && overrideValue != null) {\n        // check both null and undefined\n        if (typeof overrideValue === 'string') {\n          return compare(overrideValue, String(value), operator)\n        } else {\n          return compare(overrideValue, parsedValue, operator)\n        }\n      } else {\n        return compare(String(overrideValue), String(value), operator)\n      }\n    }\n    case 'is_date_after':\n    case 'is_date_before': {\n      let parsedDate = relativeDateParseForFeatureFlagMatching(String(value))\n      if (parsedDate == null) {\n        parsedDate = convertToDateTime(value)\n      }\n\n      if (parsedDate == null) {\n        throw new InconclusiveMatchError(`Invalid date: ${value}`)\n      }\n      const overrideDate = convertToDateTime(overrideValue)\n      if (['is_date_before'].includes(operator)) {\n        return overrideDate < parsedDate\n      }\n      return overrideDate > parsedDate\n    }\n    default:\n      throw new InconclusiveMatchError(`Unknown operator: ${operator}`)\n  }\n}\n\nfunction matchCohort(\n  property: FeatureFlagCondition['properties'][number],\n  propertyValues: Record<string, any>,\n  cohortProperties: FeatureFlagsPoller['cohorts'],\n  debugMode: boolean = false\n): boolean {\n  const cohortId = String(property.value)\n  if (!(cohortId in cohortProperties)) {\n    throw new InconclusiveMatchError(\"can't match cohort without a given cohort property value\")\n  }\n\n  const propertyGroup = cohortProperties[cohortId]\n  return matchPropertyGroup(propertyGroup, propertyValues, cohortProperties, debugMode)\n}\n\nfunction matchPropertyGroup(\n  propertyGroup: PropertyGroup,\n  propertyValues: Record<string, any>,\n  cohortProperties: FeatureFlagsPoller['cohorts'],\n  debugMode: boolean = false\n): boolean {\n  if (!propertyGroup) {\n    return true\n  }\n\n  const propertyGroupType = propertyGroup.type\n  const properties = propertyGroup.values\n\n  if (!properties || properties.length === 0) {\n    // empty groups are no-ops, always match\n    return true\n  }\n\n  let errorMatchingLocally = false\n\n  if ('values' in properties[0]) {\n    // a nested property group\n    for (const prop of properties as PropertyGroup[]) {\n      try {\n        const matches = matchPropertyGroup(prop, propertyValues, cohortProperties, debugMode)\n        if (propertyGroupType === 'AND') {\n          if (!matches) {\n            return false\n          }\n        } else {\n          // OR group\n          if (matches) {\n            return true\n          }\n        }\n      } catch (err) {\n        if (err instanceof InconclusiveMatchError) {\n          if (debugMode) {\n            console.debug(`Failed to compute property ${prop} locally: ${err}`)\n          }\n          errorMatchingLocally = true\n        } else {\n          throw err\n        }\n      }\n    }\n\n    if (errorMatchingLocally) {\n      throw new InconclusiveMatchError(\"Can't match cohort without a given cohort property value\")\n    }\n    // if we get here, all matched in AND case, or none matched in OR case\n    return propertyGroupType === 'AND'\n  } else {\n    for (const prop of properties as FlagProperty[]) {\n      try {\n        let matches: boolean\n        if (prop.type === 'cohort') {\n          matches = matchCohort(prop, propertyValues, cohortProperties, debugMode)\n        } else {\n          matches = matchProperty(prop, propertyValues)\n        }\n\n        const negation = prop.negation || false\n\n        if (propertyGroupType === 'AND') {\n          // if negated property, do the inverse\n          if (!matches && !negation) {\n            return false\n          }\n          if (matches && negation) {\n            return false\n          }\n        } else {\n          // OR group\n          if (matches && !negation) {\n            return true\n          }\n          if (!matches && negation) {\n            return true\n          }\n        }\n      } catch (err) {\n        if (err instanceof InconclusiveMatchError) {\n          if (debugMode) {\n            console.debug(`Failed to compute property ${prop} locally: ${err}`)\n          }\n          errorMatchingLocally = true\n        } else {\n          throw err\n        }\n      }\n    }\n\n    if (errorMatchingLocally) {\n      throw new InconclusiveMatchError(\"can't match cohort without a given cohort property value\")\n    }\n\n    // if we get here, all matched in AND case, or none matched in OR case\n    return propertyGroupType === 'AND'\n  }\n}\n\nfunction isValidRegex(regex: string): boolean {\n  try {\n    new RegExp(regex)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nfunction convertToDateTime(value: string | number | (string | number)[] | Date): Date {\n  if (value instanceof Date) {\n    return value\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    const date = new Date(value)\n    if (!isNaN(date.valueOf())) {\n      return date\n    }\n    throw new InconclusiveMatchError(`${value} is in an invalid date format`)\n  } else {\n    throw new InconclusiveMatchError(`The date provided ${value} must be a string, number, or date object`)\n  }\n}\n\nfunction relativeDateParseForFeatureFlagMatching(value: string): Date | null {\n  const regex = /^-?(?<number>[0-9]+)(?<interval>[a-z])$/\n  const match = value.match(regex)\n  const parsedDt = new Date(new Date().toISOString())\n\n  if (match) {\n    if (!match.groups) {\n      return null\n    }\n\n    const number = parseInt(match.groups['number'])\n\n    if (number >= 10000) {\n      // Guard against overflow, disallow numbers greater than 10_000\n      return null\n    }\n    const interval = match.groups['interval']\n    if (interval == 'h') {\n      parsedDt.setUTCHours(parsedDt.getUTCHours() - number)\n    } else if (interval == 'd') {\n      parsedDt.setUTCDate(parsedDt.getUTCDate() - number)\n    } else if (interval == 'w') {\n      parsedDt.setUTCDate(parsedDt.getUTCDate() - number * 7)\n    } else if (interval == 'm') {\n      parsedDt.setUTCMonth(parsedDt.getUTCMonth() - number)\n    } else if (interval == 'y') {\n      parsedDt.setUTCFullYear(parsedDt.getUTCFullYear() - number)\n    } else {\n      return null\n    }\n\n    return parsedDt\n  } else {\n    return null\n  }\n}\n\nexport {\n  FeatureFlagsPoller,\n  matchProperty,\n  relativeDateParseForFeatureFlagMatching,\n  InconclusiveMatchError,\n  ClientError,\n}\n","import { EventHint } from 'posthog-node/src/extensions/error-tracking/types'\n\ntype ErrorHandler = { _posthogErrorHandler: boolean } & ((error: Error) => void)\n\nfunction makeUncaughtExceptionHandler(\n  captureFn: (exception: Error, hint: EventHint) => void,\n  onFatalFn: () => void\n): ErrorHandler {\n  let calledFatalError: boolean = false\n\n  return Object.assign(\n    (error: Error): void => {\n      // Attaching a listener to `uncaughtException` will prevent the node process from exiting. We generally do not\n      // want to alter this behaviour so we check for other listeners that users may have attached themselves and adjust\n      // exit behaviour of the SDK accordingly:\n      // - If other listeners are attached, do not exit.\n      // - If the only listener attached is ours, exit.\n      const userProvidedListenersCount = global.process.listeners('uncaughtException').filter((listener) => {\n        // There are 2 listeners we ignore:\n        return (\n          // as soon as we're using domains this listener is attached by node itself\n          listener.name !== 'domainUncaughtExceptionClear' &&\n          // the handler we register in this integration\n          (listener as ErrorHandler)._posthogErrorHandler !== true\n        )\n      }).length\n\n      const processWouldExit = userProvidedListenersCount === 0\n\n      captureFn(error, {\n        mechanism: {\n          type: 'onuncaughtexception',\n          handled: false,\n        },\n      })\n\n      if (!calledFatalError && processWouldExit) {\n        calledFatalError = true\n        onFatalFn()\n      }\n    },\n    { _posthogErrorHandler: true }\n  )\n}\n\nexport function addUncaughtExceptionListener(\n  captureFn: (exception: Error, hint: EventHint) => void,\n  onFatalFn: () => void\n): void {\n  global.process.on('uncaughtException', makeUncaughtExceptionHandler(captureFn, onFatalFn))\n}\n\nexport function addUnhandledRejectionListener(captureFn: (exception: unknown, hint: EventHint) => void): void {\n  global.process.on('unhandledRejection', (reason: unknown) => {\n    captureFn(reason, {\n      mechanism: {\n        type: 'onunhandledrejection',\n        handled: false,\n      },\n    })\n  })\n}\n","import { PolymorphicEvent } from './types'\n\nexport function isEvent(candidate: unknown): candidate is PolymorphicEvent {\n  return typeof Event !== 'undefined' && isInstanceOf(candidate, Event)\n}\n\nexport function isPlainObject(candidate: unknown): candidate is Record<string, unknown> {\n  return isBuiltin(candidate, 'Object')\n}\n\nexport function isError(candidate: unknown): candidate is Error {\n  switch (Object.prototype.toString.call(candidate)) {\n    case '[object Error]':\n    case '[object Exception]':\n    case '[object DOMException]':\n    case '[object WebAssembly.Exception]':\n      return true\n    default:\n      return isInstanceOf(candidate, Error)\n  }\n}\n\nexport function isInstanceOf(candidate: unknown, base: any): boolean {\n  try {\n    return candidate instanceof base\n  } catch {\n    return false\n  }\n}\n\nexport function isErrorEvent(event: unknown): boolean {\n  return isBuiltin(event, 'ErrorEvent')\n}\n\nexport function isBuiltin(candidate: unknown, className: string): boolean {\n  return Object.prototype.toString.call(candidate) === `[object ${className}]`\n}\n","/** A simple Least Recently Used map */\nexport class ReduceableCache<K, V> {\n  private readonly _cache: Map<K, V>\n\n  public constructor(private readonly _maxSize: number) {\n    this._cache = new Map<K, V>()\n  }\n\n  /** Get an entry or undefined if it was not in the cache. Re-inserts to update the recently used order */\n  public get(key: K): V | undefined {\n    const value = this._cache.get(key)\n    if (value === undefined) {\n      return undefined\n    }\n    // Remove and re-insert to update the order\n    this._cache.delete(key)\n    this._cache.set(key, value)\n    return value\n  }\n\n  /** Insert an entry and evict an older entry if we've reached maxSize */\n  public set(key: K, value: V): void {\n    this._cache.set(key, value)\n  }\n\n  /** Remove an entry and return the entry if it was in the cache */\n  public reduce(): void {\n    while (this._cache.size >= this._maxSize) {\n      const value = this._cache.keys().next().value\n      if (value) {\n        // keys() returns an iterator in insertion order so keys().next() gives us the oldest key\n        this._cache.delete(value)\n      }\n    }\n  }\n}\n","import { createReadStream } from 'node:fs'\nimport { createInterface } from 'node:readline'\nimport { StackFrame } from './types'\nimport { ReduceableCache } from './reduceable-cache'\n\nconst LRU_FILE_CONTENTS_CACHE = new ReduceableCache<string, Record<number, string>>(25)\nconst LRU_FILE_CONTENTS_FS_READ_FAILED = new ReduceableCache<string, 1>(20)\nconst DEFAULT_LINES_OF_CONTEXT = 7\n// Determines the upper bound of lineno/colno that we will attempt to read. Large colno values are likely to be\n// minified code while large lineno values are likely to be bundled code.\n// Exported for testing purposes.\nexport const MAX_CONTEXTLINES_COLNO: number = 1000\nexport const MAX_CONTEXTLINES_LINENO: number = 10000\n\ntype ReadlineRange = [start: number, end: number]\n\nexport async function addSourceContext(frames: StackFrame[]): Promise<StackFrame[]> {\n  // keep a lookup map of which files we've already enqueued to read,\n  // so we don't enqueue the same file multiple times which would cause multiple i/o reads\n  const filesToLines: Record<string, number[]> = {}\n\n  // Maps preserve insertion order, so we iterate in reverse, starting at the\n  // outermost frame and closer to where the exception has occurred (poor mans priority)\n  for (let i = frames.length - 1; i >= 0; i--) {\n    const frame: StackFrame | undefined = frames[i]\n    const filename = frame?.filename\n\n    if (\n      !frame ||\n      typeof filename !== 'string' ||\n      typeof frame.lineno !== 'number' ||\n      shouldSkipContextLinesForFile(filename) ||\n      shouldSkipContextLinesForFrame(frame)\n    ) {\n      continue\n    }\n\n    const filesToLinesOutput = filesToLines[filename]\n    if (!filesToLinesOutput) {\n      filesToLines[filename] = []\n    }\n    filesToLines[filename].push(frame.lineno)\n  }\n\n  const files = Object.keys(filesToLines)\n  if (files.length == 0) {\n    return frames\n  }\n\n  const readlinePromises: Promise<void>[] = []\n  for (const file of files) {\n    // If we failed to read this before, dont try reading it again.\n    if (LRU_FILE_CONTENTS_FS_READ_FAILED.get(file)) {\n      continue\n    }\n\n    const filesToLineRanges = filesToLines[file]\n    if (!filesToLineRanges) {\n      continue\n    }\n\n    // Sort ranges so that they are sorted by line increasing order and match how the file is read.\n    filesToLineRanges.sort((a, b) => a - b)\n    // Check if the contents are already in the cache and if we can avoid reading the file again.\n    const ranges = makeLineReaderRanges(filesToLineRanges)\n    if (ranges.every((r) => rangeExistsInContentCache(file, r))) {\n      continue\n    }\n\n    const cache = emplace(LRU_FILE_CONTENTS_CACHE, file, {})\n    readlinePromises.push(getContextLinesFromFile(file, ranges, cache))\n  }\n\n  // The promise rejections are caught in order to prevent them from short circuiting Promise.all\n  await Promise.all(readlinePromises).catch(() => {})\n\n  // Perform the same loop as above, but this time we can assume all files are in the cache\n  // and attempt to add source context to frames.\n  if (frames && frames.length > 0) {\n    addSourceContextToFrames(frames, LRU_FILE_CONTENTS_CACHE)\n  }\n\n  // Once we're finished processing an exception reduce the files held in the cache\n  // so that we don't indefinetly increase the size of this map\n  LRU_FILE_CONTENTS_CACHE.reduce()\n\n  return frames\n}\n\n/**\n * Extracts lines from a file and stores them in a cache.\n */\nfunction getContextLinesFromFile(path: string, ranges: ReadlineRange[], output: Record<number, string>): Promise<void> {\n  return new Promise((resolve) => {\n    // It is important *not* to have any async code between createInterface and the 'line' event listener\n    // as it will cause the 'line' event to\n    // be emitted before the listener is attached.\n    const stream = createReadStream(path)\n    const lineReaded = createInterface({\n      input: stream,\n    })\n\n    // We need to explicitly destroy the stream to prevent memory leaks,\n    // removing the listeners on the readline interface is not enough.\n    // See: https://github.com/nodejs/node/issues/9002 and https://github.com/getsentry/sentry-javascript/issues/14892\n    function destroyStreamAndResolve(): void {\n      stream.destroy()\n      resolve()\n    }\n\n    // Init at zero and increment at the start of the loop because lines are 1 indexed.\n    let lineNumber = 0\n    let currentRangeIndex = 0\n    const range = ranges[currentRangeIndex]\n    if (range === undefined) {\n      // We should never reach this point, but if we do, we should resolve the promise to prevent it from hanging.\n      destroyStreamAndResolve()\n      return\n    }\n    let rangeStart = range[0]\n    let rangeEnd = range[1]\n\n    // We use this inside Promise.all, so we need to resolve the promise even if there is an error\n    // to prevent Promise.all from short circuiting the rest.\n    function onStreamError(): void {\n      // Mark file path as failed to read and prevent multiple read attempts.\n      LRU_FILE_CONTENTS_FS_READ_FAILED.set(path, 1)\n      lineReaded.close()\n      lineReaded.removeAllListeners()\n      destroyStreamAndResolve()\n    }\n\n    // We need to handle the error event to prevent the process from crashing in < Node 16\n    // https://github.com/nodejs/node/pull/31603\n    stream.on('error', onStreamError)\n    lineReaded.on('error', onStreamError)\n    lineReaded.on('close', destroyStreamAndResolve)\n\n    lineReaded.on('line', (line) => {\n      lineNumber++\n      if (lineNumber < rangeStart) {\n        return\n      }\n\n      // !Warning: This mutates the cache by storing the snipped line into the cache.\n      output[lineNumber] = snipLine(line, 0)\n\n      if (lineNumber >= rangeEnd) {\n        if (currentRangeIndex === ranges.length - 1) {\n          // We need to close the file stream and remove listeners, else the reader will continue to run our listener;\n          lineReaded.close()\n          lineReaded.removeAllListeners()\n          return\n        }\n        currentRangeIndex++\n        const range = ranges[currentRangeIndex]\n        if (range === undefined) {\n          // This should never happen as it means we have a bug in the context.\n          lineReaded.close()\n          lineReaded.removeAllListeners()\n          return\n        }\n        rangeStart = range[0]\n        rangeEnd = range[1]\n      }\n    })\n  })\n}\n\n/** Adds context lines to frames */\nfunction addSourceContextToFrames(frames: StackFrame[], cache: ReduceableCache<string, Record<number, string>>): void {\n  for (const frame of frames) {\n    // Only add context if we have a filename and it hasn't already been added\n    if (frame.filename && frame.context_line === undefined && typeof frame.lineno === 'number') {\n      const contents = cache.get(frame.filename)\n      if (contents === undefined) {\n        continue\n      }\n\n      addContextToFrame(frame.lineno, frame, contents)\n    }\n  }\n}\n\n/**\n * Resolves context lines before and after the given line number and appends them to the frame;\n */\nfunction addContextToFrame(lineno: number, frame: StackFrame, contents: Record<number, string> | undefined): void {\n  // When there is no line number in the frame, attaching context is nonsensical and will even break grouping.\n  // We already check for lineno before calling this, but since StackFrame lineno is optional, we check it again.\n  if (frame.lineno === undefined || contents === undefined) {\n    return\n  }\n\n  frame.pre_context = []\n  for (let i = makeRangeStart(lineno); i < lineno; i++) {\n    // We always expect the start context as line numbers cannot be negative. If we dont find a line, then\n    // something went wrong somewhere. Clear the context and return without adding any linecontext.\n    const line = contents[i]\n    if (line === undefined) {\n      clearLineContext(frame)\n      return\n    }\n\n    frame.pre_context.push(line)\n  }\n\n  // We should always have the context line. If we dont, something went wrong, so we clear the context and return\n  // without adding any linecontext.\n  if (contents[lineno] === undefined) {\n    clearLineContext(frame)\n    return\n  }\n\n  frame.context_line = contents[lineno]\n\n  const end = makeRangeEnd(lineno)\n  frame.post_context = []\n  for (let i = lineno + 1; i <= end; i++) {\n    // Since we dont track when the file ends, we cant clear the context if we dont find a line as it could\n    // just be that we reached the end of the file.\n    const line = contents[i]\n    if (line === undefined) {\n      break\n    }\n    frame.post_context.push(line)\n  }\n}\n\n/**\n * Clears the context lines from a frame, used to reset a frame to its original state\n * if we fail to resolve all context lines for it.\n */\nfunction clearLineContext(frame: StackFrame): void {\n  delete frame.pre_context\n  delete frame.context_line\n  delete frame.post_context\n}\n\n/**\n * Determines if context lines should be skipped for a file.\n * - .min.(mjs|cjs|js) files are and not useful since they dont point to the original source\n * - node: prefixed modules are part of the runtime and cannot be resolved to a file\n * - data: skip json, wasm and inline js https://nodejs.org/api/esm.html#data-imports\n */\nfunction shouldSkipContextLinesForFile(path: string): boolean {\n  // Test the most common prefix and extension first. These are the ones we\n  // are most likely to see in user applications and are the ones we can break out of first.\n  return (\n    path.startsWith('node:') ||\n    path.endsWith('.min.js') ||\n    path.endsWith('.min.cjs') ||\n    path.endsWith('.min.mjs') ||\n    path.startsWith('data:')\n  )\n}\n\n/**\n * Determines if we should skip contextlines based off the max lineno and colno values.\n */\nfunction shouldSkipContextLinesForFrame(frame: StackFrame): boolean {\n  if (frame.lineno !== undefined && frame.lineno > MAX_CONTEXTLINES_LINENO) {\n    return true\n  }\n  if (frame.colno !== undefined && frame.colno > MAX_CONTEXTLINES_COLNO) {\n    return true\n  }\n  return false\n}\n\n/**\n * Checks if we have all the contents that we need in the cache.\n */\nfunction rangeExistsInContentCache(file: string, range: ReadlineRange): boolean {\n  const contents = LRU_FILE_CONTENTS_CACHE.get(file)\n  if (contents === undefined) {\n    return false\n  }\n\n  for (let i = range[0]; i <= range[1]; i++) {\n    if (contents[i] === undefined) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Creates contiguous ranges of lines to read from a file. In the case where context lines overlap,\n * the ranges are merged to create a single range.\n */\nfunction makeLineReaderRanges(lines: number[]): ReadlineRange[] {\n  if (!lines.length) {\n    return []\n  }\n\n  let i = 0\n  const line = lines[0]\n\n  if (typeof line !== 'number') {\n    return []\n  }\n\n  let current = makeContextRange(line)\n  const out: ReadlineRange[] = []\n  while (true) {\n    if (i === lines.length - 1) {\n      out.push(current)\n      break\n    }\n\n    // If the next line falls into the current range, extend the current range to lineno + linecontext.\n    const next = lines[i + 1]\n    if (typeof next !== 'number') {\n      break\n    }\n    if (next <= current[1]) {\n      current[1] = next + DEFAULT_LINES_OF_CONTEXT\n    } else {\n      out.push(current)\n      current = makeContextRange(next)\n    }\n\n    i++\n  }\n\n  return out\n}\n// Determine start and end indices for context range (inclusive);\nfunction makeContextRange(line: number): [start: number, end: number] {\n  return [makeRangeStart(line), makeRangeEnd(line)]\n}\n// Compute inclusive end context range\nfunction makeRangeStart(line: number): number {\n  return Math.max(1, line - DEFAULT_LINES_OF_CONTEXT)\n}\n// Compute inclusive start context range\nfunction makeRangeEnd(line: number): number {\n  return line + DEFAULT_LINES_OF_CONTEXT\n}\n\n/**\n * Get or init map value\n */\nfunction emplace<T extends ReduceableCache<K, V>, K extends string, V>(map: T, key: K, contents: V): V {\n  const value = map.get(key)\n\n  if (value === undefined) {\n    map.set(key, contents)\n    return contents\n  }\n\n  return value\n}\n\nfunction snipLine(line: string, colno: number): string {\n  let newLine = line\n  const lineLength = newLine.length\n  if (lineLength <= 150) {\n    return newLine\n  }\n  if (colno > lineLength) {\n    colno = lineLength\n  }\n\n  let start = Math.max(colno - 60, 0)\n  if (start < 5) {\n    start = 0\n  }\n\n  let end = Math.min(start + 140, lineLength)\n  if (end > lineLength - 5) {\n    end = lineLength\n  }\n  if (end === lineLength) {\n    start = Math.max(end - 140, 0)\n  }\n\n  newLine = newLine.slice(start, end)\n  if (start > 0) {\n    newLine = `...${newLine}`\n  }\n  if (end < lineLength) {\n    newLine += '...'\n  }\n\n  return newLine\n}\n","import { isError, isErrorEvent, isEvent, isPlainObject } from './type-checking'\nimport { ErrorProperties, EventHint, Exception, Mechanism, StackFrame, StackParser } from './types'\nimport { addSourceContext } from './context-lines'\n\n/**\n * based on the very wonderful MIT licensed Sentry SDK\n */\n\nexport async function propertiesFromUnknownInput(\n  stackParser: StackParser,\n  input: unknown,\n  hint?: EventHint\n): Promise<ErrorProperties> {\n  const providedMechanism = hint && hint.mechanism\n  const mechanism = providedMechanism || {\n    handled: true,\n    type: 'generic',\n  }\n\n  const error = getError(mechanism, input, hint)\n  const exception = await exceptionFromError(stackParser, error)\n\n  exception.value = exception.value || ''\n  exception.type = exception.type || 'Error'\n  exception.mechanism = mechanism\n\n  const properties = { $exception_list: [exception] }\n\n  return properties\n}\n\nfunction getError(mechanism: Mechanism, exception: unknown, hint?: EventHint): Error {\n  if (isError(exception)) {\n    return exception\n  }\n\n  mechanism.synthetic = true\n\n  if (isPlainObject(exception)) {\n    const errorFromProp = getErrorPropertyFromObject(exception)\n    if (errorFromProp) {\n      return errorFromProp\n    }\n\n    const message = getMessageForObject(exception)\n    const ex = hint?.syntheticException || new Error(message)\n    ex.message = message\n\n    return ex\n  }\n\n  // This handles when someone does: `throw \"something awesome\";`\n  // We use synthesized Error here so we can extract a (rough) stack trace.\n  const ex = hint?.syntheticException || new Error(exception as string)\n  ex.message = `${exception}`\n\n  return ex\n}\n\n/** If a plain object has a property that is an `Error`, return this error. */\nfunction getErrorPropertyFromObject(obj: Record<string, unknown>): Error | undefined {\n  for (const prop in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n      const value = obj[prop]\n      if (value instanceof Error) {\n        return value\n      }\n    }\n  }\n\n  return undefined\n}\n\nfunction getMessageForObject(exception: Record<string, unknown>): string {\n  if ('name' in exception && typeof exception.name === 'string') {\n    let message = `'${exception.name}' captured as exception`\n\n    if ('message' in exception && typeof exception.message === 'string') {\n      message += ` with message '${exception.message}'`\n    }\n\n    return message\n  } else if ('message' in exception && typeof exception.message === 'string') {\n    return exception.message\n  }\n\n  const keys = extractExceptionKeysForMessage(exception)\n\n  // Some ErrorEvent instances do not have an `error` property, which is why they are not handled before\n  // We still want to try to get a decent message for these cases\n  if (isErrorEvent(exception)) {\n    return `Event \\`ErrorEvent\\` captured as exception with message \\`${exception.message}\\``\n  }\n\n  const className = getObjectClassName(exception)\n\n  return `${className && className !== 'Object' ? `'${className}'` : 'Object'} captured as exception with keys: ${keys}`\n}\n\nfunction getObjectClassName(obj: unknown): string | undefined | void {\n  try {\n    const prototype: unknown | null = Object.getPrototypeOf(obj)\n    return prototype ? prototype.constructor.name : undefined\n  } catch (e) {\n    // ignore errors here\n  }\n}\n\n/**\n * Given any captured exception, extract its keys and create a sorted\n * and truncated list that will be used inside the event message.\n * eg. `Non-error exception captured with keys: foo, bar, baz`\n */\nfunction extractExceptionKeysForMessage(exception: Record<string, unknown>, maxLength: number = 40): string {\n  const keys = Object.keys(convertToPlainObject(exception))\n  keys.sort()\n\n  const firstKey = keys[0]\n\n  if (!firstKey) {\n    return '[object has no keys]'\n  }\n\n  if (firstKey.length >= maxLength) {\n    return truncate(firstKey, maxLength)\n  }\n\n  for (let includedKeys = keys.length; includedKeys > 0; includedKeys--) {\n    const serialized = keys.slice(0, includedKeys).join(', ')\n    if (serialized.length > maxLength) {\n      continue\n    }\n    if (includedKeys === keys.length) {\n      return serialized\n    }\n    return truncate(serialized, maxLength)\n  }\n\n  return ''\n}\n\nfunction truncate(str: string, max: number = 0): string {\n  if (typeof str !== 'string' || max === 0) {\n    return str\n  }\n  return str.length <= max ? str : `${str.slice(0, max)}...`\n}\n\n/**\n * Transforms any `Error` or `Event` into a plain object with all of their enumerable properties, and some of their\n * non-enumerable properties attached.\n *\n * @param value Initial source that we have to transform in order for it to be usable by the serializer\n * @returns An Event or Error turned into an object - or the value argument itself, when value is neither an Event nor\n *  an Error.\n */\nfunction convertToPlainObject<V>(value: V):\n  | {\n      [ownProps: string]: unknown\n      type: string\n      target: string\n      currentTarget: string\n      detail?: unknown\n    }\n  | {\n      [ownProps: string]: unknown\n      message: string\n      name: string\n      stack?: string\n    }\n  | V {\n  if (isError(value)) {\n    return {\n      message: value.message,\n      name: value.name,\n      stack: value.stack,\n      ...getOwnProperties(value),\n    }\n  } else if (isEvent(value)) {\n    const newObj: {\n      [ownProps: string]: unknown\n      type: string\n      target: string\n      currentTarget: string\n      detail?: unknown\n    } = {\n      type: value.type,\n      target: serializeEventTarget(value.target),\n      currentTarget: serializeEventTarget(value.currentTarget),\n      ...getOwnProperties(value),\n    }\n\n    // TODO: figure out why this fails typing (I think CustomEvent is only supported in Node 19 onwards)\n    // if (typeof CustomEvent !== 'undefined' && isInstanceOf(value, CustomEvent)) {\n    //   newObj.detail = (value as unknown as CustomEvent).detail\n    // }\n\n    return newObj\n  } else {\n    return value\n  }\n}\n\n/** Filters out all but an object's own properties */\nfunction getOwnProperties(obj: unknown): { [key: string]: unknown } {\n  if (typeof obj === 'object' && obj !== null) {\n    const extractedProps: { [key: string]: unknown } = {}\n    for (const property in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, property)) {\n        extractedProps[property] = (obj as Record<string, unknown>)[property]\n      }\n    }\n    return extractedProps\n  } else {\n    return {}\n  }\n}\n\n/** Creates a string representation of the target of an `Event` object */\nfunction serializeEventTarget(target: unknown): string {\n  try {\n    return Object.prototype.toString.call(target)\n  } catch (_oO) {\n    return '<unknown>'\n  }\n}\n\n/**\n * Extracts stack frames from the error and builds an Exception\n */\nasync function exceptionFromError(stackParser: StackParser, error: Error): Promise<Exception> {\n  const exception: Exception = {\n    type: error.name || error.constructor.name,\n    value: error.message,\n  }\n\n  const frames = await addSourceContext(parseStackFrames(stackParser, error))\n  if (frames.length) {\n    exception.stacktrace = { frames, type: 'raw' }\n  }\n\n  return exception\n}\n\n/**\n * Extracts stack frames from the error.stack string\n */\nfunction parseStackFrames(stackParser: StackParser, error: Error): StackFrame[] {\n  return stackParser(error.stack || '', 1)\n}\n","// copied and adapted from https://github.com/getsentry/sentry-javascript/blob/41fef4b10f3a644179b77985f00f8696c908539f/packages/browser/src/stack-parsers.ts\n// 💖open source\n\nimport { posix, sep, dirname } from 'node:path'\nimport { StackFrame, StackLineParser, StackLineParserFn, StackParser } from './types'\n\ntype GetModuleFn = (filename: string | undefined) => string | undefined\n\n// This was originally forked from https://github.com/csnover/TraceKit, and was largely\n// re-written as part of raven - js.\n//\n// This code was later copied to the JavaScript mono - repo and further modified and\n// refactored over the years.\n\n// Copyright (c) 2013 Onur Can Cakmak onur.cakmak@gmail.com and all TraceKit contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of this\n// software and associated documentation files(the 'Software'), to deal in the Software\n// without restriction, including without limitation the rights to use, copy, modify,\n// merge, publish, distribute, sublicense, and / or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to the following\n// conditions:\n//\n// The above copyright notice and this permission notice shall be included in all copies\n// or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,\n// INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A\n// PARTICULAR PURPOSE AND NONINFRINGEMENT.IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n// HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF\n// CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE\n// OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nconst WEBPACK_ERROR_REGEXP = /\\(error: (.*)\\)/\nconst STACKTRACE_FRAME_LIMIT = 50\n\nconst UNKNOWN_FUNCTION = '?'\n\n/** Node Stack line parser */\nexport function node(getModule?: GetModuleFn): StackLineParserFn {\n  const FILENAME_MATCH = /^\\s*[-]{4,}$/\n  const FULL_MATCH = /at (?:async )?(?:(.+?)\\s+\\()?(?:(.+):(\\d+):(\\d+)?|([^)]+))\\)?/\n\n  return (line: string) => {\n    const lineMatch = line.match(FULL_MATCH)\n\n    if (lineMatch) {\n      let object: string | undefined\n      let method: string | undefined\n      let functionName: string | undefined\n      let typeName: string | undefined\n      let methodName: string | undefined\n\n      if (lineMatch[1]) {\n        functionName = lineMatch[1]\n\n        let methodStart = functionName.lastIndexOf('.')\n        if (functionName[methodStart - 1] === '.') {\n          methodStart--\n        }\n\n        if (methodStart > 0) {\n          object = functionName.slice(0, methodStart)\n          method = functionName.slice(methodStart + 1)\n          const objectEnd = object.indexOf('.Module')\n          if (objectEnd > 0) {\n            functionName = functionName.slice(objectEnd + 1)\n            object = object.slice(0, objectEnd)\n          }\n        }\n        typeName = undefined\n      }\n\n      if (method) {\n        typeName = object\n        methodName = method\n      }\n\n      if (method === '<anonymous>') {\n        methodName = undefined\n        functionName = undefined\n      }\n\n      if (functionName === undefined) {\n        methodName = methodName || UNKNOWN_FUNCTION\n        functionName = typeName ? `${typeName}.${methodName}` : methodName\n      }\n\n      let filename = lineMatch[2]?.startsWith('file://') ? lineMatch[2].slice(7) : lineMatch[2]\n      const isNative = lineMatch[5] === 'native'\n\n      // If it's a Windows path, trim the leading slash so that `/C:/foo` becomes `C:/foo`\n      if (filename?.match(/\\/[A-Z]:/)) {\n        filename = filename.slice(1)\n      }\n\n      if (!filename && lineMatch[5] && !isNative) {\n        filename = lineMatch[5]\n      }\n\n      return {\n        filename: filename ? decodeURI(filename) : undefined,\n        module: getModule ? getModule(filename) : undefined,\n        function: functionName,\n        lineno: _parseIntOrUndefined(lineMatch[3]),\n        colno: _parseIntOrUndefined(lineMatch[4]),\n        in_app: filenameIsInApp(filename || '', isNative),\n        platform: 'node:javascript',\n      }\n    }\n\n    if (line.match(FILENAME_MATCH)) {\n      return {\n        filename: line,\n        platform: 'node:javascript',\n      }\n    }\n\n    return undefined\n  }\n}\n\n/**\n * Does this filename look like it's part of the app code?\n */\nexport function filenameIsInApp(filename: string, isNative: boolean = false): boolean {\n  const isInternal =\n    isNative ||\n    (filename &&\n      // It's not internal if it's an absolute linux path\n      !filename.startsWith('/') &&\n      // It's not internal if it's an absolute windows path\n      !filename.match(/^[A-Z]:/) &&\n      // It's not internal if the path is starting with a dot\n      !filename.startsWith('.') &&\n      // It's not internal if the frame has a protocol. In node, this is usually the case if the file got pre-processed with a bundler like webpack\n      !filename.match(/^[a-zA-Z]([a-zA-Z0-9.\\-+])*:\\/\\//)) // Schema from: https://stackoverflow.com/a/3641782\n\n  // in_app is all that's not an internal Node function or a module within node_modules\n  // note that isNative appears to return true even for node core libraries\n  // see https://github.com/getsentry/raven-node/issues/176\n\n  return !isInternal && filename !== undefined && !filename.includes('node_modules/')\n}\n\nfunction _parseIntOrUndefined(input: string | undefined): number | undefined {\n  return parseInt(input || '', 10) || undefined\n}\n\nexport function nodeStackLineParser(getModule?: GetModuleFn): StackLineParser {\n  return [90, node(getModule)]\n}\n\nexport const defaultStackParser: StackParser = createStackParser(nodeStackLineParser(createGetModuleFromFilename()))\n\n/** Creates a function that gets the module name from a filename */\nexport function createGetModuleFromFilename(\n  basePath: string = process.argv[1] ? dirname(process.argv[1]) : process.cwd(),\n  isWindows: boolean = sep === '\\\\'\n): (filename: string | undefined) => string | undefined {\n  const normalizedBase = isWindows ? normalizeWindowsPath(basePath) : basePath\n\n  return (filename: string | undefined) => {\n    if (!filename) {\n      return\n    }\n\n    const normalizedFilename = isWindows ? normalizeWindowsPath(filename) : filename\n\n    // eslint-disable-next-line prefer-const\n    let { dir, base: file, ext } = posix.parse(normalizedFilename)\n\n    if (ext === '.js' || ext === '.mjs' || ext === '.cjs') {\n      file = file.slice(0, ext.length * -1)\n    }\n\n    // The file name might be URI-encoded which we want to decode to\n    // the original file name.\n    const decodedFile = decodeURIComponent(file)\n\n    if (!dir) {\n      // No dirname whatsoever\n      dir = '.'\n    }\n\n    const n = dir.lastIndexOf('/node_modules')\n    if (n > -1) {\n      return `${dir.slice(n + 14).replace(/\\//g, '.')}:${decodedFile}`\n    }\n\n    // Let's see if it's a part of the main module\n    // To be a part of main module, it has to share the same base\n    if (dir.startsWith(normalizedBase)) {\n      const moduleName = dir.slice(normalizedBase.length + 1).replace(/\\//g, '.')\n      return moduleName ? `${moduleName}:${decodedFile}` : decodedFile\n    }\n\n    return decodedFile\n  }\n}\n\n/** normalizes Windows paths */\nfunction normalizeWindowsPath(path: string): string {\n  return path\n    .replace(/^[A-Z]:/, '') // remove Windows-style prefix\n    .replace(/\\\\/g, '/') // replace all `\\` instances with `/`\n}\n\nexport function createStackParser(...parsers: StackLineParser[]): StackParser {\n  const sortedParsers = parsers.sort((a, b) => a[0] - b[0]).map((p) => p[1])\n\n  return (stack: string, skipFirstLines: number = 0): StackFrame[] => {\n    const frames: StackFrame[] = []\n    const lines = stack.split('\\n')\n\n    for (let i = skipFirstLines; i < lines.length; i++) {\n      const line = lines[i] as string\n      // Ignore lines over 1kb as they are unlikely to be stack frames.\n      if (line.length > 1024) {\n        continue\n      }\n\n      // https://github.com/getsentry/sentry-javascript/issues/5459\n      // Remove webpack (error: *) wrappers\n      const cleanedLine = WEBPACK_ERROR_REGEXP.test(line) ? line.replace(WEBPACK_ERROR_REGEXP, '$1') : line\n\n      // https://github.com/getsentry/sentry-javascript/issues/7813\n      // Skip Error: lines\n      if (cleanedLine.match(/\\S*Error: /)) {\n        continue\n      }\n\n      for (const parser of sortedParsers) {\n        const frame = parser(cleanedLine)\n\n        if (frame) {\n          frames.push(frame)\n          break\n        }\n      }\n\n      if (frames.length >= STACKTRACE_FRAME_LIMIT) {\n        break\n      }\n    }\n\n    return reverseAndStripFrames(frames)\n  }\n}\n\nexport function reverseAndStripFrames(stack: ReadonlyArray<StackFrame>): StackFrame[] {\n  if (!stack.length) {\n    return []\n  }\n\n  const localStack = Array.from(stack)\n\n  localStack.reverse()\n\n  return localStack.slice(0, STACKTRACE_FRAME_LIMIT).map((frame) => ({\n    ...frame,\n    filename: frame.filename || getLastStackFrame(localStack).filename,\n    function: frame.function || UNKNOWN_FUNCTION,\n  }))\n}\n\nfunction getLastStackFrame(arr: StackFrame[]): StackFrame {\n  return arr[arr.length - 1] || {}\n}\n","import { EventHint } from './extensions/error-tracking/types'\nimport { addUncaughtExceptionListener, addUnhandledRejectionListener } from './extensions/error-tracking/autocapture'\nimport { PostHog, PostHogOptions } from './posthog-node'\nimport { uuidv7 } from 'posthog-core/src/vendor/uuidv7'\nimport { propertiesFromUnknownInput } from './extensions/error-tracking/error-conversion'\nimport { EventMessage } from './types'\nimport { defaultStackParser } from './extensions/error-tracking/stack-trace'\n\nconst SHUTDOWN_TIMEOUT = 2000\n\nexport default class ErrorTracking {\n  private client: PostHog\n  private _exceptionAutocaptureEnabled: boolean\n\n  static async captureException(\n    client: PostHog,\n    error: unknown,\n    hint: EventHint,\n    distinctId?: string,\n    additionalProperties?: Record<string | number, any>\n  ): Promise<void> {\n    const properties: EventMessage['properties'] = { ...additionalProperties }\n\n    // Given stateless nature of Node SDK we capture exceptions using personless processing when no\n    // user can be determined because a distinct_id is not provided e.g. exception autocapture\n    if (!distinctId) {\n      properties.$process_person_profile = false\n    }\n\n    const exceptionProperties = await propertiesFromUnknownInput(defaultStackParser, error, hint)\n\n    client.capture({\n      event: '$exception',\n      distinctId: distinctId || uuidv7(),\n      properties: {\n        ...exceptionProperties,\n        ...properties,\n      },\n    })\n  }\n\n  constructor(client: PostHog, options: PostHogOptions) {\n    this.client = client\n    this._exceptionAutocaptureEnabled = options.enableExceptionAutocapture || false\n\n    this.startAutocaptureIfEnabled()\n  }\n\n  private startAutocaptureIfEnabled(): void {\n    if (this.isEnabled()) {\n      addUncaughtExceptionListener(this.onException.bind(this), this.onFatalError.bind(this))\n      addUnhandledRejectionListener(this.onException.bind(this))\n    }\n  }\n\n  private onException(exception: unknown, hint: EventHint): void {\n    ErrorTracking.captureException(this.client, exception, hint)\n  }\n\n  private async onFatalError(): Promise<void> {\n    await this.client.shutdown(SHUTDOWN_TIMEOUT)\n  }\n\n  isEnabled(): boolean {\n    return !this.client.isDisabled && this._exceptionAutocaptureEnabled\n  }\n}\n","import { version } from '../package.json'\n\nimport {\n  JsonType,\n  PostHogCoreOptions,\n  PostHogCoreStateless,\n  PostHogDecideResponse,\n  PostHogFetchOptions,\n  PostHogFetchResponse,\n  PostHogFlagsAndPayloadsResponse,\n  PostHogPersistedProperty,\n} from '../../posthog-core/src'\nimport { PostHogMemoryStorage } from '../../posthog-core/src/storage-memory'\nimport { EventMessage, GroupIdentifyMessage, IdentifyMessage, PostHogNodeV1 } from './types'\nimport { FeatureFlagsPoller } from './feature-flags'\nimport fetch from './fetch'\nimport ErrorTracking from './error-tracking'\n\nexport type PostHogOptions = PostHogCoreOptions & {\n  persistence?: 'memory'\n  personalApiKey?: string\n  privacyMode?: boolean\n  enableExceptionAutocapture?: boolean\n  // The interval in milliseconds between polls for refreshing feature flag definitions. Defaults to 30 seconds.\n  featureFlagsPollingInterval?: number\n  // Maximum size of cache that deduplicates $feature_flag_called calls per user.\n  maxCacheSize?: number\n  fetch?: (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n}\n\n// Standard local evaluation rate limit is 600 per minute (10 per second),\n// so the fastest a poller should ever be set is 100ms.\nexport const MINIMUM_POLLING_INTERVAL = 100\nexport const THIRTY_SECONDS = 30 * 1000\nexport const SIXTY_SECONDS = 60 * 1000\nconst MAX_CACHE_SIZE = 50 * 1000\n\n// The actual exported Nodejs API.\nexport class PostHog extends PostHogCoreStateless implements PostHogNodeV1 {\n  private _memoryStorage = new PostHogMemoryStorage()\n\n  private featureFlagsPoller?: FeatureFlagsPoller\n  protected errorTracking: ErrorTracking\n  private maxCacheSize: number\n  public readonly options: PostHogOptions\n\n  distinctIdHasSentFlagCalls: Record<string, string[]>\n\n  constructor(apiKey: string, options: PostHogOptions = {}) {\n    super(apiKey, options)\n\n    this.options = options\n\n    this.options.featureFlagsPollingInterval =\n      typeof options.featureFlagsPollingInterval === 'number'\n        ? Math.max(options.featureFlagsPollingInterval, MINIMUM_POLLING_INTERVAL)\n        : THIRTY_SECONDS\n\n    if (options.personalApiKey) {\n      if (options.personalApiKey.includes('phc_')) {\n        throw new Error(\n          'Your Personal API key is invalid. These keys are prefixed with \"phx_\" and can be created in PostHog project settings.'\n        )\n      }\n\n      this.featureFlagsPoller = new FeatureFlagsPoller({\n        pollingInterval: this.options.featureFlagsPollingInterval,\n        personalApiKey: options.personalApiKey,\n        projectApiKey: apiKey,\n        timeout: options.requestTimeout ?? 10000, // 10 seconds\n        host: this.host,\n        fetch: options.fetch,\n        onError: (err: Error) => {\n          this._events.emit('error', err)\n        },\n        customHeaders: this.getCustomHeaders(),\n      })\n    }\n    this.errorTracking = new ErrorTracking(this, options)\n    this.distinctIdHasSentFlagCalls = {}\n    this.maxCacheSize = options.maxCacheSize || MAX_CACHE_SIZE\n  }\n\n  getPersistedProperty(key: PostHogPersistedProperty): any | undefined {\n    return this._memoryStorage.getProperty(key)\n  }\n\n  setPersistedProperty(key: PostHogPersistedProperty, value: any | null): void {\n    return this._memoryStorage.setProperty(key, value)\n  }\n\n  fetch(url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse> {\n    return this.options.fetch ? this.options.fetch(url, options) : fetch(url, options)\n  }\n\n  getLibraryId(): string {\n    return 'posthog-node'\n  }\n  getLibraryVersion(): string {\n    return version\n  }\n  getCustomUserAgent(): string {\n    return `${this.getLibraryId()}/${this.getLibraryVersion()}`\n  }\n\n  enable(): Promise<void> {\n    return super.optIn()\n  }\n\n  disable(): Promise<void> {\n    return super.optOut()\n  }\n\n  debug(enabled: boolean = true): void {\n    super.debug(enabled)\n    this.featureFlagsPoller?.debug(enabled)\n  }\n\n  capture({\n    distinctId,\n    event,\n    properties,\n    groups,\n    sendFeatureFlags,\n    timestamp,\n    disableGeoip,\n    uuid,\n  }: EventMessage): void {\n    const _capture = (props: EventMessage['properties']): void => {\n      super.captureStateless(distinctId, event, props, { timestamp, disableGeoip, uuid })\n    }\n\n    const _getFlags = async (\n      distinctId: EventMessage['distinctId'],\n      groups: EventMessage['groups'],\n      disableGeoip: EventMessage['disableGeoip']\n    ): Promise<PostHogDecideResponse['featureFlags'] | undefined> => {\n      return (await super.getFeatureFlagsStateless(distinctId, groups, undefined, undefined, disableGeoip)).flags\n    }\n\n    // :TRICKY: If we flush, or need to shut down, to not lose events we want this promise to resolve before we flush\n    const capturePromise = Promise.resolve()\n      .then(async () => {\n        if (sendFeatureFlags) {\n          // If we are sending feature flags, we need to make sure we have the latest flags\n          // return await super.getFeatureFlagsStateless(distinctId, groups, undefined, undefined, disableGeoip)\n          return await _getFlags(distinctId, groups, disableGeoip)\n        }\n\n        if (event === '$feature_flag_called') {\n          // If we're capturing a $feature_flag_called event, we don't want to enrich the event with cached flags that may be out of date.\n          return {}\n        }\n\n        if ((this.featureFlagsPoller?.featureFlags?.length || 0) > 0) {\n          // Otherwise we may as well check for the flags locally and include them if they are already loaded\n          const groupsWithStringValues: Record<string, string> = {}\n          for (const [key, value] of Object.entries(groups || {})) {\n            groupsWithStringValues[key] = String(value)\n          }\n\n          return await this.getAllFlags(distinctId, {\n            groups: groupsWithStringValues,\n            disableGeoip,\n            onlyEvaluateLocally: true,\n          })\n        }\n        return {}\n      })\n      .then((flags) => {\n        // Derive the relevant flag properties to add\n        const additionalProperties: Record<string, any> = {}\n        if (flags) {\n          for (const [feature, variant] of Object.entries(flags)) {\n            additionalProperties[`$feature/${feature}`] = variant\n          }\n        }\n        const activeFlags = Object.keys(flags || {}).filter((flag) => flags?.[flag] !== false)\n        if (activeFlags.length > 0) {\n          additionalProperties['$active_feature_flags'] = activeFlags\n        }\n\n        return additionalProperties\n      })\n      .catch(() => {\n        // Something went wrong getting the flag info - we should capture the event anyways\n        return {}\n      })\n      .then((additionalProperties) => {\n        // No matter what - capture the event\n        _capture({ ...additionalProperties, ...properties, $groups: groups })\n      })\n\n    this.addPendingPromise(capturePromise)\n  }\n\n  identify({ distinctId, properties, disableGeoip }: IdentifyMessage): void {\n    // Catch properties passed as $set and move them to the top level\n\n    // promote $set and $set_once to top level\n    const userPropsOnce = properties?.$set_once\n    delete properties?.$set_once\n\n    // if no $set is provided we assume all properties are $set\n    const userProps = properties?.$set || properties\n\n    super.identifyStateless(\n      distinctId,\n      {\n        $set: userProps,\n        $set_once: userPropsOnce,\n      },\n      { disableGeoip }\n    )\n  }\n\n  alias(data: { distinctId: string; alias: string; disableGeoip?: boolean }): void {\n    super.aliasStateless(data.alias, data.distinctId, undefined, { disableGeoip: data.disableGeoip })\n  }\n\n  async getFeatureFlag(\n    key: string,\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      sendFeatureFlagEvents?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<string | boolean | undefined> {\n    const { groups, disableGeoip } = options || {}\n    let { onlyEvaluateLocally, sendFeatureFlagEvents, personProperties, groupProperties } = options || {}\n\n    const adjustedProperties = this.addLocalPersonAndGroupProperties(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    personProperties = adjustedProperties.allPersonProperties\n    groupProperties = adjustedProperties.allGroupProperties\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n    if (sendFeatureFlagEvents == undefined) {\n      sendFeatureFlagEvents = true\n    }\n\n    let response = await this.featureFlagsPoller?.getFeatureFlag(\n      key,\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    const flagWasLocallyEvaluated = response !== undefined\n    let requestId = undefined\n    if (!flagWasLocallyEvaluated && !onlyEvaluateLocally) {\n      const remoteResponse = await super.getFeatureFlagStateless(\n        key,\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n      response = remoteResponse.response\n      requestId = remoteResponse.requestId\n    }\n\n    const featureFlagReportedKey = `${key}_${response}`\n\n    if (\n      sendFeatureFlagEvents &&\n      (!(distinctId in this.distinctIdHasSentFlagCalls) ||\n        !this.distinctIdHasSentFlagCalls[distinctId].includes(featureFlagReportedKey))\n    ) {\n      if (Object.keys(this.distinctIdHasSentFlagCalls).length >= this.maxCacheSize) {\n        this.distinctIdHasSentFlagCalls = {}\n      }\n      if (Array.isArray(this.distinctIdHasSentFlagCalls[distinctId])) {\n        this.distinctIdHasSentFlagCalls[distinctId].push(featureFlagReportedKey)\n      } else {\n        this.distinctIdHasSentFlagCalls[distinctId] = [featureFlagReportedKey]\n      }\n      this.capture({\n        distinctId,\n        event: '$feature_flag_called',\n        properties: {\n          $feature_flag: key,\n          $feature_flag_response: response,\n          locally_evaluated: flagWasLocallyEvaluated,\n          [`$feature/${key}`]: response,\n          $feature_flag_request_id: requestId,\n        },\n        groups,\n        disableGeoip,\n      })\n    }\n    return response\n  }\n\n  async getFeatureFlagPayload(\n    key: string,\n    distinctId: string,\n    matchValue?: string | boolean,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      sendFeatureFlagEvents?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<JsonType | undefined> {\n    const { groups, disableGeoip } = options || {}\n    let { onlyEvaluateLocally, sendFeatureFlagEvents, personProperties, groupProperties } = options || {}\n\n    const adjustedProperties = this.addLocalPersonAndGroupProperties(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    personProperties = adjustedProperties.allPersonProperties\n    groupProperties = adjustedProperties.allGroupProperties\n\n    let response = undefined\n\n    // Try to get match value locally if not provided\n    if (!matchValue) {\n      matchValue = await this.getFeatureFlag(key, distinctId, {\n        ...options,\n        onlyEvaluateLocally: true,\n      })\n    }\n\n    if (matchValue) {\n      response = await this.featureFlagsPoller?.computeFeatureFlagPayloadLocally(key, matchValue)\n    }\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n    if (sendFeatureFlagEvents == undefined) {\n      sendFeatureFlagEvents = true\n    }\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n\n    const payloadWasLocallyEvaluated = response !== undefined\n\n    if (!payloadWasLocallyEvaluated && !onlyEvaluateLocally) {\n      response = await super.getFeatureFlagPayloadStateless(\n        key,\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    }\n    return response\n  }\n\n  async getRemoteConfigPayload(flagKey: string): Promise<JsonType | undefined> {\n    return (await this.featureFlagsPoller?._requestRemoteConfigPayload(flagKey))?.json()\n  }\n\n  async isFeatureEnabled(\n    key: string,\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      sendFeatureFlagEvents?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<boolean | undefined> {\n    const feat = await this.getFeatureFlag(key, distinctId, options)\n    if (feat === undefined) {\n      return undefined\n    }\n    return !!feat || false\n  }\n\n  async getAllFlags(\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<Record<string, string | boolean>> {\n    const response = await this.getAllFlagsAndPayloads(distinctId, options)\n    return response.featureFlags\n  }\n\n  async getAllFlagsAndPayloads(\n    distinctId: string,\n    options?: {\n      groups?: Record<string, string>\n      personProperties?: Record<string, string>\n      groupProperties?: Record<string, Record<string, string>>\n      onlyEvaluateLocally?: boolean\n      disableGeoip?: boolean\n    }\n  ): Promise<PostHogFlagsAndPayloadsResponse> {\n    const { groups, disableGeoip } = options || {}\n    let { onlyEvaluateLocally, personProperties, groupProperties } = options || {}\n\n    const adjustedProperties = this.addLocalPersonAndGroupProperties(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    personProperties = adjustedProperties.allPersonProperties\n    groupProperties = adjustedProperties.allGroupProperties\n\n    // set defaults\n    if (onlyEvaluateLocally == undefined) {\n      onlyEvaluateLocally = false\n    }\n\n    const localEvaluationResult = await this.featureFlagsPoller?.getAllFlagsAndPayloads(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties\n    )\n\n    let featureFlags = {}\n    let featureFlagPayloads = {}\n    let fallbackToDecide = true\n    if (localEvaluationResult) {\n      featureFlags = localEvaluationResult.response\n      featureFlagPayloads = localEvaluationResult.payloads\n      fallbackToDecide = localEvaluationResult.fallbackToDecide\n    }\n\n    if (fallbackToDecide && !onlyEvaluateLocally) {\n      const remoteEvaluationResult = await super.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n      featureFlags = {\n        ...featureFlags,\n        ...(remoteEvaluationResult.flags || {}),\n      }\n      featureFlagPayloads = {\n        ...featureFlagPayloads,\n        ...(remoteEvaluationResult.payloads || {}),\n      }\n    }\n\n    return { featureFlags, featureFlagPayloads }\n  }\n\n  groupIdentify({ groupType, groupKey, properties, distinctId, disableGeoip }: GroupIdentifyMessage): void {\n    super.groupIdentifyStateless(groupType, groupKey, properties, { disableGeoip }, distinctId)\n  }\n\n  async reloadFeatureFlags(): Promise<void> {\n    await this.featureFlagsPoller?.loadFeatureFlags(true)\n  }\n\n  async shutdown(shutdownTimeoutMs?: number): Promise<void> {\n    this.featureFlagsPoller?.stopPoller()\n    return super.shutdown(shutdownTimeoutMs)\n  }\n\n  private addLocalPersonAndGroupProperties(\n    distinctId: string,\n    groups?: Record<string, string>,\n    personProperties?: Record<string, string>,\n    groupProperties?: Record<string, Record<string, string>>\n  ): { allPersonProperties: Record<string, string>; allGroupProperties: Record<string, Record<string, string>> } {\n    const allPersonProperties = { distinct_id: distinctId, ...(personProperties || {}) }\n\n    const allGroupProperties: Record<string, Record<string, string>> = {}\n    if (groups) {\n      for (const groupName of Object.keys(groups)) {\n        allGroupProperties[groupName] = {\n          $group_key: groups[groupName],\n          ...(groupProperties?.[groupName] || {}),\n        }\n      }\n    }\n\n    return { allPersonProperties, allGroupProperties }\n  }\n\n  captureException(error: unknown, distinctId?: string, additionalProperties?: Record<string | number, any>): void {\n    const syntheticException = new Error('PostHog syntheticException')\n    ErrorTracking.captureException(this, error, { syntheticException }, distinctId, additionalProperties)\n  }\n}\n","/**\n * @file Adapted from [posthog-js](https://github.com/PostHog/posthog-js/blob/8157df935a4d0e71d2fefef7127aa85ee51c82d1/src/extensions/sentry-integration.ts) with modifications for the Node SDK.\n */\n/**\n * Integrate Sentry with PostHog. This will add a direct link to the person in Sentry, and an $exception event in PostHog.\n *\n * ### Usage\n *\n *     Sentry.init({\n *          dsn: 'https://example',\n *          integrations: [\n *              new PostHogSentryIntegration(posthog)\n *          ]\n *     })\n *\n *     Sentry.setTag(PostHogSentryIntegration.POSTHOG_ID_TAG, 'some distinct id');\n *\n * @param {Object} [posthog] The posthog object\n * @param {string} [organization] Optional: The Sentry organization, used to send a direct link from PostHog to Sentry\n * @param {Number} [projectId] Optional: The Sentry project id, used to send a direct link from PostHog to Sentry\n * @param {string} [prefix] Optional: Url of a self-hosted sentry instance (default: https://sentry.io/organizations/)\n * @param {SeverityLevel[] | '*'} [severityAllowList] Optional: send events matching the provided levels. Use '*' to send all events (default: ['error'])\n */\n\nimport { SeverityLevel } from 'posthog-node/src/extensions/error-tracking/types'\nimport { type PostHog } from '../posthog-node'\n\n// NOTE - we can't import from @sentry/types because it changes frequently and causes clashes\n// We only use a small subset of the types, so we can just define the integration overall and use any for the rest\n\n// import {\n//     Event as _SentryEvent,\n//     EventProcessor as _SentryEventProcessor,\n//     Exception as _SentryException,\n//     Hub as _SentryHub,\n//     Primitive as _SentryPrimitive,\n//     Integration as _SentryIntegration,\n//     IntegrationClass as _SentryIntegrationClass,\n// } from '@sentry/types'\n\n// Uncomment the above and comment the below to get type checking for development\n\ntype _SentryEvent = any\ntype _SentryEventProcessor = any\ntype _SentryException = any\ntype _SentryHub = any\ntype _SentryPrimitive = any\n\ninterface _SentryIntegration {\n  name: string\n  processEvent(event: _SentryEvent): _SentryEvent\n}\n\ninterface _SentryIntegrationClass {\n  name: string\n  setupOnce(addGlobalEventProcessor: (callback: _SentryEventProcessor) => void, getCurrentHub: () => _SentryHub): void\n}\n\ninterface SentryExceptionProperties {\n  $sentry_event_id?: string\n  $sentry_exception?: { values?: _SentryException[] }\n  $sentry_exception_message?: string\n  $sentry_exception_type?: string\n  $sentry_tags: { [key: string]: _SentryPrimitive }\n  $sentry_url?: string\n}\n\nexport type SentryIntegrationOptions = {\n  organization?: string\n  projectId?: number\n  prefix?: string\n  severityAllowList?: SeverityLevel[] | '*'\n}\n\nconst NAME = 'posthog-node'\n\nexport function createEventProcessor(\n  _posthog: PostHog,\n  { organization, projectId, prefix, severityAllowList = ['error'] }: SentryIntegrationOptions = {}\n): (event: _SentryEvent) => _SentryEvent {\n  return (event) => {\n    const shouldProcessLevel = severityAllowList === '*' || severityAllowList.includes(event.level)\n    if (!shouldProcessLevel) {\n      return event\n    }\n    if (!event.tags) {\n      event.tags = {}\n    }\n\n    // Get the PostHog user ID from a specific tag, which users can set on their Sentry scope as they need.\n    const userId = event.tags[PostHogSentryIntegration.POSTHOG_ID_TAG]\n    if (userId === undefined) {\n      // If we can't find a user ID, don't bother linking the event. We won't be able to send anything meaningful to PostHog without it.\n      return event\n    }\n\n    const uiHost = _posthog.options.host ?? 'https://us.i.posthog.com'\n    const personUrl = new URL(`/project/${_posthog.apiKey}/person/${userId}`, uiHost).toString()\n\n    event.tags['PostHog Person URL'] = personUrl\n\n    const exceptions: _SentryException[] = event.exception?.values || []\n\n    const exceptionList = exceptions.map((exception) => ({\n      ...exception,\n      stacktrace: exception.stacktrace\n        ? {\n            ...exception.stacktrace,\n            type: 'raw',\n            frames: (exception.stacktrace.frames || []).map((frame: any) => {\n              return { ...frame, platform: 'node:javascript' }\n            }),\n          }\n        : undefined,\n    }))\n\n    const properties: SentryExceptionProperties & {\n      // two properties added to match any exception auto-capture\n      // added manually to avoid any dependency on the lazily loaded content\n      $exception_message: any\n      $exception_type: any\n      $exception_list: any\n      $exception_personURL: string\n      $exception_level: SeverityLevel\n    } = {\n      // PostHog Exception Properties,\n      $exception_message: exceptions[0]?.value || event.message,\n      $exception_type: exceptions[0]?.type,\n      $exception_personURL: personUrl,\n      $exception_level: event.level,\n      $exception_list: exceptionList,\n      // Sentry Exception Properties\n      $sentry_event_id: event.event_id,\n      $sentry_exception: event.exception,\n      $sentry_exception_message: exceptions[0]?.value || event.message,\n      $sentry_exception_type: exceptions[0]?.type,\n      $sentry_tags: event.tags,\n    }\n\n    if (organization && projectId) {\n      properties['$sentry_url'] =\n        (prefix || 'https://sentry.io/organizations/') +\n        organization +\n        '/issues/?project=' +\n        projectId +\n        '&query=' +\n        event.event_id\n    }\n\n    _posthog.capture({ event: '$exception', distinctId: userId, properties })\n\n    return event\n  }\n}\n\n// V8 integration - function based\nexport function sentryIntegration(_posthog: PostHog, options?: SentryIntegrationOptions): _SentryIntegration {\n  const processor = createEventProcessor(_posthog, options)\n  return {\n    name: NAME,\n    processEvent(event) {\n      return processor(event)\n    },\n  }\n}\n\n// V7 integration - class based\nexport class PostHogSentryIntegration implements _SentryIntegrationClass {\n  public readonly name = NAME\n\n  public static readonly POSTHOG_ID_TAG = 'posthog_distinct_id'\n\n  public setupOnce: (\n    addGlobalEventProcessor: (callback: _SentryEventProcessor) => void,\n    getCurrentHub: () => _SentryHub\n  ) => void\n\n  constructor(_posthog: PostHog, organization?: string, prefix?: string, severityAllowList?: SeverityLevel[] | '*') {\n    // setupOnce gets called by Sentry when it intializes the plugin\n    this.name = NAME\n    this.setupOnce = function (\n      addGlobalEventProcessor: (callback: _SentryEventProcessor) => void,\n      getCurrentHub: () => _SentryHub\n    ) {\n      const projectId = getCurrentHub()?.getClient()?.getDsn()?.projectId\n      addGlobalEventProcessor(\n        createEventProcessor(_posthog, {\n          organization,\n          projectId,\n          prefix,\n          severityAllowList,\n        })\n      )\n    }\n  }\n}\n","import type * as http from 'node:http'\nimport { uuidv7 } from 'posthog-core/src/vendor/uuidv7'\nimport ErrorTracking from '../error-tracking'\nimport { PostHog } from '../posthog-node'\n\ntype ExpressMiddleware = (req: http.IncomingMessage, res: http.ServerResponse, next: () => void) => void\n\ntype ExpressErrorMiddleware = (\n  error: MiddlewareError,\n  req: http.IncomingMessage,\n  res: http.ServerResponse,\n  next: (error: MiddlewareError) => void\n) => void\n\ninterface MiddlewareError extends Error {\n  status?: number | string\n  statusCode?: number | string\n  status_code?: number | string\n  output?: {\n    statusCode?: number | string\n  }\n}\n\nexport function setupExpressErrorHandler(\n  _posthog: PostHog,\n  app: {\n    use: (middleware: ExpressMiddleware | ExpressErrorMiddleware) => unknown\n  }\n): void {\n  app.use((error: MiddlewareError, _, __, next: (error: MiddlewareError) => void): void => {\n    const hint = { mechanism: { type: 'middleware', handled: false } }\n    // Given stateless nature of Node SDK we capture exceptions using personless processing\n    // when no user can be determined e.g. in the case of exception autocapture\n    ErrorTracking.captureException(_posthog, error, hint, uuidv7(), { $process_person_profile: false })\n    next(error)\n  })\n}\n"],"names":["_fetch","getFetch","axios","require","url","options","res","request","headers","method","toLowerCase","data","body","signal","validateStatus","status","text","json","LONG_SCALE","NULL_VALUES_ALLOWED_OPERATORS","ClientError","Error","constructor","message","captureStackTrace","name","Object","setPrototypeOf","prototype","InconclusiveMatchError","FeatureFlagsPoller","pollingInterval","personalApiKey","projectApiKey","timeout","host","customHeaders","debugMode","lastRequestWasAuthenticationError","authenticationErrorCount","featureFlags","featureFlagsByKey","groupTypeMapping","cohorts","loadedSuccessfullyOnce","poller","undefined","fetch","onError","loadFeatureFlags","debug","enabled","logMsgIfDebug","fn","getFeatureFlag","key","distinctId","groups","personProperties","groupProperties","response","featureFlag","flag","computeFlagLocally","console","e","computeFeatureFlagPayloadLocally","matchValue","filters","payloads","toString","JSON","parse","getAllFlagsAndPayloads","fallbackToDecide","length","map","matchPayload","ensure_experience_continuity","active","flagFilters","aggregation_group_type_index","groupName","String","warn","focusedGroupProperties","matchFeatureFlagProperties","properties","flagConditions","isInconclusive","result","sortedFlagConditions","sort","conditionA","conditionB","AHasVariantOverride","variant","BHasVariantOverride","condition","isConditionMatch","variantOverride","flagVariants","multivariate","variants","some","getMatchingVariant","rolloutPercentage","rollout_percentage","warnFunction","msg","prop","propertyType","type","matches","matchCohort","matchProperty","_hash","hashValue","matchingVariant","variantLookupTable","find","valueMin","valueMax","lookupTable","multivariates","forEach","push","forceReload","_loadFeatureFlags","getPollingInterval","Math","min","SIXTY_SECONDS","clearTimeout","setTimeout","_requestFeatureFlagDefinitions","responseJson","stringify","flags","reduce","acc","curr","group_type_mapping","err","getPersonalApiKeyRequestOptions","Authorization","abortTimeout","controller","AbortController","safeSetTimeout","abort","stopPoller","_requestRemoteConfigPayload","flagKey","salt","sha1Hash","createHash","update","parseInt","digest","slice","property","propertyValues","value","operator","overrideValue","includes","computeExactMatch","Array","isArray","val","compare","lhs","rhs","isValidRegex","match","parsedValue","parseFloat","parsedDate","relativeDateParseForFeatureFlagMatching","convertToDateTime","overrideDate","cohortProperties","cohortId","propertyGroup","matchPropertyGroup","propertyGroupType","values","errorMatchingLocally","negation","regex","RegExp","Date","date","isNaN","valueOf","parsedDt","toISOString","number","interval","setUTCHours","getUTCHours","setUTCDate","getUTCDate","setUTCMonth","getUTCMonth","setUTCFullYear","getUTCFullYear","makeUncaughtExceptionHandler","captureFn","onFatalFn","calledFatalError","assign","error","userProvidedListenersCount","global","process","listeners","filter","listener","_posthogErrorHandler","processWouldExit","mechanism","handled","addUncaughtExceptionListener","on","addUnhandledRejectionListener","reason","isEvent","candidate","Event","isInstanceOf","isPlainObject","isBuiltin","isError","call","base","isErrorEvent","event","className","ReduceableCache","_maxSize","_cache","Map","get","delete","set","size","keys","next","LRU_FILE_CONTENTS_CACHE","LRU_FILE_CONTENTS_FS_READ_FAILED","DEFAULT_LINES_OF_CONTEXT","MAX_CONTEXTLINES_COLNO","MAX_CONTEXTLINES_LINENO","addSourceContext","frames","filesToLines","i","frame","filename","lineno","shouldSkipContextLinesForFile","shouldSkipContextLinesForFrame","filesToLinesOutput","files","readlinePromises","file","filesToLineRanges","a","b","ranges","makeLineReaderRanges","every","r","rangeExistsInContentCache","cache","emplace","getContextLinesFromFile","Promise","all","catch","addSourceContextToFrames","path","output","resolve","stream","createReadStream","lineReaded","createInterface","input","destroyStreamAndResolve","destroy","lineNumber","currentRangeIndex","range","rangeStart","rangeEnd","onStreamError","close","removeAllListeners","line","snipLine","context_line","contents","addContextToFrame","pre_context","makeRangeStart","clearLineContext","end","makeRangeEnd","post_context","startsWith","endsWith","colno","lines","current","makeContextRange","out","max","newLine","lineLength","start","propertiesFromUnknownInput","stackParser","hint","providedMechanism","getError","exception","exceptionFromError","$exception_list","synthetic","errorFromProp","getErrorPropertyFromObject","getMessageForObject","ex","syntheticException","obj","hasOwnProperty","extractExceptionKeysForMessage","getObjectClassName","getPrototypeOf","maxLength","convertToPlainObject","firstKey","truncate","includedKeys","serialized","join","str","stack","getOwnProperties","newObj","target","serializeEventTarget","currentTarget","extractedProps","_oO","parseStackFrames","stacktrace","WEBPACK_ERROR_REGEXP","STACKTRACE_FRAME_LIMIT","UNKNOWN_FUNCTION","node","getModule","FILENAME_MATCH","FULL_MATCH","lineMatch","object","functionName","typeName","methodName","methodStart","lastIndexOf","objectEnd","indexOf","isNative","decodeURI","module","function","_parseIntOrUndefined","in_app","filenameIsInApp","platform","isInternal","nodeStackLineParser","defaultStackParser","createStackParser","createGetModuleFromFilename","basePath","argv","dirname","cwd","isWindows","sep","normalizedBase","normalizeWindowsPath","normalizedFilename","dir","ext","posix","decodedFile","decodeURIComponent","n","replace","moduleName","parsers","sortedParsers","p","skipFirstLines","split","cleanedLine","test","parser","reverseAndStripFrames","localStack","from","reverse","getLastStackFrame","arr","SHUTDOWN_TIMEOUT","ErrorTracking","captureException","client","additionalProperties","$process_person_profile","exceptionProperties","capture","uuidv7","_exceptionAutocaptureEnabled","enableExceptionAutocapture","startAutocaptureIfEnabled","isEnabled","onException","bind","onFatalError","shutdown","isDisabled","MINIMUM_POLLING_INTERVAL","THIRTY_SECONDS","MAX_CACHE_SIZE","PostHog","PostHogCoreStateless","apiKey","_memoryStorage","PostHogMemoryStorage","featureFlagsPollingInterval","featureFlagsPoller","requestTimeout","_events","emit","getCustomHeaders","errorTracking","distinctIdHasSentFlagCalls","maxCacheSize","getPersistedProperty","getProperty","setPersistedProperty","setProperty","getLibraryId","getLibraryVersion","version","getCustomUserAgent","enable","optIn","disable","optOut","sendFeatureFlags","timestamp","disableGeoip","uuid","_capture","props","captureStateless","_getFlags","getFeatureFlagsStateless","capturePromise","then","groupsWithStringValues","entries","getAllFlags","onlyEvaluateLocally","feature","activeFlags","$groups","addPendingPromise","identify","userPropsOnce","$set_once","userProps","$set","identifyStateless","alias","aliasStateless","sendFeatureFlagEvents","adjustedProperties","addLocalPersonAndGroupProperties","allPersonProperties","allGroupProperties","flagWasLocallyEvaluated","requestId","remoteResponse","getFeatureFlagStateless","featureFlagReportedKey","$feature_flag","$feature_flag_response","locally_evaluated","$feature_flag_request_id","getFeatureFlagPayload","payloadWasLocallyEvaluated","getFeatureFlagPayloadStateless","getRemoteConfigPayload","isFeatureEnabled","feat","localEvaluationResult","featureFlagPayloads","remoteEvaluationResult","getFeatureFlagsAndPayloadsStateless","groupIdentify","groupType","groupKey","groupIdentifyStateless","reloadFeatureFlags","shutdownTimeoutMs","distinct_id","$group_key","NAME","createEventProcessor","_posthog","organization","projectId","prefix","severityAllowList","shouldProcessLevel","level","tags","userId","PostHogSentryIntegration","POSTHOG_ID_TAG","uiHost","personUrl","URL","exceptions","exceptionList","$exception_message","$exception_type","$exception_personURL","$exception_level","$sentry_event_id","event_id","$sentry_exception","$sentry_exception_message","$sentry_exception_type","$sentry_tags","sentryIntegration","processor","processEvent","setupOnce","addGlobalEventProcessor","getCurrentHub","getClient","getDsn","setupExpressErrorHandler","app","use","_","__"],"mappings":"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"}